{"version":3,"file":"static/js/336.6f57173b.js","mappings":"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","sources":["../node_modules/@forge/api/out/api/ari.js","../node_modules/@forge/api/out/api/errors.js","../node_modules/@forge/api/out/api/fetch.js","../node_modules/@forge/api/out/api/index.js","../node_modules/@forge/api/out/api/polyfill-response.js","../node_modules/@forge/api/out/api/remote.js","../node_modules/@forge/api/out/api/runtime.js","../node_modules/@forge/api/out/authorization/index.js","../node_modules/@forge/api/out/index.js","../node_modules/@forge/api/out/privacy/index.js","../node_modules/@forge/api/out/runtime/fetch-and-storage.js","../node_modules/@forge/api/out/safeUrl.js","../node_modules/@forge/api/out/webTrigger.js","../node_modules/@forge/auth/out/api.js","../node_modules/@forge/auth/out/confluence/index.js","../node_modules/@forge/auth/out/confluence/permissions.js","../node_modules/@forge/auth/out/index.js","../node_modules/@forge/auth/out/jira/index.js","../node_modules/@forge/auth/out/jira/permissions.js","../node_modules/@forge/bridge/out/bridge.js","../node_modules/@forge/bridge/out/errors.js","../node_modules/@forge/bridge/out/events/events.js","../node_modules/@forge/bridge/out/events/index.js","../node_modules/@forge/bridge/out/fetch/fetch.js","../node_modules/@forge/bridge/out/fetch/index.js","../node_modules/@forge/bridge/out/flag/flag.js","../node_modules/@forge/bridge/out/flag/index.js","../node_modules/@forge/bridge/out/i18n/index.js","../node_modules/@forge/bridge/out/index.js","../node_modules/@forge/bridge/out/internal/index.js","../node_modules/@forge/bridge/out/invoke-remote/index.js","../node_modules/@forge/bridge/out/invoke-remote/invoke-remote.js","../node_modules/@forge/bridge/out/invoke/index.js","../node_modules/@forge/bridge/out/invoke/invoke.js","../node_modules/@forge/bridge/out/modal/index.js","../node_modules/@forge/bridge/out/modal/modal.js","../node_modules/@forge/bridge/out/router/index.js","../node_modules/@forge/bridge/out/router/router.js","../node_modules/@forge/bridge/out/utils/blobParser.js","../node_modules/@forge/bridge/out/utils/index.js","../node_modules/@forge/bridge/out/view/changeWindowTitle.js","../node_modules/@forge/bridge/out/view/close.js","../node_modules/@forge/bridge/out/view/createHistory.js","../node_modules/@forge/bridge/out/view/frame.js","../node_modules/@forge/bridge/out/view/getContext.js","../node_modules/@forge/bridge/out/view/index.js","../node_modules/@forge/bridge/out/view/refresh.js","../node_modules/@forge/bridge/out/view/submit.js","../node_modules/@forge/bridge/out/view/theme.js","../node_modules/@forge/bridge/out/view/view.js","../node_modules/@forge/i18n/out/constants.js","../node_modules/@forge/i18n/out/ensureLocale.js","../node_modules/@forge/i18n/out/index.js","../node_modules/@forge/i18n/out/moduleI18nHelper.js","../node_modules/@forge/i18n/out/translationValueGetter.js","../node_modules/@forge/i18n/out/translationsGetter.js","../node_modules/@forge/i18n/out/translator.js","../node_modules/@forge/i18n/out/types.js","../node_modules/@forge/storage/out/conditions.js","../node_modules/@forge/storage/out/eap/conditions.js","../node_modules/@forge/storage/out/entity-storage/index.js","../node_modules/@forge/storage/out/entity-storage/query-api.js","../node_modules/@forge/storage/out/entity-storage/storage-builder.js","../node_modules/@forge/storage/out/errors.js","../node_modules/@forge/storage/out/global-storage.js","../node_modules/@forge/storage/out/gql-queries.js","../node_modules/@forge/storage/out/index.js","../node_modules/@forge/storage/out/query-api.js","../node_modules/@forge/storage/out/query-interfaces.js","../node_modules/@forge/util/packages/ari/index.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_root.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/eq.js","../node_modules/lodash/get.js","../node_modules/lodash/isArray.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/isObject.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/node-fetch/browser.js","../node_modules/tslib/tslib.es6.mjs"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInstallationAri = exports.getEnvironmentAri = exports.getAppAri = void 0;\nconst ari_1 = require(\"@forge/util/packages/ari\");\nconst getAppAri = (appId) => ari_1.EcosystemAppAri.create({ appId });\nexports.getAppAri = getAppAri;\nconst getEnvironmentAri = (appId, environmentId) => ari_1.EcosystemEnvironmentAri.create({ appId, environmentId });\nexports.getEnvironmentAri = getEnvironmentAri;\nconst getInstallationAri = (installationId) => ari_1.EcosystemInstallationAri.create({ installationId });\nexports.getInstallationAri = getInstallationAri;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProxyRequestError = exports.InvalidRemoteError = exports.NeedsAuthenticationError = exports.InvalidWorkspaceRequestedError = exports.RequestProductNotAllowedError = exports.ProductEndpointNotAllowedError = exports.ExternalEndpointNotAllowedError = exports.NotAllowedError = exports.FetchError = exports.HttpError = exports.isExpectedError = exports.isHostedCodeError = exports.isForgePlatformError = exports.PROXY_ERR = exports.INVALID_REMOTE_ERR = exports.NEEDS_AUTHENTICATION_ERR = exports.FUNCTION_FETCH_ERR = exports.REQUEST_EGRESS_ALLOWLIST_ERR = exports.FUNCTION_ERR = void 0;\nexports.FUNCTION_ERR = 'FUNCTION_ERR';\nexports.REQUEST_EGRESS_ALLOWLIST_ERR = 'REQUEST_EGRESS_ALLOWLIST_ERR';\nexports.FUNCTION_FETCH_ERR = 'FUNCTION_FETCH_ERR';\nexports.NEEDS_AUTHENTICATION_ERR = 'NEEDS_AUTHENTICATION_ERR';\nexports.INVALID_REMOTE_ERR = 'INVALID_REMOTE_ERR';\nexports.PROXY_ERR = 'PROXY_ERR';\nfunction isForgePlatformError(err) {\n    return [exports.REQUEST_EGRESS_ALLOWLIST_ERR, exports.FUNCTION_FETCH_ERR, exports.NEEDS_AUTHENTICATION_ERR, exports.PROXY_ERR].includes(err.name);\n}\nexports.isForgePlatformError = isForgePlatformError;\nfunction isHostedCodeError(err) {\n    return [exports.FUNCTION_ERR, exports.REQUEST_EGRESS_ALLOWLIST_ERR, exports.FUNCTION_FETCH_ERR, exports.NEEDS_AUTHENTICATION_ERR].includes(typeof err === 'string' ? err : err.name);\n}\nexports.isHostedCodeError = isHostedCodeError;\nfunction isExpectedError(err) {\n    return err.name === exports.NEEDS_AUTHENTICATION_ERR && !!err.options?.isExpectedError;\n}\nexports.isExpectedError = isExpectedError;\nclass HttpError extends Error {\n    status;\n    constructor(message) {\n        super(message);\n    }\n}\nexports.HttpError = HttpError;\nclass FetchError extends Error {\n    constructor(cause) {\n        super(cause);\n        this.stack = undefined;\n        this.name = exports.FUNCTION_FETCH_ERR;\n    }\n}\nexports.FetchError = FetchError;\nclass NotAllowedError extends HttpError {\n    constructor(message) {\n        super(message);\n        this.stack = undefined;\n        this.name = exports.REQUEST_EGRESS_ALLOWLIST_ERR;\n        this.status = 403;\n    }\n}\nexports.NotAllowedError = NotAllowedError;\nclass ExternalEndpointNotAllowedError extends NotAllowedError {\n    constructor(failedURL) {\n        super(`URL not included in the external fetch backend permissions: ${failedURL}. Visit go.atlassian.com/forge-egress for more information.`);\n    }\n}\nexports.ExternalEndpointNotAllowedError = ExternalEndpointNotAllowedError;\nclass ProductEndpointNotAllowedError extends NotAllowedError {\n    constructor(failedURL) {\n        super(`URL not allowed: ${failedURL}.`);\n    }\n}\nexports.ProductEndpointNotAllowedError = ProductEndpointNotAllowedError;\nclass RequestProductNotAllowedError extends NotAllowedError {\n    constructor(requestedProduct, invocationProduct) {\n        super(`Request ${requestedProduct} is not allowed from ${invocationProduct} context.`);\n    }\n}\nexports.RequestProductNotAllowedError = RequestProductNotAllowedError;\nclass InvalidWorkspaceRequestedError extends NotAllowedError {\n    constructor(failedURL) {\n        super(`Invalid workspace requested in URL: ${failedURL}.`);\n    }\n}\nexports.InvalidWorkspaceRequestedError = InvalidWorkspaceRequestedError;\nclass NeedsAuthenticationError extends HttpError {\n    serviceKey;\n    options;\n    constructor(error, serviceKey, options) {\n        super(error);\n        this.serviceKey = serviceKey;\n        this.options = options;\n        this.stack = undefined;\n        this.name = exports.NEEDS_AUTHENTICATION_ERR;\n        this.status = 401;\n    }\n}\nexports.NeedsAuthenticationError = NeedsAuthenticationError;\nclass InvalidRemoteError extends HttpError {\n    remoteKey;\n    constructor(error, remoteKey) {\n        super(error);\n        this.remoteKey = remoteKey;\n        this.name = exports.INVALID_REMOTE_ERR;\n        this.status = 400;\n    }\n}\nexports.InvalidRemoteError = InvalidRemoteError;\nclass ProxyRequestError extends HttpError {\n    status;\n    errorCode;\n    constructor(status, errorCode) {\n        super(`Forge platform failed to process runtime HTTP request - ${status} - ${errorCode}`);\n        this.status = status;\n        this.errorCode = errorCode;\n        this.name = exports.PROXY_ERR;\n    }\n}\nexports.ProxyRequestError = ProxyRequestError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSandboxRuntimeAPI = exports.getNodeRuntimeAPI = exports.addMagicAgent = exports.handleProxyResponseErrors = exports.getForgeProxyError = exports.createRemoteUrlWithPath = exports.fetchRemote = exports.__fetchProduct = void 0;\nconst tslib_1 = require(\"tslib\");\nconst node_fetch_1 = tslib_1.__importStar(require(\"node-fetch\"));\nconst _1 = require(\".\");\nconst runtime_1 = require(\"./runtime\");\nconst polyfill_response_1 = require(\"./polyfill-response\");\nconst errors_1 = require(\"./errors\");\nasync function wrapInMetrics(options, cb) {\n    const metrics = (0, runtime_1.__getRuntime)().metrics;\n    metrics.counter(options.name, options.tags).incr();\n    const timer = metrics.timing(options.name, options.tags).measure();\n    try {\n        return await cb();\n    }\n    finally {\n        timer.stop();\n    }\n}\nfunction __fetchProduct(args) {\n    return async (path, init) => {\n        const url = productURL(args.remote, path);\n        init = (0, exports.addMagicAgent)(init);\n        const defaultHeaders = getDefaultHeaders(init.headers, args);\n        init.headers = { ...init.headers, ...defaultHeaders };\n        const response = await (0, node_fetch_1.default)(url, init);\n        (0, exports.handleProxyResponseErrors)(response);\n        return response;\n    };\n}\nexports.__fetchProduct = __fetchProduct;\nfunction fetchRemote(args) {\n    return async (path, init) => {\n        const remoteUrl = createRemoteUrlWithPath(`https://${args.remote}`, path);\n        init = (0, exports.addMagicAgent)(init, 'EXTERNAL_AUTH_REQUEST');\n        init.headers = {\n            ...init.headers,\n            authorization: `Forge user ${args.provider} ${args.account}`\n        };\n        const response = await (0, node_fetch_1.default)(remoteUrl, init);\n        (0, exports.handleProxyResponseErrors)(response);\n        return response;\n    };\n}\nexports.fetchRemote = fetchRemote;\nfunction createRemoteUrlWithPath(baseUrl, path) {\n    const remoteUrl = new URL(baseUrl);\n    const url = new URL(path, remoteUrl);\n    if (url.hostname !== remoteUrl.hostname) {\n        throw new Error(`Invalid path provided ${path}`);\n    }\n    remoteUrl.searchParams.append('path', path);\n    return remoteUrl;\n}\nexports.createRemoteUrlWithPath = createRemoteUrlWithPath;\nfunction getDefaultRemote(provider) {\n    const externalAuthProvider = findExternalAuthProviderConfigOrThrow(provider);\n    if (!externalAuthProvider.remotes.length) {\n        throw new Error(`Missing remote config for provider ${provider}`);\n    }\n    return externalAuthProvider.remotes[0].key;\n}\nfunction findExternalAuthProviderConfigOrThrow(provider) {\n    const { externalAuth } = (0, runtime_1.__getRuntime)();\n    const externalAuthProvider = externalAuth?.find((externalAuthMetaData) => {\n        return externalAuthMetaData.service === provider;\n    });\n    if (!externalAuthProvider) {\n        throw new Error(`Bad provider or missing config for provider ${provider}`);\n    }\n    return externalAuthProvider;\n}\nconst ATLASSIAN_TOKEN_SERVICE_KEY = 'atlassian-token-service-key';\nconst getForgeProxyError = (response) => response.headers.get('forge-proxy-error');\nexports.getForgeProxyError = getForgeProxyError;\nconst handleProxyResponseErrors = (response) => {\n    const errorReason = (0, exports.getForgeProxyError)(response);\n    if (errorReason) {\n        if (errorReason === 'NEEDS_AUTHENTICATION_ERR') {\n            throw new errors_1.NeedsAuthenticationError('Authentication Required', ATLASSIAN_TOKEN_SERVICE_KEY);\n        }\n        throw new errors_1.ProxyRequestError(response.status, errorReason);\n    }\n};\nexports.handleProxyResponseErrors = handleProxyResponseErrors;\nconst getDefaultHeaders = (headersInit, args) => {\n    let defaultHeaders = {};\n    const headers = new node_fetch_1.Headers(headersInit);\n    if (!headers.has('Content-Type')) {\n        defaultHeaders = { 'Content-Type': 'application/json' };\n    }\n    if (!headers.has('authorization')) {\n        defaultHeaders = { ...defaultHeaders, authorization: `Forge ${args.provider}` };\n    }\n    return defaultHeaders;\n};\nfunction productURL(remote, path) {\n    if (!path.startsWith('/')) {\n        path = '/' + path;\n    }\n    return `https://${remote}${path}`;\n}\nfunction lazyThrowNeedsAuthenticationError(serviceKey) {\n    return async (scopes) => wrapInMetrics({ name: 'api.asUser.withProvider.requestCredentials', tags: { passingScopes: String(!!scopes) } }, async () => {\n        throw new errors_1.NeedsAuthenticationError('Authentication Required', serviceKey, { scopes, isExpectedError: true });\n    });\n}\nfunction buildExternalAuthAccountsInfo(provider, remote) {\n    const { accounts } = findExternalAuthProviderConfigOrThrow(provider);\n    const buildAccountModel = (account) => {\n        const { externalAccountId: id, ...rest } = account;\n        return { ...rest, id };\n    };\n    const buildExternalAuthAccountMethods = (account, outboundAuthAccountId) => ({\n        hasCredentials: async (scopes) => wrapInMetrics({ name: 'api.asUser.withProvider.hasCredentials', tags: { passingScopes: String(!!scopes) } }, async () => !scopes || scopes.every((scope) => account.scopes.includes(scope))),\n        requestCredentials: lazyThrowNeedsAuthenticationError(provider),\n        getAccount: async () => wrapInMetrics({ name: 'api.asUser.withProvider.getAccount' }, async () => account),\n        fetch: (0, _1.wrapWithRouteUnwrapper)(fetchRemote({ provider, remote: remote ?? getDefaultRemote(provider), account: outboundAuthAccountId }))\n    });\n    return accounts.map((account) => {\n        const authAccount = buildAccountModel(account);\n        return {\n            account: authAccount,\n            methods: buildExternalAuthAccountMethods(authAccount, account.id)\n        };\n    });\n}\nconst addMagicAgent = (init, agentOverride) => ({\n    ...init,\n    agent: (agentOverride ?? 'FORGE_PRODUCT_REQUEST')\n});\nexports.addMagicAgent = addMagicAgent;\nconst throwNotImplementedError = () => {\n    throw new Error('not implemented');\n};\nconst withProvider = (provider, remote) => {\n    const accountsInfo = buildExternalAuthAccountsInfo(provider, remote);\n    const defaultAccountInfo = accountsInfo.length ? accountsInfo[0] : undefined;\n    const lazyThrowNoValidCredentialsError = () => {\n        return (url) => {\n            throw new Error(`Fetch failed for ${remote ? `remote '${remote}', ` : ''}provider '${provider}', path '${url}' no credentials previously requested`);\n        };\n    };\n    return {\n        hasCredentials: async (scopes) => {\n            return defaultAccountInfo\n                ? await defaultAccountInfo.methods.hasCredentials(scopes)\n                : await wrapInMetrics({ name: 'api.asUser.withProvider.hasCredentials', tags: { passingScopes: String(!!scopes) } }, async () => false);\n        },\n        getAccount: async () => wrapInMetrics({ name: 'api.asUser.withProvider.getAccount' }, async () => {\n            return defaultAccountInfo ? defaultAccountInfo.account : undefined;\n        }),\n        requestCredentials: lazyThrowNeedsAuthenticationError(provider),\n        listCredentials: throwNotImplementedError,\n        listAccounts: async () => wrapInMetrics({ name: 'api.asUser.withProvider.listAccounts' }, async () => {\n            return accountsInfo.map(({ account }) => account);\n        }),\n        asAccount: (externalAccountId) => {\n            const accountInfo = accountsInfo.find(({ account }) => account.id === externalAccountId);\n            if (!accountInfo) {\n                throw new Error(`No account with ID ${externalAccountId} found for provider ${provider}`);\n            }\n            return accountInfo.methods;\n        },\n        fetch: defaultAccountInfo ? defaultAccountInfo.methods.fetch : lazyThrowNoValidCredentialsError()\n    };\n};\nfunction getNodeRuntimeAPI() {\n    return {\n        fetch: (0, _1.wrapWithRouteUnwrapper)(node_fetch_1.default),\n        requestJira: (0, _1.wrapRequestProduct)(__fetchProduct({ provider: 'none', remote: 'jira' })),\n        requestConfluence: (0, _1.wrapRequestProduct)(__fetchProduct({ provider: 'none', remote: 'confluence' })),\n        requestBitbucket: (0, _1.wrapRequestProduct)(__fetchProduct({ provider: 'none', remote: 'bitbucket' })),\n        asUser: () => ({\n            requestJira: (0, _1.wrapRequestProduct)(__fetchProduct({ provider: 'user', remote: 'jira' })),\n            requestConfluence: (0, _1.wrapRequestProduct)(__fetchProduct({ provider: 'user', remote: 'confluence' })),\n            requestBitbucket: (0, _1.wrapRequestProduct)(__fetchProduct({ provider: 'user', remote: 'bitbucket' })),\n            requestGraph: (0, _1.wrapRequestGraph)(__fetchProduct({ provider: 'user', remote: 'stargate' })),\n            requestConnectedData: (0, _1.wrapRequestConnectedData)(__fetchProduct({ provider: 'user', remote: 'stargate' })),\n            withProvider\n        }),\n        asApp: () => ({\n            requestJira: (0, _1.wrapRequestProduct)(__fetchProduct({ provider: 'app', remote: 'jira' })),\n            requestConfluence: (0, _1.wrapRequestProduct)(__fetchProduct({ provider: 'app', remote: 'confluence' })),\n            requestBitbucket: (0, _1.wrapRequestProduct)(__fetchProduct({ provider: 'app', remote: 'bitbucket' })),\n            requestGraph: (0, _1.wrapRequestGraph)(__fetchProduct({ provider: 'app', remote: 'stargate' })),\n            requestConnectedData: (0, _1.wrapRequestConnectedData)(__fetchProduct({ provider: 'app', remote: 'stargate' }))\n        })\n    };\n}\nexports.getNodeRuntimeAPI = getNodeRuntimeAPI;\nfunction getSandboxRuntimeAPI(api) {\n    return (0, _1.wrapFetchApiMethods)(api, polyfill_response_1.transformResponse);\n}\nexports.getSandboxRuntimeAPI = getSandboxRuntimeAPI;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wrapFetchApiMethods = exports.wrapWithRouteUnwrapper = exports.wrapRequestProduct = exports.wrapRequestConnectedData = exports.wrapRequestGraph = void 0;\nconst safeUrl_1 = require(\"../safeUrl\");\nconst wrapRequestGraph = (requestGraphApi) => (query, variables, headers = {}) => requestGraphApi('/graphql', {\n    method: 'POST',\n    headers: { ...headers, 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n        query,\n        ...(variables ? { variables } : {})\n    })\n});\nexports.wrapRequestGraph = wrapRequestGraph;\nconst wrapRequestConnectedData = (fetch) => (path, init) => {\n    const safeUrl = (0, safeUrl_1.requireSafeUrl)(path);\n    return fetch(`/connected-data/${safeUrl.value.replace(/^\\/+/, '')}`, init);\n};\nexports.wrapRequestConnectedData = wrapRequestConnectedData;\nconst wrapRequestProduct = (requestProduct) => (path, init) => {\n    const safeUrl = (0, safeUrl_1.requireSafeUrl)(path);\n    return requestProduct(safeUrl.value, init);\n};\nexports.wrapRequestProduct = wrapRequestProduct;\nconst wrapWithRouteUnwrapper = (fetch) => (path, init) => {\n    const stringPath = (0, safeUrl_1.isRoute)(path) ? path.value : path;\n    return fetch(stringPath, init);\n};\nexports.wrapWithRouteUnwrapper = wrapWithRouteUnwrapper;\nconst wrapFetchApiMethods = (api, wrapFetch) => {\n    return {\n        fetch: (0, exports.wrapWithRouteUnwrapper)(wrapFetch(api.fetch)),\n        requestJira: (0, exports.wrapRequestProduct)(wrapFetch(api.requestJira)),\n        requestConfluence: (0, exports.wrapRequestProduct)(wrapFetch(api.requestConfluence)),\n        requestBitbucket: (0, exports.wrapRequestProduct)(wrapFetch(api.requestBitbucket)),\n        asUser: () => ({\n            requestJira: (0, exports.wrapRequestProduct)(wrapFetch(api.asUser().requestJira)),\n            requestConfluence: (0, exports.wrapRequestProduct)(wrapFetch(api.asUser().requestConfluence)),\n            requestBitbucket: (0, exports.wrapRequestProduct)(wrapFetch(api.asUser().requestBitbucket)),\n            requestGraph: (0, exports.wrapRequestGraph)(wrapFetch(api.asUser().requestGraph)),\n            requestConnectedData: (0, exports.wrapRequestConnectedData)(wrapFetch(api.asUser().requestConnectedData)),\n            withProvider: (provider, remoteName, tokenId) => {\n                const { hasCredentials, requestCredentials, listCredentials, fetch: withProviderFetch, listAccounts, getAccount, asAccount } = api.asUser().withProvider(provider, remoteName, tokenId);\n                const wrappedRequestRemote = (0, exports.wrapWithRouteUnwrapper)(wrapFetch(withProviderFetch));\n                return {\n                    hasCredentials,\n                    requestCredentials,\n                    listCredentials,\n                    fetch: wrappedRequestRemote,\n                    listAccounts,\n                    getAccount,\n                    asAccount\n                };\n            }\n        }),\n        asApp: () => ({\n            requestJira: (0, exports.wrapRequestProduct)(wrapFetch(api.asApp().requestJira)),\n            requestConfluence: (0, exports.wrapRequestProduct)(wrapFetch(api.asApp().requestConfluence)),\n            requestGraph: (0, exports.wrapRequestGraph)(wrapFetch(api.asApp().requestGraph)),\n            requestBitbucket: (0, exports.wrapRequestProduct)(wrapFetch(api.asApp().requestBitbucket)),\n            requestConnectedData: (0, exports.wrapRequestConnectedData)(wrapFetch(api.asApp().requestConnectedData))\n        })\n    };\n};\nexports.wrapFetchApiMethods = wrapFetchApiMethods;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformResponse = void 0;\nconst node_fetch_1 = require(\"node-fetch\");\nconst transformResponse = (fetchApi) => async (url, init) => {\n    const response = await fetchApi(url, init);\n    return {\n        ...response,\n        headers: new node_fetch_1.Headers(response.headers)\n    };\n};\nexports.transformResponse = transformResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.invokeRemote = void 0;\nconst tslib_1 = require(\"tslib\");\nconst node_fetch_1 = tslib_1.__importDefault(require(\"node-fetch\"));\nconst errors_1 = require(\"./errors\");\nconst fetch_1 = require(\"./fetch\");\nasync function invokeRemote(remoteKey, options) {\n    const { path, ...fetchOptions } = options;\n    if (!remoteKey) {\n        throw new Error('Missing remote key provided to invokeRemote');\n    }\n    if (!path) {\n        throw new Error('Missing or empty path provided to invokeRemote');\n    }\n    const url = (0, fetch_1.createRemoteUrlWithPath)('https://atl-paas.net', path);\n    url.searchParams.set('remoteKey', remoteKey);\n    const init = (0, fetch_1.addMagicAgent)(fetchOptions, 'FORGE_REMOTE_COMPUTE_REQUEST');\n    const response = await (0, node_fetch_1.default)(url, init);\n    handleResponseErrors(response, remoteKey);\n    return response;\n}\nexports.invokeRemote = invokeRemote;\nfunction handleResponseErrors(response, remoteKey) {\n    const forgeProxyError = (0, fetch_1.getForgeProxyError)(response);\n    if (forgeProxyError === 'INVALID_REMOTE') {\n        throw new errors_1.InvalidRemoteError(`Invalid remote key provided: \"${remoteKey}\"`, remoteKey);\n    }\n    (0, fetch_1.handleProxyResponseErrors)(response);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bindInvocationContext = exports.wrapInMetrics = exports.getAppContext = exports.__getRuntime = void 0;\nconst errors_1 = require(\"./errors\");\nconst node_fetch_1 = require(\"node-fetch\");\nconst ari_1 = require(\"./ari\");\nfunction __getRuntime() {\n    const runtime = global.__forge_runtime__;\n    if (!runtime) {\n        throw new Error('Forge runtime not found.');\n    }\n    return runtime;\n}\nexports.__getRuntime = __getRuntime;\nfunction getAppContext() {\n    const { appId, appVersion, environmentId, environmentType, invocationId, installationId, moduleKey, license } = __getRuntime().appContext;\n    return {\n        appAri: (0, ari_1.getAppAri)(appId),\n        appVersion,\n        environmentAri: (0, ari_1.getEnvironmentAri)(appId, environmentId),\n        environmentType,\n        installationAri: (0, ari_1.getInstallationAri)(installationId),\n        invocationId,\n        moduleKey,\n        license\n    };\n}\nexports.getAppContext = getAppContext;\nfunction wrapInMetrics(name, fn, { tags } = {}) {\n    return async (...args) => {\n        const { metrics } = __getRuntime();\n        metrics.counter(name, tags).incr();\n        const timer = metrics.timing(name, tags).measure();\n        let success = true;\n        try {\n            return await fn(...args);\n        }\n        catch (e) {\n            if (e instanceof errors_1.ProxyRequestError || e instanceof node_fetch_1.FetchError) {\n                success = false;\n            }\n            throw e;\n        }\n        finally {\n            timer.stop({ success: success.toString() });\n        }\n    };\n}\nexports.wrapInMetrics = wrapInMetrics;\nfunction bindInvocationContext(fn) {\n    const AsyncLocalStorage = require('async_hooks').AsyncLocalStorage;\n    return AsyncLocalStorage.bind(fn);\n}\nexports.bindInvocationContext = bindInvocationContext;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.authorize = void 0;\nconst auth_1 = require(\"@forge/auth\");\nconst __1 = require(\"..\");\nconst authorize = () => {\n    let accountId;\n    if (global.api) {\n        accountId = process.env.__CURRENT_USER_ACCOUNT_ID;\n    }\n    else {\n        accountId = (0, __1.__getRuntime)().aaid;\n    }\n    if (!accountId) {\n        throw new Error(`Couldn’t find the accountId of the invoking user. This API can only be used inside user-invoked modules.`);\n    }\n    return {\n        ...(0, auth_1.authorizeConfluenceWithFetch)(async (path, opts) => {\n            const res = await (0, __1.asUser)().requestConfluence((0, __1.assumeTrustedRoute)(path), opts);\n            return res.json();\n        }, accountId),\n        ...(0, auth_1.authorizeJiraWithFetch)(async (path, opts) => {\n            const res = await (0, __1.asUser)().requestJira((0, __1.assumeTrustedRoute)(path), opts);\n            return res.json();\n        }, accountId)\n    };\n};\nexports.authorize = authorize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isExpectedError = exports.isHostedCodeError = exports.isForgePlatformError = exports.FUNCTION_ERR = exports.HttpError = exports.InvalidWorkspaceRequestedError = exports.NotAllowedError = exports.RequestProductNotAllowedError = exports.ProductEndpointNotAllowedError = exports.ExternalEndpointNotAllowedError = exports.FetchError = exports.ProxyRequestError = exports.NeedsAuthenticationError = exports.bindInvocationContext = exports.__getRuntime = exports.getAppContext = exports.routeFromAbsolute = exports.assumeTrustedRoute = exports.route = exports.SortOrder = exports.FilterConditions = exports.WhereConditions = exports.startsWith = exports.createRequestStargateAsApp = exports.__fetchProduct = exports.__requestAtlassianAsUser = exports.__requestAtlassianAsApp = exports.webTrigger = exports.storage = exports.invokeRemote = exports.requestBitbucket = exports.requestConfluence = exports.requestJira = exports.fetch = exports.authorize = exports.asApp = exports.asUser = exports.privacy = void 0;\nconst storage_1 = require(\"@forge/storage\");\nconst authorization_1 = require(\"./authorization\");\nObject.defineProperty(exports, \"authorize\", { enumerable: true, get: function () { return authorization_1.authorize; } });\nconst privacy_1 = require(\"./privacy\");\nconst webTrigger_1 = require(\"./webTrigger\");\nObject.defineProperty(exports, \"webTrigger\", { enumerable: true, get: function () { return webTrigger_1.webTrigger; } });\nconst fetch_and_storage_1 = require(\"./runtime/fetch-and-storage\");\nObject.defineProperty(exports, \"__requestAtlassianAsApp\", { enumerable: true, get: function () { return fetch_and_storage_1.__requestAtlassianAsApp; } });\nObject.defineProperty(exports, \"__requestAtlassianAsUser\", { enumerable: true, get: function () { return fetch_and_storage_1.__requestAtlassianAsUser; } });\nconst remote_1 = require(\"./api/remote\");\nObject.defineProperty(exports, \"invokeRemote\", { enumerable: true, get: function () { return remote_1.invokeRemote; } });\nconst fetch_1 = require(\"./api/fetch\");\nObject.defineProperty(exports, \"__fetchProduct\", { enumerable: true, get: function () { return fetch_1.__fetchProduct; } });\nconst fetchAPI = (0, fetch_and_storage_1.getFetchAPI)();\nconst asUser = fetchAPI.asUser;\nexports.asUser = asUser;\nconst asApp = fetchAPI.asApp;\nexports.asApp = asApp;\nconst fetch = fetchAPI.fetch;\nexports.fetch = fetch;\nconst requestJira = fetchAPI.requestJira;\nexports.requestJira = requestJira;\nconst requestConfluence = fetchAPI.requestConfluence;\nexports.requestConfluence = requestConfluence;\nconst requestBitbucket = fetchAPI.requestBitbucket;\nexports.requestBitbucket = requestBitbucket;\nconst storage = (0, storage_1.getStorageInstanceWithQuery)(new storage_1.GlobalStorage(fetch_and_storage_1.getContextAri, fetch_and_storage_1.__requestAtlassianAsApp, fetch_and_storage_1.getMetrics));\nexports.storage = storage;\nconst API = {\n    ...fetchAPI,\n    invokeRemote: remote_1.invokeRemote\n};\nexports.privacy = {\n    reportPersonalData: (0, privacy_1.createReportPersonalData)(fetch_and_storage_1.__requestAtlassianAsApp)\n};\nexports.default = API;\nconst createRequestStargateAsApp = () => fetch_and_storage_1.__requestAtlassianAsApp;\nexports.createRequestStargateAsApp = createRequestStargateAsApp;\nvar storage_2 = require(\"@forge/storage\");\nObject.defineProperty(exports, \"startsWith\", { enumerable: true, get: function () { return storage_2.startsWith; } });\nObject.defineProperty(exports, \"WhereConditions\", { enumerable: true, get: function () { return storage_2.WhereConditions; } });\nObject.defineProperty(exports, \"FilterConditions\", { enumerable: true, get: function () { return storage_2.FilterConditions; } });\nObject.defineProperty(exports, \"SortOrder\", { enumerable: true, get: function () { return storage_2.SortOrder; } });\nvar safeUrl_1 = require(\"./safeUrl\");\nObject.defineProperty(exports, \"route\", { enumerable: true, get: function () { return safeUrl_1.route; } });\nObject.defineProperty(exports, \"assumeTrustedRoute\", { enumerable: true, get: function () { return safeUrl_1.assumeTrustedRoute; } });\nObject.defineProperty(exports, \"routeFromAbsolute\", { enumerable: true, get: function () { return safeUrl_1.routeFromAbsolute; } });\nvar runtime_1 = require(\"./api/runtime\");\nObject.defineProperty(exports, \"getAppContext\", { enumerable: true, get: function () { return runtime_1.getAppContext; } });\nObject.defineProperty(exports, \"__getRuntime\", { enumerable: true, get: function () { return runtime_1.__getRuntime; } });\nObject.defineProperty(exports, \"bindInvocationContext\", { enumerable: true, get: function () { return runtime_1.bindInvocationContext; } });\nvar errors_1 = require(\"./api/errors\");\nObject.defineProperty(exports, \"NeedsAuthenticationError\", { enumerable: true, get: function () { return errors_1.NeedsAuthenticationError; } });\nObject.defineProperty(exports, \"ProxyRequestError\", { enumerable: true, get: function () { return errors_1.ProxyRequestError; } });\nObject.defineProperty(exports, \"FetchError\", { enumerable: true, get: function () { return errors_1.FetchError; } });\nObject.defineProperty(exports, \"ExternalEndpointNotAllowedError\", { enumerable: true, get: function () { return errors_1.ExternalEndpointNotAllowedError; } });\nObject.defineProperty(exports, \"ProductEndpointNotAllowedError\", { enumerable: true, get: function () { return errors_1.ProductEndpointNotAllowedError; } });\nObject.defineProperty(exports, \"RequestProductNotAllowedError\", { enumerable: true, get: function () { return errors_1.RequestProductNotAllowedError; } });\nObject.defineProperty(exports, \"NotAllowedError\", { enumerable: true, get: function () { return errors_1.NotAllowedError; } });\nObject.defineProperty(exports, \"InvalidWorkspaceRequestedError\", { enumerable: true, get: function () { return errors_1.InvalidWorkspaceRequestedError; } });\nObject.defineProperty(exports, \"HttpError\", { enumerable: true, get: function () { return errors_1.HttpError; } });\nObject.defineProperty(exports, \"FUNCTION_ERR\", { enumerable: true, get: function () { return errors_1.FUNCTION_ERR; } });\nObject.defineProperty(exports, \"isForgePlatformError\", { enumerable: true, get: function () { return errors_1.isForgePlatformError; } });\nObject.defineProperty(exports, \"isHostedCodeError\", { enumerable: true, get: function () { return errors_1.isHostedCodeError; } });\nObject.defineProperty(exports, \"isExpectedError\", { enumerable: true, get: function () { return errors_1.isExpectedError; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createReportPersonalData = exports.LIMIT = exports.URL = void 0;\nexports.URL = '/app/report-accounts';\nexports.LIMIT = 90;\nconst createReportPersonalData = (requestAtlassian) => {\n    return function fetchUpdates(accounts) {\n        if (accounts.length === 0) {\n            return Promise.resolve([]);\n        }\n        const request = requestAtlassian(exports.URL, {\n            method: 'POST',\n            headers: { 'content-type': 'application/json' },\n            body: JSON.stringify({ accounts: accounts.slice(0, exports.LIMIT) })\n        }).then(async (resp) => {\n            if (resp.status === 200) {\n                return (await resp.json()).accounts;\n            }\n            if (resp.status === 204) {\n                return [];\n            }\n            return Promise.reject(resp);\n        });\n        return Promise.all([request, fetchUpdates(accounts.slice(exports.LIMIT))]).then(([first, second]) => first.concat(second));\n    };\n};\nexports.createReportPersonalData = createReportPersonalData;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.__requestAtlassianAsUser = exports.__requestAtlassianAsApp = exports.getRequestStargate = exports.getMetrics = exports.getFetchAPI = exports.getContextAri = void 0;\nconst fetch_1 = require(\"../api/fetch\");\nconst runtime_1 = require(\"../api/runtime\");\nfunction getContextAri() {\n    return global.api?.__getAppAri?.() ?? (0, runtime_1.__getRuntime)().contextAri;\n}\nexports.getContextAri = getContextAri;\nfunction getFetchAPI() {\n    const { api: sandboxAPI } = global;\n    if (sandboxAPI && Object.keys(sandboxAPI).length) {\n        return (0, fetch_1.getSandboxRuntimeAPI)(sandboxAPI);\n    }\n    else {\n        return (0, fetch_1.getNodeRuntimeAPI)();\n    }\n}\nexports.getFetchAPI = getFetchAPI;\nfunction getMetrics() {\n    if (global.api) {\n        return undefined;\n    }\n    return (0, runtime_1.__getRuntime)().metrics;\n}\nexports.getMetrics = getMetrics;\nfunction getRequestStargate(provider) {\n    if (provider !== 'app' && provider !== 'user') {\n        throw new Error(`Unsupported provider: ${provider}`);\n    }\n    const sandboxApi = global.api;\n    if (sandboxApi) {\n        switch (provider) {\n            case 'app':\n                return sandboxApi.asApp().__requestAtlassian;\n            case 'user':\n                return sandboxApi.asUser().__requestAtlassian;\n        }\n    }\n    return (0, fetch_1.__fetchProduct)({ provider, remote: 'stargate' });\n}\nexports.getRequestStargate = getRequestStargate;\nexports.__requestAtlassianAsApp = getRequestStargate('app');\nexports.__requestAtlassianAsUser = getRequestStargate('user');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assumeTrustedRoute = exports.requireSafeUrl = exports.route = exports.routeFromAbsolute = exports.isRoute = void 0;\nclass ReadonlyRoute {\n    value_;\n    constructor(value_) {\n        this.value_ = value_;\n    }\n    set value(_) {\n        throw new Error('modification of a Route is not allowed');\n    }\n    get value() {\n        return this.value_;\n    }\n}\nfunction isRoute(x) {\n    return x instanceof ReadonlyRoute;\n}\nexports.isRoute = isRoute;\nfunction routeFromAbsolute(absolutePath) {\n    const absoluteURL = new URL(absolutePath);\n    return assumeTrustedRoute(`${absoluteURL.pathname}${absoluteURL.search}`);\n}\nexports.routeFromAbsolute = routeFromAbsolute;\nconst DOUBLE_DOT = ['..', '.%2e', '%2e.', '%2e%2e', '.%2E', '%2E.', '%2E%2e'];\nconst DIRECTORY_PATH = ['/', '\\\\'];\nconst ENDS_PATH = ['?', '#'];\nfunction containsOneOf(needles, haystack) {\n    return needles.some((needle) => haystack.includes(needle));\n}\nfunction escapeParameter(parameter, mode) {\n    switch (mode) {\n        case 'path':\n            if (isRoute(parameter)) {\n                return parameter.value;\n            }\n            parameter = String(parameter);\n            if (containsOneOf(DOUBLE_DOT, parameter) ||\n                containsOneOf(ENDS_PATH, parameter) ||\n                containsOneOf(DIRECTORY_PATH, parameter)) {\n                throw new Error('Disallowing path manipulation attempt. For more information see: https://go.atlassian.com/product-fetch-api-route');\n            }\n            return parameter;\n        case 'query':\n            if (isRoute(parameter)) {\n                return encodeURIComponent(parameter.value);\n            }\n            else if (parameter instanceof URLSearchParams) {\n                return parameter.toString();\n            }\n            else {\n                return encodeURIComponent(parameter);\n            }\n    }\n}\nfunction route(template, ...parameters) {\n    let mode = 'path';\n    let result = '';\n    for (let i = 0; i < template.length; i++) {\n        const templateFragment = template[i];\n        if (containsOneOf(ENDS_PATH, templateFragment)) {\n            mode = 'query';\n        }\n        result += templateFragment;\n        if (i >= parameters.length) {\n            break;\n        }\n        result += escapeParameter(parameters[i], mode);\n    }\n    return new ReadonlyRoute(result);\n}\nexports.route = route;\nfunction requireSafeUrl(url) {\n    if (url instanceof ReadonlyRoute) {\n        return url;\n    }\n    throw new Error(`You must create your route using the 'route' export from '@forge/api'.\nSee https://go.atlassian.com/forge-fetch-route for more information.`);\n}\nexports.requireSafeUrl = requireSafeUrl;\nfunction assumeTrustedRoute(route) {\n    return new ReadonlyRoute(route);\n}\nexports.assumeTrustedRoute = assumeTrustedRoute;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.webTrigger = void 0;\nconst runtime_1 = require(\"./api/runtime\");\nconst fetch_and_storage_1 = require(\"./runtime/fetch-and-storage\");\nconst proxyGetWebTriggerURL = (0, runtime_1.wrapInMetrics)('api.getWebTriggerUrl', async (webTriggerModuleKey, forceCreate) => {\n    const runtime = (0, runtime_1.__getRuntime)();\n    const response = await (0, fetch_and_storage_1.__requestAtlassianAsApp)('/graphql', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: `\n            mutation forge_app_createWebTriggerUrl($input: WebTriggerUrlInput!, $forceCreate: Boolean) {\n              createWebTriggerUrl(input: $input, forceCreate: $forceCreate) {\n                url\n              }\n            }\n          `,\n            variables: {\n                input: {\n                    appId: runtime.appContext.appId,\n                    envId: runtime.appContext.environmentId,\n                    triggerKey: webTriggerModuleKey,\n                    contextId: runtime.contextAri\n                },\n                forceCreate\n            }\n        })\n    });\n    if (!response.ok) {\n        throw new Error(`Internal error occurred: Failed to get web trigger URL: ${response.statusText}.`);\n    }\n    const responseBody = await response.json();\n    if (!responseBody?.data?.createWebTriggerUrl?.url) {\n        throw new Error(`Internal error occurred: Failed to get web trigger URL.`);\n    }\n    return responseBody.data.createWebTriggerUrl.url;\n});\nconst proxyDeleteWebTriggerURL = (0, runtime_1.wrapInMetrics)('api.deleteWebTriggerUrl', async (webTriggerUrl) => {\n    const callDelete = async (webTriggerUrlId) => {\n        const response = await (0, fetch_and_storage_1.__requestAtlassianAsApp)('/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `\n            mutation forge_app_deleteWebTriggerUrl($id: ID!) {\n              deleteWebTriggerUrl(id: $id) {\n                success\n                message\n              }\n            }\n          `,\n                variables: {\n                    id: webTriggerUrlId\n                }\n            })\n        });\n        if (!response.ok) {\n            throw new Error(`Internal error occurred: Failed to delete web trigger URL: ${response.statusText}.`);\n        }\n        const responseBody = await response.json();\n        if (!responseBody?.data?.deleteWebTriggerUrl?.success) {\n            const errorText = responseBody?.data?.deleteWebTriggerUrl?.message || 'unknown error';\n            throw new Error(`Internal error occurred: Failed to delete web trigger URL: ${errorText}`);\n        }\n    };\n    const urlIds = await exports.webTrigger.getUrlIds(webTriggerUrl);\n    for (const urlId of urlIds) {\n        await callDelete(urlId);\n    }\n});\nconst proxyGetWebTriggerUrlIds = (0, runtime_1.wrapInMetrics)('api.getWebTriggerUrlIds', async (webTriggerUrl) => {\n    const runtime = (0, runtime_1.__getRuntime)();\n    const response = await (0, fetch_and_storage_1.__requestAtlassianAsApp)('/graphql', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: `\n            query forge_app_webTriggerUrlsByAppContext($appId: ID!, $envId: ID!, $contextId: ID!) {\n              webTriggerUrlsByAppContext(appId: $appId, envId: $envId, contextId: $contextId) {\n                id\n                url\n              }\n            }\n          `,\n            variables: {\n                appId: runtime.appContext.appId,\n                envId: runtime.appContext.environmentId,\n                contextId: runtime.contextAri\n            }\n        })\n    });\n    if (!response.ok) {\n        throw new Error(`Internal error occurred: Failed to get web trigger URLs: ${response.statusText}.`);\n    }\n    const responseBody = await response.json();\n    if (!responseBody?.data?.webTriggerUrlsByAppContext || responseBody.data.webTriggerUrlsByAppContext.length == 0) {\n        throw new Error('Internal error occurred: No web trigger URLs found');\n    }\n    const result = responseBody.data.webTriggerUrlsByAppContext\n        .filter((webTriggerResult) => webTriggerResult.url == webTriggerUrl)\n        .map((webTriggerResult) => webTriggerResult.id);\n    if (!result || result.length == 0) {\n        throw new Error('Internal error occurred: Web trigger URL matching URL not found');\n    }\n    return result;\n});\nexports.webTrigger = {\n    getUrl: async (webTriggerModuleKey, forceCreate = false) => (global.api?.webTrigger?.getUrl ?? proxyGetWebTriggerURL)(webTriggerModuleKey, forceCreate),\n    deleteUrl: async (webTriggerUrl) => (global.api?.webTrigger?.deleteUrl ?? proxyDeleteWebTriggerURL)(webTriggerUrl),\n    getUrlIds: async (webTriggerUrl) => (global.api?.webTrigger?.getUrlIds ?? proxyGetWebTriggerUrlIds)(webTriggerUrl)\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createApiMethods = void 0;\nconst fromEntries = (array) => {\n    return array.reduce((acc, [key, value]) => {\n        acc[key] = value;\n        return acc;\n    }, {});\n};\nconst createApiMethods = (methodToPermissionMap, permissionCheckFactory) => {\n    const apiMethodEntries = Object.entries(methodToPermissionMap).map(([methodName, permission]) => [methodName, permissionCheckFactory(permission)]);\n    return fromEntries(apiMethodEntries);\n};\nexports.createApiMethods = createApiMethods;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.authorizeConfluenceWithFetch = void 0;\nconst tslib_1 = require(\"tslib\");\nconst api_1 = require(\"../api\");\nconst permissions_1 = tslib_1.__importDefault(require(\"./permissions\"));\nconst checkConfluencePermissions = async (requestConfluence, accountId, contentId, permission) => {\n    const res = await requestConfluence(`/rest/api/content/${contentId}/permission/check`, {\n        method: 'post',\n        headers: { 'content-type': 'application/json' },\n        body: JSON.stringify({\n            subject: {\n                type: 'user',\n                identifier: accountId\n            },\n            operation: permission\n        })\n    });\n    return res;\n};\nconst getPermissionsCheckFactory = (requestConfluence, accountId, contentId) => (permission) => {\n    return async () => {\n        const res = await checkConfluencePermissions(requestConfluence, accountId, contentId, permission);\n        return Boolean(res === null || res === void 0 ? void 0 : res.hasPermission);\n    };\n};\nconst authorizeConfluenceWithFetch = (requestConfluence, accountId) => {\n    return {\n        onConfluenceContent: (contentId) => (0, api_1.createApiMethods)(permissions_1.default, getPermissionsCheckFactory(requestConfluence, accountId, contentId))\n    };\n};\nexports.authorizeConfluenceWithFetch = authorizeConfluenceWithFetch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst API_PERMISSIONS_MAP = {\n    canRead: 'read',\n    canUpdate: 'update',\n    canDelete: 'delete'\n};\nexports.default = API_PERMISSIONS_MAP;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.authorizeJiraWithFetch = exports.authorizeConfluenceWithFetch = void 0;\nvar confluence_1 = require(\"./confluence\");\nObject.defineProperty(exports, \"authorizeConfluenceWithFetch\", { enumerable: true, get: function () { return confluence_1.authorizeConfluenceWithFetch; } });\nvar jira_1 = require(\"./jira\");\nObject.defineProperty(exports, \"authorizeJiraWithFetch\", { enumerable: true, get: function () { return jira_1.authorizeJiraWithFetch; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.authorizeJiraWithFetch = void 0;\nconst api_1 = require(\"../api\");\nconst permissions_1 = require(\"./permissions\");\nconst arrayEquals = (a, b) => {\n    return JSON.stringify(Array.from(a.map(String)).sort()) === JSON.stringify(Array.from(b.map(String)).sort());\n};\nconst checkJiraPermissions = async (requestJira, accountId, projectPermissions) => {\n    const res = await requestJira('/rest/api/3/permissions/check', {\n        method: 'post',\n        headers: { 'content-type': 'application/json' },\n        body: JSON.stringify({\n            accountId,\n            projectPermissions\n        })\n    });\n    return res;\n};\nconst hasPermissionsForEntities = (projectPermissions, permission, type, entities) => {\n    var _a;\n    if (!entities || entities.length === 0)\n        return true;\n    const allowedEntities = (_a = projectPermissions.find((permissionResponse) => permissionResponse.permission === permission)) === null || _a === void 0 ? void 0 : _a[type];\n    return !!allowedEntities && arrayEquals(allowedEntities, entities);\n};\nconst getPermissionCheckFactory = (requestJira, accountId, type, entities) => (permission) => {\n    return async () => {\n        const { projectPermissions } = await checkJiraPermissions(requestJira, accountId, [\n            {\n                permissions: [permission],\n                [type]: entities\n            }\n        ]);\n        return hasPermissionsForEntities(projectPermissions, permission, type, entities);\n    };\n};\nconst toArray = (id) => (Array.isArray(id) ? id : [id]);\nconst authorizeJiraWithFetch = (requestJira, accountId) => {\n    return {\n        onJira: async (projectPermissionsInput) => {\n            const result = await checkJiraPermissions(requestJira, accountId, projectPermissionsInput);\n            return result.projectPermissions || [];\n        },\n        onJiraProject: (projects) => (0, api_1.createApiMethods)(permissions_1.API_PROJECTS_PERMISSIONS_MAP, getPermissionCheckFactory(requestJira, accountId, 'projects', toArray(projects))),\n        onJiraIssue: (issues) => (0, api_1.createApiMethods)(permissions_1.API_ISSUES_PERMISSIONS_MAP, getPermissionCheckFactory(requestJira, accountId, 'issues', toArray(issues)))\n    };\n};\nexports.authorizeJiraWithFetch = authorizeJiraWithFetch;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.API_PROJECTS_PERMISSIONS_MAP = exports.API_ISSUES_PERMISSIONS_MAP = void 0;\nconst API_ISSUES_PERMISSIONS_MAP = {\n    canAssign: 'ASSIGN_ISSUES',\n    canCreate: 'CREATE_ISSUES',\n    canEdit: 'EDIT_ISSUES',\n    canMove: 'MOVE_ISSUES',\n    canDelete: 'DELETE_ISSUES',\n    canAddComments: 'ADD_COMMENTS',\n    canEditAllComments: 'EDIT_ALL_COMMENTS',\n    canDeleteAllComments: 'DELETE_ALL_COMMENTS',\n    canCreateAttachments: 'CREATE_ATTACHMENTS',\n    canDeleteAllAttachments: 'DELETE_ALL_ATTACHMENTS'\n};\nexports.API_ISSUES_PERMISSIONS_MAP = API_ISSUES_PERMISSIONS_MAP;\nconst API_PROJECTS_PERMISSIONS_MAP = {\n    canAssignIssues: 'ASSIGN_ISSUES',\n    canCreateIssues: 'CREATE_ISSUES',\n    canEditIssues: 'EDIT_ISSUES',\n    canMoveIssues: 'MOVE_ISSUES',\n    canDeleteIssues: 'DELETE_ISSUES',\n    canAddComments: 'ADD_COMMENTS',\n    canEditAllComments: 'EDIT_ALL_COMMENTS',\n    canDeleteAllComments: 'DELETE_ALL_COMMENTS',\n    canCreateAttachments: 'CREATE_ATTACHMENTS',\n    canDeleteAllAttachments: 'DELETE_ALL_ATTACHMENTS'\n};\nexports.API_PROJECTS_PERMISSIONS_MAP = API_PROJECTS_PERMISSIONS_MAP;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCallBridge = void 0;\nconst errors_1 = require(\"./errors\");\nfunction isBridgeAvailable(bridge) {\n    return !!(bridge === null || bridge === void 0 ? void 0 : bridge.callBridge);\n}\nconst getCallBridge = () => {\n    if (!isBridgeAvailable(window.__bridge)) {\n        throw new errors_1.BridgeAPIError(`\n      Unable to establish a connection with the Custom UI bridge.\n      If you are trying to run your app locally, Forge apps only work in the context of Atlassian products. Refer to https://go.atlassian.com/forge-tunneling-with-custom-ui for how to tunnel when using a local development server.\n    `);\n    }\n    return window.__bridge.callBridge;\n};\nexports.getCallBridge = getCallBridge;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BridgeAPIError = void 0;\nclass BridgeAPIError extends Error {\n}\nexports.BridgeAPIError = BridgeAPIError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.events = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst emit = (event, payload) => {\n    return callBridge('emit', { event, payload });\n};\nconst on = (event, callback) => {\n    return callBridge('on', { event, callback });\n};\nexports.events = {\n    emit,\n    on\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./events\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.productFetchApi = void 0;\nconst blobParser_1 = require(\"../utils/blobParser\");\nconst parseFormData = async (form) => {\n    const parsed = {};\n    for (const [key, value] of form.entries()) {\n        if (key === 'file') {\n            const fileName = value.name;\n            const fileType = value.type;\n            parsed['file'] = await (0, blobParser_1.blobToBase64)(value);\n            parsed['__fileName'] = fileName;\n            parsed['__fileType'] = fileType;\n        }\n        else {\n            parsed[key] = value;\n        }\n    }\n    return JSON.stringify(parsed);\n};\nconst parseRequest = async (init) => {\n    const isFormData = (init === null || init === void 0 ? void 0 : init.body) instanceof FormData ? true : false;\n    const requestBody = isFormData ? await parseFormData(init === null || init === void 0 ? void 0 : init.body) : init === null || init === void 0 ? void 0 : init.body;\n    const req = new Request('', { body: requestBody, method: init === null || init === void 0 ? void 0 : init.method, headers: init === null || init === void 0 ? void 0 : init.headers });\n    const headers = Object.fromEntries(req.headers.entries());\n    const body = req.method !== 'GET' ? await req.text() : null;\n    return {\n        body,\n        headers: new Headers(headers),\n        isMultipartFormData: isFormData\n    };\n};\nconst productFetchApi = (callBridge) => {\n    const fetch = async (product, restPath, init) => {\n        const { body: requestBody, headers: requestHeaders, isMultipartFormData } = await parseRequest(init);\n        if (!requestHeaders.has('X-Atlassian-Token')) {\n            requestHeaders.set('X-Atlassian-Token', 'no-check');\n        }\n        const fetchPayload = {\n            product,\n            restPath,\n            fetchRequestInit: {\n                ...init,\n                body: requestBody,\n                headers: [...requestHeaders.entries()]\n            },\n            isMultipartFormData\n        };\n        const { body, headers, statusText, status, isAttachment } = await callBridge('fetchProduct', fetchPayload);\n        const responseBody = isAttachment ? (0, blobParser_1.base64ToBlob)(body, headers['content-type']) : body;\n        return new Response(responseBody || null, { headers, status, statusText });\n    };\n    return {\n        requestConfluence: (restPath, fetchOptions) => fetch('confluence', restPath, fetchOptions),\n        requestJira: (restPath, fetchOptions) => fetch('jira', restPath, fetchOptions),\n        requestBitbucket: (restPath, fetchOptions) => fetch('bitbucket', restPath, fetchOptions)\n    };\n};\nexports.productFetchApi = productFetchApi;\n","\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requestBitbucket = exports.requestJira = exports.requestConfluence = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst fetch_1 = require(\"./fetch\");\n_a = (0, fetch_1.productFetchApi)((0, bridge_1.getCallBridge)()), exports.requestConfluence = _a.requestConfluence, exports.requestJira = _a.requestJira, exports.requestBitbucket = _a.requestBitbucket;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.showFlag = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst errors_1 = require(\"../errors\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst showFlag = (options) => {\n    var _a;\n    if (!options.id) {\n        throw new errors_1.BridgeAPIError('\"id\" must be defined in flag options');\n    }\n    const result = callBridge('showFlag', {\n        ...options,\n        type: (_a = options.type) !== null && _a !== void 0 ? _a : 'info'\n    });\n    return {\n        close: async () => {\n            await result;\n            return callBridge('closeFlag', { id: options.id });\n        }\n    };\n};\nexports.showFlag = showFlag;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.showFlag = void 0;\nvar flag_1 = require(\"./flag\");\nObject.defineProperty(exports, \"showFlag\", { enumerable: true, get: function () { return flag_1.showFlag; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createTranslationFunction = exports.getTranslations = exports.resetTranslationsCache = void 0;\nconst i18n_1 = require(\"@forge/i18n\");\nconst view_1 = require(\"../view\");\nconst frontendResourcesAccessor = {\n    getI18nInfoConfig: async () => {\n        const resp = await fetch(`./${i18n_1.I18N_BUNDLE_FOLDER_NAME}/${i18n_1.I18N_INFO_FILE_NAME}`);\n        if (!resp.ok) {\n            throw new Error('Failed to get i18n info config: ' + resp.statusText);\n        }\n        const info = (await resp.json());\n        return info.config;\n    },\n    getTranslationResource: async (locale) => {\n        const resp = await fetch(`./${i18n_1.I18N_BUNDLE_FOLDER_NAME}/${locale}.json`);\n        if (!resp.ok) {\n            throw new Error(`Failed to get translation resource for locale: ${locale}`);\n        }\n        return resp.json();\n    }\n};\nconst translationsGetter = new i18n_1.TranslationsGetter(frontendResourcesAccessor);\nconst resetTranslationsCache = () => {\n    translationsGetter.reset();\n};\nexports.resetTranslationsCache = resetTranslationsCache;\nconst getTranslations = async (locale = null, options = {\n    fallback: true\n}) => {\n    let targetLocale = locale;\n    if (!targetLocale) {\n        const context = await view_1.view.getContext();\n        targetLocale = context.locale;\n    }\n    return await translationsGetter.getTranslations(targetLocale, options);\n};\nexports.getTranslations = getTranslations;\nconst createTranslationFunction = async (locale = null) => {\n    let targetLocale = locale;\n    if (!targetLocale) {\n        const context = await view_1.view.getContext();\n        targetLocale = context.locale;\n    }\n    const translator = new i18n_1.Translator(targetLocale, translationsGetter);\n    await translator.init();\n    return (i18nKey, defaultValue) => { var _a, _b; return (_b = (_a = translator.translate(i18nKey)) !== null && _a !== void 0 ? _a : defaultValue) !== null && _b !== void 0 ? _b : i18nKey; };\n};\nexports.createTranslationFunction = createTranslationFunction;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.i18n = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./invoke\"), exports);\ntslib_1.__exportStar(require(\"./invoke-remote\"), exports);\ntslib_1.__exportStar(require(\"./view\"), exports);\ntslib_1.__exportStar(require(\"./router\"), exports);\ntslib_1.__exportStar(require(\"./modal\"), exports);\ntslib_1.__exportStar(require(\"./fetch\"), exports);\ntslib_1.__exportStar(require(\"./flag\"), exports);\ntslib_1.__exportStar(require(\"./events\"), exports);\nexports.i18n = tslib_1.__importStar(require(\"./i18n\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFrameId = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst getFrameId = () => {\n    return callBridge('getFrameId');\n};\nexports.getFrameId = getFrameId;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./invoke-remote\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.invokeRemote = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst errors_1 = require(\"../errors\");\nconst utils_1 = require(\"../utils\");\nconst MAX_NUM_OPERATIONS = 500;\nconst OPERATION_INTERVAL_MS = 1000 * 25;\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst validatePayload = (payload) => {\n    if (!payload)\n        return;\n    if (Object.values(payload).some((val) => typeof val === 'function')) {\n        throw new errors_1.BridgeAPIError('Passing functions as part of the payload is not supported!');\n    }\n};\nconst _invokeRemote = async (input) => {\n    var _a;\n    validatePayload(input);\n    const { success, payload, error } = (_a = (await callBridge('invoke', input))) !== null && _a !== void 0 ? _a : {};\n    const response = { ...(success ? payload : error) };\n    if (response && response.headers) {\n        for (const header in response.headers) {\n            if (Array.isArray(response.headers[header])) {\n                response.headers[header] = response.headers[header].join(',');\n            }\n        }\n    }\n    return response;\n};\nexports.invokeRemote = (0, utils_1.withRateLimiter)(_invokeRemote, MAX_NUM_OPERATIONS, OPERATION_INTERVAL_MS, 'Remote invocation calls are rate limited at 500req/25s');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./invoke\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.invoke = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst errors_1 = require(\"../errors\");\nconst utils_1 = require(\"../utils\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst validatePayload = (payload) => {\n    if (!payload)\n        return;\n    if (Object.values(payload).some((val) => typeof val === 'function')) {\n        throw new errors_1.BridgeAPIError('Passing functions as part of the payload is not supported!');\n    }\n};\nconst _invoke = (functionKey, payload) => {\n    if (typeof functionKey !== 'string') {\n        throw new errors_1.BridgeAPIError('functionKey must be a string!');\n    }\n    validatePayload(payload);\n    return callBridge('invoke', { functionKey, payload });\n};\nexports.invoke = (0, utils_1.withRateLimiter)(_invoke, 500, 1000 * 25, 'Resolver calls are rate limited at 500req/25s');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./modal\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Modal = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst errors_1 = require(\"../errors\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst noop = () => { };\nclass Modal {\n    constructor(opts) {\n        var _a, _b;\n        this.resource = (opts === null || opts === void 0 ? void 0 : opts.resource) || null;\n        this.onClose = (opts === null || opts === void 0 ? void 0 : opts.onClose) || noop;\n        this.size = (opts === null || opts === void 0 ? void 0 : opts.size) || 'medium';\n        this.context = (opts === null || opts === void 0 ? void 0 : opts.context) || {};\n        this.closeOnEscape = (_a = opts === null || opts === void 0 ? void 0 : opts.closeOnEscape) !== null && _a !== void 0 ? _a : true;\n        this.closeOnOverlayClick = (_b = opts === null || opts === void 0 ? void 0 : opts.closeOnOverlayClick) !== null && _b !== void 0 ? _b : true;\n    }\n    async open() {\n        try {\n            const success = await callBridge('openModal', {\n                resource: this.resource,\n                onClose: this.onClose,\n                size: this.size,\n                context: this.context,\n                closeOnEscape: this.closeOnEscape,\n                closeOnOverlayClick: this.closeOnOverlayClick\n            });\n            if (success === false) {\n                throw new errors_1.BridgeAPIError('Unable to open modal.');\n            }\n        }\n        catch (err) {\n            throw new errors_1.BridgeAPIError('Unable to open modal.');\n        }\n    }\n}\nexports.Modal = Modal;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./router\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.router = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst navigate = async (url) => callBridge('navigate', { url, type: 'same-tab' });\nconst open = async (url) => callBridge('navigate', { url, type: 'new-tab' });\nconst reload = async () => callBridge('reload');\nexports.router = {\n    navigate,\n    open,\n    reload\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.blobToBase64 = exports.base64ToBlob = void 0;\nconst base64ToBlob = (b64string, mimeType) => {\n    if (!b64string) {\n        return null;\n    }\n    const base64Data = b64string.includes(';base64') ? b64string.split(',')[1] : b64string;\n    const byteCharacters = atob(base64Data);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n        byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    return new Blob([byteArray], { type: mimeType });\n};\nexports.base64ToBlob = base64ToBlob;\nconst blobToBase64 = (blob) => {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            resolve(reader.result);\n        };\n        reader.onerror = reject;\n        reader.readAsDataURL(blob);\n    });\n};\nexports.blobToBase64 = blobToBase64;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withRateLimiter = void 0;\nconst errors_1 = require(\"../errors\");\nconst withRateLimiter = (wrappedFn, maxOps, intervalInMs, exceededErrorMessage) => {\n    let start = Date.now();\n    let numOps = 0;\n    return async (...args) => {\n        const now = Date.now();\n        const elapsed = now - start;\n        if (elapsed > intervalInMs) {\n            start = now;\n            numOps = 0;\n        }\n        if (numOps >= maxOps) {\n            throw new errors_1.BridgeAPIError(exceededErrorMessage || 'Too many invocations.');\n        }\n        numOps = numOps + 1;\n        return wrappedFn(...args);\n    };\n};\nexports.withRateLimiter = withRateLimiter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.changeWindowTitle = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst errors_1 = require(\"../errors\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst changeWindowTitle = async (title) => {\n    try {\n        await callBridge('changeWindowTitle', title);\n    }\n    catch (e) {\n        throw new errors_1.BridgeAPIError(\"the window title wasn't changed due to error.\");\n    }\n};\nexports.changeWindowTitle = changeWindowTitle;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.close = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst errors_1 = require(\"../errors\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst close = async (payload) => {\n    try {\n        const success = await callBridge('close', payload);\n        if (success === false) {\n            throw new errors_1.BridgeAPIError(\"this resource's view is not closable.\");\n        }\n    }\n    catch (e) {\n        throw new errors_1.BridgeAPIError(\"this resource's view is not closable.\");\n    }\n};\nexports.close = close;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createHistory = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst createHistory = async () => {\n    const history = await callBridge('createHistory');\n    history.listen((location) => {\n        history.location = location;\n    });\n    return history;\n};\nexports.createHistory = createHistory;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.frame = void 0;\nconst internal_1 = require(\"../internal\");\nconst events_1 = require(\"../events\");\nconst frameEventKey = (eventKey, frameId) => `frame:${eventKey}:${frameId}`;\nconst EVENT_KEY_FRAME_PROPS = 'props';\nconst EVENT_KEY_FRAME_LOADED = 'loaded';\nconst onPropsUpdate = async (handler) => {\n    const frameId = await (0, internal_1.getFrameId)();\n    if (!frameId) {\n        throw new Error('Frame could not be found, please ensure the custom props enabled Frame component is set up correctly.');\n    }\n    const sub = events_1.events.on(frameEventKey(EVENT_KEY_FRAME_PROPS, frameId), handler);\n    const unsubscribe = async () => {\n        const subscription = await sub;\n        subscription.unsubscribe();\n    };\n    void events_1.events.emit(frameEventKey(EVENT_KEY_FRAME_LOADED, frameId), { loaded: true });\n    return unsubscribe;\n};\nexports.frame = {\n    onPropsUpdate\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContext = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst i18n_1 = require(\"@forge/i18n\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst getContext = async () => {\n    var _a;\n    const context = await callBridge('getContext');\n    const locale = context === null || context === void 0 ? void 0 : context.locale;\n    if (locale) {\n        context.locale = (_a = (0, i18n_1.ensureLocale)(locale)) !== null && _a !== void 0 ? _a : locale;\n    }\n    return context;\n};\nexports.getContext = getContext;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./view\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.refresh = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst errors_1 = require(\"../errors\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst refresh = async (payload) => {\n    const success = await callBridge('refresh', payload);\n    if (success === false) {\n        throw new errors_1.BridgeAPIError(\"this resource's view is not refreshable.\");\n    }\n};\nexports.refresh = refresh;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.submit = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst errors_1 = require(\"../errors\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nconst submit = async (payload) => {\n    const success = await callBridge('submit', payload);\n    if (success === false) {\n        throw new errors_1.BridgeAPIError(\"this resource's view is not submittable.\");\n    }\n};\nexports.submit = submit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.theme = void 0;\nconst bridge_1 = require(\"../bridge\");\nconst callBridge = (0, bridge_1.getCallBridge)();\nexports.theme = {\n    enable: () => callBridge('enableTheming')\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.view = void 0;\nconst submit_1 = require(\"./submit\");\nconst close_1 = require(\"./close\");\nconst refresh_1 = require(\"./refresh\");\nconst createHistory_1 = require(\"./createHistory\");\nconst getContext_1 = require(\"./getContext\");\nconst changeWindowTitle_1 = require(\"./changeWindowTitle\");\nconst theme_1 = require(\"./theme\");\nconst frame_1 = require(\"./frame\");\nexports.view = {\n    submit: submit_1.submit,\n    close: close_1.close,\n    refresh: refresh_1.refresh,\n    createHistory: createHistory_1.createHistory,\n    getContext: getContext_1.getContext,\n    theme: theme_1.theme,\n    frame: frame_1.frame,\n    changeWindowTitle: changeWindowTitle_1.changeWindowTitle\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FORGE_SUPPORTED_LOCALE_CODES = exports.I18N_BUNDLE_FOLDER_NAME = exports.I18N_INFO_FILE_NAME = void 0;\nexports.I18N_INFO_FILE_NAME = 'i18n-info.json';\nexports.I18N_BUNDLE_FOLDER_NAME = '__LOCALES__';\nexports.FORGE_SUPPORTED_LOCALE_CODES = [\n    'zh-CN',\n    'zh-TW',\n    'cs-CZ',\n    'da-DK',\n    'nl-NL',\n    'en-US',\n    'en-GB',\n    'et-EE',\n    'fi-FI',\n    'fr-FR',\n    'de-DE',\n    'hu-HU',\n    'is-IS',\n    'it-IT',\n    'ja-JP',\n    'ko-KR',\n    'no-NO',\n    'pl-PL',\n    'pt-BR',\n    'pt-PT',\n    'ro-RO',\n    'ru-RU',\n    'sk-SK',\n    'tr-TR',\n    'es-ES',\n    'sv-SE'\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ensureLocale = void 0;\nconst constants_1 = require(\"./constants\");\nconst forgeSupportedLocaleCodesSet = new Set(constants_1.FORGE_SUPPORTED_LOCALE_CODES);\nconst localeFallbacks = {\n    'en-UK': 'en-GB',\n    'nb-NO': 'no-NO'\n};\nconst ensureLocale = (rawLocale) => {\n    const locale = rawLocale.replace('_', '-');\n    if (forgeSupportedLocaleCodesSet.has(locale)) {\n        return locale;\n    }\n    return localeFallbacks[locale] ?? null;\n};\nexports.ensureLocale = ensureLocale;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getI18nSupportedModuleEntries = exports.extractI18nPropertiesFromModules = exports.extractI18nKeysFromModules = exports.getTranslationValue = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./constants\"), exports);\ntslib_1.__exportStar(require(\"./translationsGetter\"), exports);\ntslib_1.__exportStar(require(\"./translator\"), exports);\ntslib_1.__exportStar(require(\"./ensureLocale\"), exports);\nvar translationValueGetter_1 = require(\"./translationValueGetter\");\nObject.defineProperty(exports, \"getTranslationValue\", { enumerable: true, get: function () { return translationValueGetter_1.getTranslationValue; } });\nvar moduleI18nHelper_1 = require(\"./moduleI18nHelper\");\nObject.defineProperty(exports, \"extractI18nKeysFromModules\", { enumerable: true, get: function () { return moduleI18nHelper_1.extractI18nKeysFromModules; } });\nObject.defineProperty(exports, \"extractI18nPropertiesFromModules\", { enumerable: true, get: function () { return moduleI18nHelper_1.extractI18nPropertiesFromModules; } });\nObject.defineProperty(exports, \"getI18nSupportedModuleEntries\", { enumerable: true, get: function () { return moduleI18nHelper_1.getI18nSupportedModuleEntries; } });\ntslib_1.__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractI18nPropertiesFromModules = exports.extractI18nKeysFromModules = exports.getI18nSupportedModuleEntries = void 0;\nconst isObject = (value) => {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n};\nconst isI18nValue = (value) => {\n    return typeof value?.i18n === 'string';\n};\nconst isConnectModuleKey = (moduleKey) => moduleKey.startsWith('connect-');\nconst isCoreModuleKey = (moduleKey) => moduleKey.startsWith('core:');\nconst getI18nKeysFromObject = (obj) => {\n    const visited = new Set();\n    const visit = (value, i18nPath) => {\n        if (!isObject(value) || visited.has(value)) {\n            return [];\n        }\n        visited.add(value);\n        return Object.entries(value).flatMap(([propKey, propValue]) => {\n            const currentPath = [...i18nPath, propKey];\n            if (isI18nValue(propValue)) {\n                return [{ propertyPath: currentPath, key: propValue.i18n }];\n            }\n            else if (Array.isArray(propValue)) {\n                return propValue.flatMap((item) => visit(item, currentPath));\n            }\n            return visit(propValue, currentPath);\n        });\n    };\n    return visit(obj, []);\n};\nconst getI18nSupportedModuleEntries = (modules) => {\n    return Object.entries(modules).flatMap(([moduleKey, moduleEntries]) => {\n        if (!isConnectModuleKey(moduleKey) &&\n            !isCoreModuleKey(moduleKey) &&\n            moduleEntries &&\n            Array.isArray(moduleEntries) &&\n            moduleEntries.length > 0) {\n            return moduleEntries.map((moduleEntry) => [moduleEntry, moduleKey]);\n        }\n        return [];\n    });\n};\nexports.getI18nSupportedModuleEntries = getI18nSupportedModuleEntries;\nconst extractI18nKeysFromModules = (modules) => {\n    const i18nKeys = new Set();\n    for (const moduleEntry of (0, exports.getI18nSupportedModuleEntries)(modules)) {\n        const i18nKeysForEntryValue = getI18nKeysFromObject(moduleEntry[0]);\n        for (const { key } of i18nKeysForEntryValue) {\n            i18nKeys.add(key);\n        }\n    }\n    return i18nKeys.size > 0 ? Array.from(i18nKeys) : [];\n};\nexports.extractI18nKeysFromModules = extractI18nKeysFromModules;\nconst extractI18nPropertiesFromModules = (modules) => {\n    const moduleI18nProperties = [];\n    for (const moduleEntry of (0, exports.getI18nSupportedModuleEntries)(modules)) {\n        const i18nKeysForEntryValue = getI18nKeysFromObject(moduleEntry[0]);\n        for (const i18nObj of i18nKeysForEntryValue) {\n            moduleI18nProperties.push({ moduleName: moduleEntry[1], ...i18nObj });\n        }\n    }\n    return moduleI18nProperties;\n};\nexports.extractI18nPropertiesFromModules = extractI18nPropertiesFromModules;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTranslationValueFromContent = exports.getTranslationValue = void 0;\nconst tslib_1 = require(\"tslib\");\nconst get_1 = tslib_1.__importDefault(require(\"lodash/get\"));\nconst getTranslationValue = (translationLookup, i18nKey, locale) => {\n    const translation = translationLookup[locale];\n    if (!translation) {\n        return null;\n    }\n    return (0, exports.getTranslationValueFromContent)(translation, i18nKey);\n};\nexports.getTranslationValue = getTranslationValue;\nconst getTranslationValueFromContent = (translationContent, i18nKey) => {\n    let translationValue = translationContent[i18nKey];\n    if (!translationValue) {\n        const keyTokens = i18nKey.split('.');\n        if (keyTokens.length > 1) {\n            translationValue = (0, get_1.default)(translationContent, keyTokens, null);\n        }\n    }\n    return typeof translationValue === 'string' ? translationValue : null;\n};\nexports.getTranslationValueFromContent = getTranslationValueFromContent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationsGetter = void 0;\nconst pushIfNotExists = (array, item) => {\n    if (!array.includes(item)) {\n        array.push(item);\n    }\n};\nclass TranslationsGetter {\n    resourcesAccessor;\n    i18nInfoConfig = null;\n    translationResources = new Map();\n    constructor(resourcesAccessor) {\n        this.resourcesAccessor = resourcesAccessor;\n    }\n    async getTranslations(locale, options = { fallback: true }) {\n        const i18nInfoConfig = await this.getI18nInfoConfig();\n        const { fallback } = options;\n        if (!fallback) {\n            let translationResource;\n            if (i18nInfoConfig.locales.includes(locale)) {\n                translationResource = await this.getTranslationResource(locale);\n            }\n            return {\n                translations: translationResource ?? null,\n                locale\n            };\n        }\n        for (const targetLocale of this.getLocaleLookupOrder(locale, i18nInfoConfig)) {\n            const translationResource = await this.getTranslationResource(targetLocale);\n            if (translationResource) {\n                return {\n                    translations: translationResource,\n                    locale: targetLocale\n                };\n            }\n        }\n        return {\n            translations: null,\n            locale\n        };\n    }\n    async getTranslationsByLocaleLookupOrder(locale) {\n        const i18nInfoConfig = await this.getI18nInfoConfig();\n        const lookupOrder = this.getLocaleLookupOrder(locale, i18nInfoConfig);\n        return await Promise.all(lookupOrder.map(async (targetLocale) => {\n            const translationResource = await this.getTranslationResource(targetLocale);\n            return {\n                locale: targetLocale,\n                translations: translationResource\n            };\n        }));\n    }\n    reset() {\n        this.i18nInfoConfig = null;\n        this.translationResources.clear();\n    }\n    async getTranslationResource(locale) {\n        let resource = this.translationResources.get(locale);\n        if (!resource) {\n            try {\n                resource = await this.resourcesAccessor.getTranslationResource(locale);\n                this.translationResources.set(locale, resource);\n            }\n            catch (error) {\n                throw new Error(`Failed to get translation resource for locale: ${locale}`);\n            }\n        }\n        return resource;\n    }\n    async getI18nInfoConfig() {\n        if (!this.i18nInfoConfig) {\n            try {\n                this.i18nInfoConfig = await this.resourcesAccessor.getI18nInfoConfig();\n            }\n            catch (error) {\n                throw new Error('Failed to get i18n info config');\n            }\n        }\n        return this.i18nInfoConfig;\n    }\n    getLocaleLookupOrder(locale, config) {\n        const { locales, fallback } = config;\n        const lookupOrder = [locale];\n        const fallbackLocales = fallback[locale];\n        if (fallbackLocales && Array.isArray(fallbackLocales) && fallbackLocales.length > 0) {\n            lookupOrder.push(...fallbackLocales);\n        }\n        pushIfNotExists(lookupOrder, config.fallback.default);\n        return lookupOrder.filter((locale) => locales.includes(locale));\n    }\n}\nexports.TranslationsGetter = TranslationsGetter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Translator = void 0;\nconst translationValueGetter_1 = require(\"./translationValueGetter\");\nclass Translator {\n    locale;\n    translationsGetter;\n    localeLookupOrderedTranslations = null;\n    cache = new Map();\n    constructor(locale, translationsGetter) {\n        this.locale = locale;\n        this.translationsGetter = translationsGetter;\n    }\n    async init() {\n        this.localeLookupOrderedTranslations = await this.translationsGetter.getTranslationsByLocaleLookupOrder(this.locale);\n    }\n    translate(i18nKey) {\n        if (!this.localeLookupOrderedTranslations) {\n            throw new Error('TranslationLookup not initialized');\n        }\n        let result = this.cache.get(i18nKey);\n        if (result === undefined) {\n            for (const { translations } of this.localeLookupOrderedTranslations) {\n                const translationValue = (0, translationValueGetter_1.getTranslationValueFromContent)(translations, i18nKey);\n                if (translationValue !== null) {\n                    result = translationValue;\n                    break;\n                }\n            }\n            result = result ?? null;\n            this.cache.set(i18nKey, result);\n        }\n        return result;\n    }\n}\nexports.Translator = Translator;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.startsWith = void 0;\nfunction startsWith(value) {\n    return {\n        condition: 'STARTS_WITH',\n        value: value\n    };\n}\nexports.startsWith = startsWith;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterConditions = exports.WhereConditions = exports.isIn = exports.isNotEqualTo = void 0;\nfunction isNotEqualTo(value) {\n    return {\n        condition: 'NOT_EQUAL_TO',\n        value\n    };\n}\nexports.isNotEqualTo = isNotEqualTo;\nfunction isIn(values) {\n    return {\n        condition: 'IN',\n        value: values\n    };\n}\nexports.isIn = isIn;\nfunction beginsWith(value) {\n    return {\n        condition: 'BEGINS_WITH',\n        values: [value]\n    };\n}\nfunction between(values) {\n    return {\n        condition: 'BETWEEN',\n        values\n    };\n}\nfunction exists() {\n    return {\n        condition: 'EXISTS',\n        values: [true]\n    };\n}\nfunction doesNotExist() {\n    return {\n        condition: 'NOT_EXISTS',\n        values: [true]\n    };\n}\nfunction isGreaterThan(value) {\n    return {\n        condition: 'GREATER_THAN',\n        values: [value]\n    };\n}\nfunction isGreaterThanEqualTo(value) {\n    return {\n        condition: 'GREATER_THAN_EQUAL_TO',\n        values: [value]\n    };\n}\nfunction isLessThan(value) {\n    return {\n        condition: 'LESS_THAN',\n        values: [value]\n    };\n}\nfunction isLessThanEqualTo(value) {\n    return {\n        condition: 'LESS_THAN_EQUAL_TO',\n        values: [value]\n    };\n}\nfunction contains(value) {\n    return {\n        condition: 'CONTAINS',\n        values: [value]\n    };\n}\nfunction doesNotContain(value) {\n    return {\n        condition: 'NOT_CONTAINS',\n        values: [value]\n    };\n}\nfunction equalsTo(value) {\n    return {\n        condition: 'EQUAL_TO',\n        values: [value]\n    };\n}\nfunction notEqualsTo(value) {\n    return {\n        condition: 'NOT_EQUAL_TO',\n        values: [value]\n    };\n}\nexports.WhereConditions = {\n    beginsWith,\n    between,\n    equalsTo,\n    isGreaterThan,\n    isGreaterThanEqualTo,\n    isLessThan,\n    isLessThanEqualTo\n};\nexports.FilterConditions = {\n    beginsWith,\n    between,\n    contains,\n    doesNotContain,\n    equalsTo,\n    notEqualsTo,\n    exists,\n    doesNotExist,\n    isGreaterThan,\n    isGreaterThanEqualTo,\n    isLessThan,\n    isLessThanEqualTo\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntityStorageBuilder = void 0;\nvar storage_builder_1 = require(\"./storage-builder\");\nObject.defineProperty(exports, \"EntityStorageBuilder\", { enumerable: true, get: function () { return storage_builder_1.EntityStorageBuilder; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CustomEntityBuilder = exports.CustomEntityIndexBuilder = void 0;\nclass CustomEntityQueryBuilder {\n    globalStorage;\n    queryOptions;\n    constructor(globalStorage, queryOptions = {}) {\n        this.globalStorage = globalStorage;\n        this.queryOptions = queryOptions;\n        this.queryOptions = {\n            ...queryOptions\n        };\n    }\n    clone(overrides) {\n        return new (Object.getPrototypeOf(this).constructor)(this.globalStorage, {\n            ...this.queryOptions,\n            ...overrides\n        });\n    }\n    where(condition) {\n        return this.clone({\n            range: {\n                ...condition\n            }\n        });\n    }\n    sort(sort) {\n        return this.clone({\n            sort\n        });\n    }\n    cursor(cursor) {\n        return this.clone({\n            cursor\n        });\n    }\n    limit(limit) {\n        return this.clone({\n            limit\n        });\n    }\n    async getOne() {\n        const { results } = await this.limit(1).getMany();\n        return results?.[0];\n    }\n    async getMany() {\n        if (!this.queryOptions.entityName) {\n            throw new Error('entityName is mandatory');\n        }\n        if (!this.queryOptions.indexName) {\n            throw new Error('indexName is mandatory');\n        }\n        const queryOptions = { ...this.queryOptions };\n        if (!queryOptions.filterOperator && queryOptions.filters) {\n            queryOptions.filterOperator = 'and';\n        }\n        return this.globalStorage.listCustomEntities(this.queryOptions);\n    }\n}\nclass CustomEntityAndFilterQueryBuilder extends CustomEntityQueryBuilder {\n    globalStorage;\n    queryOptions;\n    constructor(globalStorage, queryOptions = {}) {\n        super(globalStorage, queryOptions);\n        this.globalStorage = globalStorage;\n        this.queryOptions = queryOptions;\n        this.queryOptions = {\n            ...queryOptions\n        };\n    }\n    andFilter(field, condition) {\n        const newQueryOptions = {\n            ...this.queryOptions\n        };\n        newQueryOptions.filters = [...(this.queryOptions.filters ?? []), { property: field, ...condition }];\n        newQueryOptions.filterOperator = 'and';\n        return new CustomEntityAndFilterQueryBuilder(this.globalStorage, newQueryOptions);\n    }\n}\nclass CustomEntityOrFilterQueryBuilder extends CustomEntityQueryBuilder {\n    globalStorage;\n    queryOptions;\n    constructor(globalStorage, queryOptions = {}) {\n        super(globalStorage, queryOptions);\n        this.globalStorage = globalStorage;\n        this.queryOptions = queryOptions;\n        this.queryOptions = {\n            ...queryOptions\n        };\n    }\n    orFilter(field, condition) {\n        const newQueryOptions = {\n            ...this.queryOptions\n        };\n        newQueryOptions.filters = [...(this.queryOptions.filters ?? []), { property: field, ...condition }];\n        newQueryOptions.filterOperator = 'or';\n        return new CustomEntityOrFilterQueryBuilder(this.globalStorage, newQueryOptions);\n    }\n}\nclass CustomEntityFilterQueryBuilder extends CustomEntityQueryBuilder {\n    globalStorage;\n    queryOptions;\n    constructor(globalStorage, queryOptions = {}) {\n        super(globalStorage, queryOptions);\n        this.globalStorage = globalStorage;\n        this.queryOptions = queryOptions;\n        this.queryOptions = {\n            ...queryOptions\n        };\n    }\n    andFilter(field, condition) {\n        return new CustomEntityAndFilterQueryBuilder(this.globalStorage, this.queryOptions).andFilter(field, condition);\n    }\n    orFilter(field, condition) {\n        return new CustomEntityOrFilterQueryBuilder(this.globalStorage, this.queryOptions).orFilter(field, condition);\n    }\n}\nclass CustomEntityIndexBuilder {\n    globalStorage;\n    queryOptions;\n    constructor(globalStorage, queryOptions = {}) {\n        this.globalStorage = globalStorage;\n        this.queryOptions = queryOptions;\n        this.queryOptions = {\n            ...queryOptions\n        };\n    }\n    index(name, indexOptions) {\n        const indexProperties = indexOptions ? { indexName: name, ...indexOptions } : { indexName: name };\n        return new CustomEntityFilterQueryBuilder(this.globalStorage, {\n            ...this.queryOptions,\n            ...indexProperties\n        });\n    }\n}\nexports.CustomEntityIndexBuilder = CustomEntityIndexBuilder;\nclass CustomEntityBuilder {\n    globalStorage;\n    queryOptions;\n    constructor(globalStorage, queryOptions = {}) {\n        this.globalStorage = globalStorage;\n        this.queryOptions = queryOptions;\n        this.queryOptions = {\n            ...queryOptions\n        };\n    }\n    entity(name) {\n        return new CustomEntityIndexBuilder(this.globalStorage, {\n            ...this.queryOptions,\n            entityName: name\n        });\n    }\n}\nexports.CustomEntityBuilder = CustomEntityBuilder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EntityStorageBuilder = void 0;\nconst query_api_1 = require(\"./query-api\");\nclass EntityStorageBuilder {\n    entityName;\n    globalStorage;\n    constructor(entityName, globalStorage) {\n        this.entityName = entityName;\n        this.globalStorage = globalStorage;\n    }\n    query() {\n        return new query_api_1.CustomEntityBuilder(this.globalStorage).entity(this.entityName);\n    }\n    get(entityKey) {\n        return this.globalStorage.getEntity(this.entityName, entityKey);\n    }\n    set(entityKey, value) {\n        return this.globalStorage.setEntity(this.entityName, entityKey, value);\n    }\n    delete(entityKey) {\n        return this.globalStorage.deleteEntity(this.entityName, entityKey);\n    }\n}\nexports.EntityStorageBuilder = EntityStorageBuilder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.APIError = exports.getErrorMessage = exports.getErrorMessageFromCode = void 0;\nconst getErrorMessageFromCode = (code, message) => {\n    return message ?? code;\n};\nexports.getErrorMessageFromCode = getErrorMessageFromCode;\nconst getErrorMessage = (statusCode) => {\n    switch (statusCode) {\n        case 400:\n        case 413:\n            return 'Bad request';\n        case 401:\n            return 'Authentication error';\n        case 403:\n        case 404:\n            return 'Permissions error or key does not exist';\n        case 409:\n            return 'Conflicting update occurred';\n        case 500:\n            return 'Internal server error';\n        default:\n            return `Unknown error. Received status code '${statusCode}'`;\n    }\n};\nexports.getErrorMessage = getErrorMessage;\nclass APIError extends Error {\n    constructor(message) {\n        super(message);\n    }\n    static forStatus(status) {\n        return new APIError((0, exports.getErrorMessage)(status));\n    }\n    static forErrorCode(code, message) {\n        return new APIError((0, exports.getErrorMessageFromCode)(code, message));\n    }\n    static forUnexpected(message) {\n        return new APIError(message);\n    }\n}\nexports.APIError = APIError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GlobalStorage = void 0;\nconst errors_1 = require(\"./errors\");\nconst gql_queries_1 = require(\"./gql-queries\");\nfunction assertNoErrors(errors) {\n    if (errors && errors.length > 0) {\n        const { message, extensions: { errorType } } = errors[0];\n        throw errors_1.APIError.forErrorCode(errorType, message);\n    }\n}\nasync function getResponseBody(response) {\n    if (response.status !== 200) {\n        throw errors_1.APIError.forStatus(response.status);\n    }\n    const responseText = await response.text();\n    let responseBody;\n    try {\n        responseBody = JSON.parse(responseText);\n    }\n    catch (error) {\n        throw errors_1.APIError.forUnexpected(`Response text was not a valid JSON: ${responseText}`);\n    }\n    assertNoErrors(responseBody.errors);\n    return responseBody.data;\n}\nclass GlobalStorage {\n    getAppContextAri;\n    apiClient;\n    getMetrics;\n    endpoint = '/forge/entities/graphql';\n    constructor(getAppContextAri, apiClient, getMetrics) {\n        this.getAppContextAri = getAppContextAri;\n        this.apiClient = apiClient;\n        this.getMetrics = getMetrics;\n    }\n    doGetAppContextAri() {\n        return typeof this.getAppContextAri === 'function' ? this.getAppContextAri() : this.getAppContextAri;\n    }\n    async get(key) {\n        return this.getInternal(key, false);\n    }\n    async getSecret(key) {\n        return this.getInternal(key, true);\n    }\n    async list(options) {\n        const requestBody = process.env.IS_CLEANUP_FUNCTION === 'true'\n            ? gql_queries_1.UntypedQueries.listQueryForCleanup(this.doGetAppContextAri(), options)\n            : gql_queries_1.UntypedQueries.listQuery(this.doGetAppContextAri(), options);\n        const response = await this.wrapInMetric('untyped', 'query', false, async () => await this.query(requestBody));\n        const edges = process.env.IS_CLEANUP_FUNCTION === 'true'\n            ? response.appStoredEntitiesForCleanup.edges\n            : response.appStoredEntities.edges;\n        const nextCursor = edges.length > 0 ? edges[edges.length - 1].cursor : undefined;\n        const results = edges.map(({ node }) => node);\n        return {\n            results,\n            nextCursor\n        };\n    }\n    async listCustomEntities(options) {\n        const requestBody = gql_queries_1.CustomEntityQueries.listQuery(this.doGetAppContextAri(), options);\n        const response = await this.wrapInMetric('typed', 'query', false, async () => await this.query(requestBody));\n        const edges = response.appStoredCustomEntities.edges;\n        const results = edges.map(({ node }) => node);\n        return {\n            results,\n            nextCursor: response.appStoredCustomEntities.cursor || null\n        };\n    }\n    async set(key, value) {\n        const requestBody = gql_queries_1.UntypedQueries.set(this.doGetAppContextAri(), key, value, false);\n        await this.wrapInMetric('untyped', 'set', false, async () => await this.mutation(requestBody, 'appStorage', 'setAppStoredEntity'));\n    }\n    async setSecret(key, value) {\n        const requestBody = gql_queries_1.UntypedQueries.set(this.doGetAppContextAri(), key, value, true);\n        await this.wrapInMetric('untyped', 'set', true, async () => await this.mutation(requestBody, 'appStorage', 'setAppStoredEntity'));\n    }\n    async delete(key) {\n        const requestBody = gql_queries_1.UntypedQueries.delete(this.doGetAppContextAri(), key, false);\n        await this.wrapInMetric('untyped', 'delete', false, async () => this.mutation(requestBody, 'appStorage', 'deleteAppStoredEntity'));\n    }\n    async deleteSecret(key) {\n        const requestBody = gql_queries_1.UntypedQueries.delete(this.doGetAppContextAri(), key, true);\n        await this.wrapInMetric('untyped', 'delete', true, async () => this.mutation(requestBody, 'appStorage', 'deleteAppStoredEntity'));\n    }\n    async getEntity(entityName, entityKey) {\n        return this.getEntityInternal(entityName, entityKey);\n    }\n    async setEntity(entityName, entityKey, value) {\n        const requestBody = gql_queries_1.CustomEntityQueries.set(this.doGetAppContextAri(), entityName, entityKey, value);\n        await this.wrapInMetric('typed', 'set', false, async () => this.mutation(requestBody, 'appStorageCustomEntity', 'setAppStoredCustomEntity'));\n    }\n    async deleteEntity(entityName, entityKey) {\n        const requestBody = gql_queries_1.CustomEntityQueries.delete(this.doGetAppContextAri(), entityName, entityKey);\n        await this.wrapInMetric('typed', 'delete', false, async () => await this.mutation(requestBody, 'appStorageCustomEntity', 'deleteAppStoredCustomEntity'));\n    }\n    async getInternal(key, encrypted) {\n        const requestBody = gql_queries_1.UntypedQueries.get(this.doGetAppContextAri(), key, encrypted);\n        const { appStoredEntity: { value } } = await this.wrapInMetric('untyped', 'get', encrypted, async () => await this.query(requestBody));\n        return value ?? undefined;\n    }\n    async getEntityInternal(entityName, entityKey) {\n        const requestBody = gql_queries_1.CustomEntityQueries.get(this.doGetAppContextAri(), entityName, entityKey);\n        const { appStoredCustomEntity: { value } } = await this.wrapInMetric('typed', 'get', false, async () => await this.query(requestBody));\n        return value ?? undefined;\n    }\n    buildRequest(requestBody) {\n        return {\n            method: 'POST',\n            body: JSON.stringify(requestBody),\n            headers: {\n                'content-type': 'application/json'\n            }\n        };\n    }\n    async query(body) {\n        const response = await this.apiClient(this.endpoint, this.buildRequest(body));\n        return await getResponseBody(response);\n    }\n    async mutation(body, namespace, mutationMethod) {\n        const response = await this.apiClient(this.endpoint, this.buildRequest(body));\n        const { [namespace]: { [mutationMethod]: { success, errors } } } = await getResponseBody(response);\n        assertNoErrors(errors);\n        if (!success) {\n            throw errors_1.APIError.forStatus(500);\n        }\n        return response;\n    }\n    async wrapInMetric(store, operation, encrypted, fn) {\n        const metrics = this.getMetrics();\n        if (!metrics) {\n            return await fn();\n        }\n        const timer = metrics\n            .timing('forge.runtime.storage.operation.latency', { store, operation, encrypted: String(encrypted) })\n            .measure();\n        try {\n            const result = await fn();\n            timer.stop({ success: 'true' });\n            metrics\n                .counter('forge.runtime.storage.operation', {\n                store,\n                operation,\n                encrypted: String(encrypted),\n                success: 'true'\n            })\n                .incr();\n            return result;\n        }\n        catch (error) {\n            timer.stop({ success: 'false' });\n            metrics\n                .counter('forge.runtime.storage.operation', {\n                store,\n                operation,\n                encrypted: String(encrypted),\n                success: 'false'\n            })\n                .incr();\n            throw error;\n        }\n    }\n}\nexports.GlobalStorage = GlobalStorage;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CustomEntityQueries = exports.UntypedQueries = void 0;\nclass UntypedQueries {\n    static get = (contextAri, key, encrypted) => ({\n        query: `\n      query forge_app_getApplicationStorageEntity($contextAri: ID!, $key: ID!, $encrypted: Boolean!) {\n        appStoredEntity(contextAri: $contextAri, key: $key, encrypted: $encrypted) {\n          key\n          value\n        }\n      }\n    `,\n        variables: {\n            contextAri,\n            key,\n            encrypted\n        }\n    });\n    static set = (contextAri, key, value, encrypted) => ({\n        query: `\n      mutation forge_app_setApplicationStorageEntity($input: SetAppStoredEntityMutationInput!) {\n        appStorage{\n          setAppStoredEntity(input: $input) {\n            success\n\n            errors {\n              message\n              extensions {\n                errorType\n                statusCode\n              }\n            }\n          }\n        }\n      }\n    `,\n        variables: {\n            input: {\n                contextAri,\n                key,\n                value,\n                encrypted\n            }\n        }\n    });\n    static delete = (contextAri, key, encrypted) => ({\n        query: `\n      mutation forge_app_deleteApplicationStorageEntity($input: DeleteAppStoredEntityMutationInput!) {\n        appStorage {\n          deleteAppStoredEntity(input: $input) {\n            success\n  \n            errors {\n              message\n              extensions {\n                errorType\n                statusCode\n              }\n            }\n          }\n        }\n      }\n    `,\n        variables: {\n            input: {\n                contextAri,\n                key,\n                encrypted\n            }\n        }\n    });\n    static listQuery = (contextAri, options) => ({\n        query: `\n      query forge_app_getApplicationStorageEntities($contextAri: ID!, $where: [AppStoredEntityFilter!], $cursor: String, $limit: Int) {\n        appStoredEntities(contextAri: $contextAri, where: $where, after: $cursor, first: $limit) {\n          edges {\n            node {\n              value\n              key\n            }\n  \n            cursor\n          }\n        }\n      }\n    `,\n        variables: {\n            contextAri,\n            where: options.where ?? null,\n            cursor: options.cursor ?? null,\n            limit: options.limit ?? null\n        }\n    });\n    static listQueryForCleanup = (contextAri, options) => ({\n        query: `\n      query forge_app_getApplicationStorageEntitiesForCleanup($contextAri: ID!, $where: [AppStoredEntityFilter!], $cursor: String, $limit: Int) {\n        appStoredEntitiesForCleanup(contextAri: $contextAri, where: $where, after: $cursor, first: $limit) {\n          edges {\n            node {\n              value\n              key\n            }\n  \n            cursor\n          }\n        }\n      }\n    `,\n        variables: {\n            contextAri,\n            where: options.where ?? null,\n            cursor: options.cursor ?? null,\n            limit: options.limit ?? null\n        }\n    });\n}\nexports.UntypedQueries = UntypedQueries;\nclass CustomEntityQueries {\n    static get = (contextAri, entityName, key) => ({\n        query: `\n    query forge_app_getApplicationStorageCustomEntity ($contextAri: ID!, $key: ID!, $entityName: String!) {\n      appStoredCustomEntity(contextAri: $contextAri, key: $key, entityName: $entityName) {\n          value\n          entityName\n          key\n      }\n  }\n    `,\n        variables: {\n            contextAri,\n            entityName,\n            key\n        }\n    });\n    static set = (contextAri, entityName, key, value) => ({\n        query: `\n      mutation forge_app_setApplicationStorageCustomEntity($input: SetAppStoredCustomEntityMutationInput!) {\n        appStorageCustomEntity{\n          setAppStoredCustomEntity(input: $input) {\n            success\n  \n            errors {\n              message\n              extensions {\n                errorType\n                statusCode\n              }\n            }\n          }\n        }\n      }\n    `,\n        variables: {\n            input: {\n                contextAri,\n                entityName,\n                key,\n                value\n            }\n        }\n    });\n    static delete = (contextAri, entityName, key) => ({\n        query: `\n      mutation forge_app_deleteApplicationStorageCustomEntity($input: DeleteAppStoredCustomEntityMutationInput!) {\n        appStorageCustomEntity {\n          deleteAppStoredCustomEntity(input: $input) {\n            success\n  \n            errors {\n              message\n              extensions {\n                errorType\n                statusCode\n              }\n            }\n          }\n        }\n      }\n    `,\n        variables: {\n            input: {\n                contextAri,\n                entityName,\n                key\n            }\n        }\n    });\n    static listQuery = (contextAri, options) => {\n        return {\n            query: `\n      query AppStorageCustomEntityQueries ($contextAri: ID!, $entityName: String!, $indexName: String!, $range: AppStoredCustomEntityRange, $filters: AppStoredCustomEntityFilters, $sort:SortOrder, $limit: Int, $cursor: String, $partition: [AppStoredCustomEntityFieldValue!]) {\n        appStoredCustomEntities(contextAri: $contextAri, entityName: $entityName, indexName: $indexName, range: $range, filters: $filters, sort:$sort, limit: $limit, cursor: $cursor, partition: $partition) {\n            edges {\n                node {\n                    key\n                    value\n                }\n                cursor\n            }\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n            }\n            totalCount\n            cursor\n        }\n  } \n      `,\n            variables: {\n                contextAri,\n                entityName: options.entityName,\n                indexName: options.indexName,\n                range: options.range,\n                ...(options.filters && options.filters.length\n                    ? {\n                        filters: {\n                            [options.filterOperator || 'and']: options.filters\n                        }\n                    }\n                    : {}),\n                ...(options.partition ? { partition: options.partition } : {}),\n                ...(options.sort ? { sort: options.sort } : {}),\n                ...(options.cursor ? { cursor: options.cursor } : {}),\n                ...(options.limit ? { limit: options.limit } : {})\n            }\n        };\n    };\n}\nexports.CustomEntityQueries = CustomEntityQueries;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CustomEntityIndexBuilder = exports.APIError = exports.SortOrder = exports.EntityStorageBuilder = exports.FilterConditions = exports.WhereConditions = exports.startsWith = exports.GlobalStorage = exports.getStorageInstanceWithQuery = void 0;\nconst entity_storage_1 = require(\"./entity-storage\");\nconst query_api_1 = require(\"./query-api\");\nconst getStorageInstanceWithQuery = (adapter) => {\n    return {\n        get: adapter.get.bind(adapter),\n        set: adapter.set.bind(adapter),\n        delete: adapter.delete.bind(adapter),\n        getSecret: adapter.getSecret.bind(adapter),\n        setSecret: adapter.setSecret.bind(adapter),\n        deleteSecret: adapter.deleteSecret.bind(adapter),\n        query: () => new query_api_1.DefaultQueryBuilder(adapter),\n        entity: (entityName) => new entity_storage_1.EntityStorageBuilder(entityName, adapter)\n    };\n};\nexports.getStorageInstanceWithQuery = getStorageInstanceWithQuery;\nvar global_storage_1 = require(\"./global-storage\");\nObject.defineProperty(exports, \"GlobalStorage\", { enumerable: true, get: function () { return global_storage_1.GlobalStorage; } });\nvar conditions_1 = require(\"./conditions\");\nObject.defineProperty(exports, \"startsWith\", { enumerable: true, get: function () { return conditions_1.startsWith; } });\nvar conditions_2 = require(\"./eap/conditions\");\nObject.defineProperty(exports, \"WhereConditions\", { enumerable: true, get: function () { return conditions_2.WhereConditions; } });\nObject.defineProperty(exports, \"FilterConditions\", { enumerable: true, get: function () { return conditions_2.FilterConditions; } });\nvar entity_storage_2 = require(\"./entity-storage\");\nObject.defineProperty(exports, \"EntityStorageBuilder\", { enumerable: true, get: function () { return entity_storage_2.EntityStorageBuilder; } });\nvar query_interfaces_1 = require(\"./query-interfaces\");\nObject.defineProperty(exports, \"SortOrder\", { enumerable: true, get: function () { return query_interfaces_1.SortOrder; } });\nvar errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"APIError\", { enumerable: true, get: function () { return errors_1.APIError; } });\nvar query_api_2 = require(\"./entity-storage/query-api\");\nObject.defineProperty(exports, \"CustomEntityIndexBuilder\", { enumerable: true, get: function () { return query_api_2.CustomEntityIndexBuilder; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultQueryBuilder = void 0;\nclass DefaultQueryBuilder {\n    globalStorage;\n    queryOptions;\n    constructor(globalStorage, queryOptions = {}) {\n        this.globalStorage = globalStorage;\n        this.queryOptions = queryOptions;\n    }\n    where(field, where) {\n        return new DefaultQueryBuilder(this.globalStorage, {\n            ...this.queryOptions,\n            where: [\n                {\n                    field,\n                    ...where\n                }\n            ]\n        });\n    }\n    cursor(cursor) {\n        return new DefaultQueryBuilder(this.globalStorage, {\n            ...this.queryOptions,\n            cursor\n        });\n    }\n    limit(limit) {\n        return new DefaultQueryBuilder(this.globalStorage, {\n            ...this.queryOptions,\n            limit\n        });\n    }\n    async getOne() {\n        const { results } = await this.limit(1).getMany();\n        if (results && results.length > 0) {\n            return results[0];\n        }\n    }\n    async getMany() {\n        return this.globalStorage.list(this.queryOptions);\n    }\n}\nexports.DefaultQueryBuilder = DefaultQueryBuilder;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SortOrder = void 0;\nvar SortOrder;\n(function (SortOrder) {\n    SortOrder[\"ASC\"] = \"ASC\";\n    SortOrder[\"DESC\"] = \"DESC\";\n})(SortOrder = exports.SortOrder || (exports.SortOrder = {}));\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: !0 });\n}, __copyProps = (to, from, except, desc) => {\n  if (from && typeof from == \"object\" || typeof from == \"function\")\n    for (let key of __getOwnPropNames(from))\n      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: !0 }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  AnalyticsUserAri: () => AnalyticsUserAri,\n  AnyAri: () => AnyAri,\n  ApprovalDeskDecisionTableAri: () => ApprovalDeskDecisionTableAri,\n  ApprovalDeskRoleAri: () => ApprovalDeskRoleAri,\n  ApprovalDeskWorkflowAri: () => ApprovalDeskWorkflowAri,\n  ApprovalDeskWorkspaceAri: () => ApprovalDeskWorkspaceAri,\n  Ari: () => Ari,\n  Arm: () => Arm,\n  Ati: () => Ati,\n  AtlashubIdAri: () => AtlashubIdAri,\n  AtlashubSiteAri: () => AtlashubSiteAri,\n  AutomationRoleAri: () => AutomationRoleAri,\n  AutomationRuleAri: () => AutomationRuleAri,\n  AvocadoAnswerAri: () => AvocadoAnswerAri,\n  AvocadoQuestionAri: () => AvocadoQuestionAri,\n  AvocadoRoleAri: () => AvocadoRoleAri,\n  AvocadoSiteAri: () => AvocadoSiteAri,\n  AvocadoUserAri: () => AvocadoUserAri,\n  AvpDashboardAri: () => AvpDashboardAri,\n  AvpDatasourceAri: () => AvpDatasourceAri,\n  AvpRoleAri: () => AvpRoleAri,\n  AvpSiteAri: () => AvpSiteAri,\n  BeaconAlertAri: () => BeaconAlertAri,\n  BeaconCustomDetectionAri: () => BeaconCustomDetectionAri,\n  BeaconDetectionAri: () => BeaconDetectionAri,\n  BeaconDetectionSettingAri: () => BeaconDetectionSettingAri,\n  BeaconRoleAri: () => BeaconRoleAri,\n  BeaconSiteAri: () => BeaconSiteAri,\n  BeaconSubscriptionAri: () => BeaconSubscriptionAri,\n  BeaconWorkspaceAri: () => BeaconWorkspaceAri,\n  BitbucketAppAri: () => BitbucketAppAri,\n  BitbucketOauthConsumerAri: () => BitbucketOauthConsumerAri,\n  BitbucketProjectAri: () => BitbucketProjectAri,\n  BitbucketPullrequestAri: () => BitbucketPullrequestAri,\n  BitbucketRepositoryAri: () => BitbucketRepositoryAri,\n  BitbucketRepositoryTransferAri: () => BitbucketRepositoryTransferAri,\n  BitbucketSiteAri: () => BitbucketSiteAri,\n  BitbucketTeamAri: () => BitbucketTeamAri,\n  BitbucketWorkspaceAri: () => BitbucketWorkspaceAri,\n  BrieRoleAri: () => BrieRoleAri,\n  BrieSiteAri: () => BrieSiteAri,\n  CanvasBoardAri: () => CanvasBoardAri,\n  CanvasDatabaseAri: () => CanvasDatabaseAri,\n  CanvasSiteAri: () => CanvasSiteAri,\n  CanvasWorkspaceAri: () => CanvasWorkspaceAri,\n  CmdbAttributeAri: () => CmdbAttributeAri,\n  CmdbImportConfigurationAri: () => CmdbImportConfigurationAri,\n  CmdbObjectAri: () => CmdbObjectAri,\n  CmdbRoleAri: () => CmdbRoleAri,\n  CmdbSchemaAri: () => CmdbSchemaAri,\n  CmdbTypeAri: () => CmdbTypeAri,\n  CmdbWorkspaceAri: () => CmdbWorkspaceAri,\n  CommerceCatalogAccountAri: () => CommerceCatalogAccountAri,\n  CommerceChangeAri: () => CommerceChangeAri,\n  CommerceEntitlementAri: () => CommerceEntitlementAri,\n  CommerceEntitlementTemplateAri: () => CommerceEntitlementTemplateAri,\n  CommerceInitiativeAri: () => CommerceInitiativeAri,\n  CommerceInvoiceGroupAri: () => CommerceInvoiceGroupAri,\n  CommerceOfferingAri: () => CommerceOfferingAri,\n  CommerceOfferingRelationshipTemplateAri: () => CommerceOfferingRelationshipTemplateAri,\n  CommerceOrderAri: () => CommerceOrderAri,\n  CommercePaymentMethodAri: () => CommercePaymentMethodAri,\n  CommercePricingPlanAri: () => CommercePricingPlanAri,\n  CommerceProductAri: () => CommerceProductAri,\n  CommercePromotionAri: () => CommercePromotionAri,\n  CommerceQuoteAri: () => CommerceQuoteAri,\n  CommerceRoleAri: () => CommerceRoleAri,\n  CommerceShipToPartyAri: () => CommerceShipToPartyAri,\n  CommerceTransactionAccountAri: () => CommerceTransactionAccountAri,\n  CommerceWorkbenchResourceAri: () => CommerceWorkbenchResourceAri,\n  CompassAssistantAnswerAri: () => CompassAssistantAnswerAri,\n  CompassComponentAri: () => CompassComponentAri,\n  CompassComponentLabelAri: () => CompassComponentLabelAri,\n  CompassComponentLinkAri: () => CompassComponentLinkAri,\n  CompassCustomFieldDefinitionAri: () => CompassCustomFieldDefinitionAri,\n  CompassDocumentAri: () => CompassDocumentAri,\n  CompassDocumentationCategoryAri: () => CompassDocumentationCategoryAri,\n  CompassEventSourceAri: () => CompassEventSourceAri,\n  CompassIncomingWebhookAri: () => CompassIncomingWebhookAri,\n  CompassMetricDefinitionAri: () => CompassMetricDefinitionAri,\n  CompassMetricSourceAri: () => CompassMetricSourceAri,\n  CompassRoleAri: () => CompassRoleAri,\n  CompassScorecardAri: () => CompassScorecardAri,\n  CompassSiteAri: () => CompassSiteAri,\n  CompassUserDefinedParameterAri: () => CompassUserDefinedParameterAri,\n  CompassWebhookAri: () => CompassWebhookAri,\n  CompassWorkspaceAri: () => CompassWorkspaceAri,\n  ConfluenceAdminAnnouncementBannerAri: () => ConfluenceAdminAnnouncementBannerAri,\n  ConfluenceAttachmentAri: () => ConfluenceAttachmentAri,\n  ConfluenceBlogpostAri: () => ConfluenceBlogpostAri,\n  ConfluenceCommentAri: () => ConfluenceCommentAri,\n  ConfluenceContentAri: () => ConfluenceContentAri,\n  ConfluenceDatabaseAri: () => ConfluenceDatabaseAri,\n  ConfluenceEmbedAri: () => ConfluenceEmbedAri,\n  ConfluenceEventAri: () => ConfluenceEventAri,\n  ConfluenceFolderAri: () => ConfluenceFolderAri,\n  ConfluenceLongRunningTaskAri: () => ConfluenceLongRunningTaskAri,\n  ConfluenceNoteAri: () => ConfluenceNoteAri,\n  ConfluencePageAri: () => ConfluencePageAri,\n  ConfluencePublicLinkAri: () => ConfluencePublicLinkAri,\n  ConfluenceRoleAri: () => ConfluenceRoleAri,\n  ConfluenceSiteAri: () => ConfluenceSiteAri,\n  ConfluenceSpaceAri: () => ConfluenceSpaceAri,\n  ConfluenceTaskAri: () => ConfluenceTaskAri,\n  ConfluenceTeamCalendarAri: () => ConfluenceTeamCalendarAri,\n  ConfluenceUserPropertyAri: () => ConfluenceUserPropertyAri,\n  ConfluenceWhiteboardAri: () => ConfluenceWhiteboardAri,\n  ConfluenceWorkspaceAri: () => ConfluenceWorkspaceAri,\n  ConnectionRegistryLinkAri: () => ConnectionRegistryLinkAri,\n  ConversationalHelpConversationAri: () => ConversationalHelpConversationAri,\n  ConversationalHelpConversationMessageAri: () => ConversationalHelpConversationMessageAri,\n  DataLakeLakeConnectionAri: () => DataLakeLakeConnectionAri,\n  DevopsContainerAri: () => DevopsContainerAri,\n  DevopsNamespaceAri: () => DevopsNamespaceAri,\n  DevopsProviderAri: () => DevopsProviderAri,\n  DevopsRelationshipAri: () => DevopsRelationshipAri,\n  DevopsToolAri: () => DevopsToolAri,\n  EcosystemAppAri: () => EcosystemAppAri,\n  EcosystemAppEnvironmentVersionAri: () => EcosystemAppEnvironmentVersionAri,\n  EcosystemConnectAppAri: () => EcosystemConnectAppAri,\n  EcosystemEnvironmentAri: () => EcosystemEnvironmentAri,\n  EcosystemExtensionAri: () => EcosystemExtensionAri,\n  EcosystemExtensionGroupAri: () => EcosystemExtensionGroupAri,\n  EcosystemInstallationAri: () => EcosystemInstallationAri,\n  ElementsCustomEmojiMetadataAri: () => ElementsCustomEmojiMetadataAri,\n  ElementsWorkspaceAri: () => ElementsWorkspaceAri,\n  ExusExternalUserAri: () => ExusExternalUserAri,\n  FigmaFileAri: () => FigmaFileAri,\n  GoogleDocumentAri: () => GoogleDocumentAri,\n  GoogleFormAri: () => GoogleFormAri,\n  GooglePresentationAri: () => GooglePresentationAri,\n  GoogleSpreadsheetAri: () => GoogleSpreadsheetAri,\n  GraphBranchAri: () => GraphBranchAri,\n  GraphBranchHistoryAri: () => GraphBranchHistoryAri,\n  GraphBuildAri: () => GraphBuildAri,\n  GraphBuildHistoryAri: () => GraphBuildHistoryAri,\n  GraphCommitAri: () => GraphCommitAri,\n  GraphContentAri: () => GraphContentAri,\n  GraphDeploymentAri: () => GraphDeploymentAri,\n  GraphDeploymentHistoryAri: () => GraphDeploymentHistoryAri,\n  GraphDesignAri: () => GraphDesignAri,\n  GraphDesignHistoryAri: () => GraphDesignHistoryAri,\n  GraphDevopsComponentAri: () => GraphDevopsComponentAri,\n  GraphDocumentAri: () => GraphDocumentAri,\n  GraphDocumentHistoryAri: () => GraphDocumentHistoryAri,\n  GraphEmployeeAri: () => GraphEmployeeAri,\n  GraphEmployeeHistoryAri: () => GraphEmployeeHistoryAri,\n  GraphFeatureFlagAri: () => GraphFeatureFlagAri,\n  GraphFeatureFlagHistoryAri: () => GraphFeatureFlagHistoryAri,\n  GraphIncidentAri: () => GraphIncidentAri,\n  GraphIncidentHistoryAri: () => GraphIncidentHistoryAri,\n  GraphJiraProjectAndDevopsToolRelationshipAri: () => GraphJiraProjectAndDevopsToolRelationshipAri,\n  GraphJiraProjectAndDocumentationSpaceRelationshipAri: () => GraphJiraProjectAndDocumentationSpaceRelationshipAri,\n  GraphJiraProjectAndOperationsTeamRelationshipAri: () => GraphJiraProjectAndOperationsTeamRelationshipAri,\n  GraphJiraProjectAndVcsRepositoryRelationshipAri: () => GraphJiraProjectAndVcsRepositoryRelationshipAri,\n  GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAri: () => GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAri,\n  GraphOperationsWorkspaceAri: () => GraphOperationsWorkspaceAri,\n  GraphPostIncidentReviewAri: () => GraphPostIncidentReviewAri,\n  GraphPostIncidentReviewHistoryAri: () => GraphPostIncidentReviewHistoryAri,\n  GraphProjectAri: () => GraphProjectAri,\n  GraphPullRequestAri: () => GraphPullRequestAri,\n  GraphPullRequestHistoryAri: () => GraphPullRequestHistoryAri,\n  GraphRemoteLinkAri: () => GraphRemoteLinkAri,\n  GraphRemoteLinkHistoryAri: () => GraphRemoteLinkHistoryAri,\n  GraphRepositoryAri: () => GraphRepositoryAri,\n  GraphSecurityContainerAri: () => GraphSecurityContainerAri,\n  GraphSecurityWorkspaceAri: () => GraphSecurityWorkspaceAri,\n  GraphServiceAndJiraProjectRelationshipAri: () => GraphServiceAndJiraProjectRelationshipAri,\n  GraphServiceAndOperationsTeamRelationshipAri: () => GraphServiceAndOperationsTeamRelationshipAri,\n  GraphServiceAndVcsRepositoryRelationshipAri: () => GraphServiceAndVcsRepositoryRelationshipAri,\n  GraphServiceAri: () => GraphServiceAri,\n  GraphServiceRelationshipAri: () => GraphServiceRelationshipAri,\n  GraphVideoAri: () => GraphVideoAri,\n  GraphVideoHistoryAri: () => GraphVideoHistoryAri,\n  GraphVulnerabilityAri: () => GraphVulnerabilityAri,\n  GraphVulnerabilityHistoryAri: () => GraphVulnerabilityHistoryAri,\n  GraphWorkspaceAri: () => GraphWorkspaceAri,\n  HelpArticleAri: () => HelpArticleAri,\n  HelpChannelAri: () => HelpChannelAri,\n  HelpHelpCenterAri: () => HelpHelpCenterAri,\n  HelpHelpDeskAri: () => HelpHelpDeskAri,\n  HelpLayoutAri: () => HelpLayoutAri,\n  HelpPortalAri: () => HelpPortalAri,\n  HelpRequestFormAri: () => HelpRequestFormAri,\n  IdentityAppAri: () => IdentityAppAri,\n  IdentityAuthPolicyAri: () => IdentityAuthPolicyAri,\n  IdentityCustomerDirectoryAri: () => IdentityCustomerDirectoryAri,\n  IdentityCustomerOrganizationAri: () => IdentityCustomerOrganizationAri,\n  IdentityDirectoryAri: () => IdentityDirectoryAri,\n  IdentityDomainAri: () => IdentityDomainAri,\n  IdentityGroupAri: () => IdentityGroupAri,\n  IdentityOauthClientAri: () => IdentityOauthClientAri,\n  IdentityRoleAri: () => IdentityRoleAri,\n  IdentitySiteAri: () => IdentitySiteAri,\n  IdentityTeamAri: () => IdentityTeamAri,\n  IdentityTeamMemberAri: () => IdentityTeamMemberAri,\n  IdentityThirdPartyGroupAri: () => IdentityThirdPartyGroupAri,\n  IdentityThirdPartyUserAri: () => IdentityThirdPartyUserAri,\n  IdentityUserAri: () => IdentityUserAri,\n  IdentityUserGrantAri: () => IdentityUserGrantAri,\n  IdentityUserbaseAri: () => IdentityUserbaseAri,\n  JiraAlignEpicAri: () => JiraAlignEpicAri,\n  JiraAlignInstanceAri: () => JiraAlignInstanceAri,\n  JiraAnnouncementBannerAri: () => JiraAnnouncementBannerAri,\n  JiraAvailableFieldsAri: () => JiraAvailableFieldsAri,\n  JiraBranchAri: () => JiraBranchAri,\n  JiraBranchHistoryAri: () => JiraBranchHistoryAri,\n  JiraBuildAri: () => JiraBuildAri,\n  JiraBuildHistoryAri: () => JiraBuildHistoryAri,\n  JiraBulkOperationTaskAri: () => JiraBulkOperationTaskAri,\n  JiraCommentAri: () => JiraCommentAri,\n  JiraCommitAri: () => JiraCommitAri,\n  JiraComponentAri: () => JiraComponentAri,\n  JiraConnectAppAri: () => JiraConnectAppAri,\n  JiraCoreRoleAri: () => JiraCoreRoleAri,\n  JiraCoreSiteAri: () => JiraCoreSiteAri,\n  JiraDashboardAri: () => JiraDashboardAri,\n  JiraDeploymentAri: () => JiraDeploymentAri,\n  JiraDeploymentHistoryAri: () => JiraDeploymentHistoryAri,\n  JiraDesignAri: () => JiraDesignAri,\n  JiraDesignHistoryAri: () => JiraDesignHistoryAri,\n  JiraDevopsComponentAri: () => JiraDevopsComponentAri,\n  JiraDocumentAri: () => JiraDocumentAri,\n  JiraDocumentHistoryAri: () => JiraDocumentHistoryAri,\n  JiraEntitlementAri: () => JiraEntitlementAri,\n  JiraEntityPropertyAri: () => JiraEntityPropertyAri,\n  JiraFavouriteAri: () => JiraFavouriteAri,\n  JiraFeatureFlagAri: () => JiraFeatureFlagAri,\n  JiraFeatureFlagHistoryAri: () => JiraFeatureFlagHistoryAri,\n  JiraFilterAri: () => JiraFilterAri,\n  JiraFilterEmailSubscriptionAri: () => JiraFilterEmailSubscriptionAri,\n  JiraIncidentAri: () => JiraIncidentAri,\n  JiraIncidentHistoryAri: () => JiraIncidentHistoryAri,\n  JiraIssueAri: () => JiraIssueAri,\n  JiraIssueAttachmentAri: () => JiraIssueAttachmentAri,\n  JiraIssueCommentAri: () => JiraIssueCommentAri,\n  JiraIssueFieldMetadataAri: () => JiraIssueFieldMetadataAri,\n  JiraIssueFieldOptionAri: () => JiraIssueFieldOptionAri,\n  JiraIssueHistoryAri: () => JiraIssueHistoryAri,\n  JiraIssueLinkAri: () => JiraIssueLinkAri,\n  JiraIssueLinkTypeAri: () => JiraIssueLinkTypeAri,\n  JiraIssueRemoteLinkAri: () => JiraIssueRemoteLinkAri,\n  JiraIssueSearchViewAri: () => JiraIssueSearchViewAri,\n  JiraIssueStatusAri: () => JiraIssueStatusAri,\n  JiraIssueTypeAri: () => JiraIssueTypeAri,\n  JiraIssueTypeSchemeAri: () => JiraIssueTypeSchemeAri,\n  JiraIssueTypeSchemeMappingAri: () => JiraIssueTypeSchemeMappingAri,\n  JiraIssueWorklogAri: () => JiraIssueWorklogAri,\n  JiraIssuefieldvalueAri: () => JiraIssuefieldvalueAri,\n  JiraNavigationConfigAri: () => JiraNavigationConfigAri,\n  JiraNavigationItemAri: () => JiraNavigationItemAri,\n  JiraNotificationTypeAri: () => JiraNotificationTypeAri,\n  JiraNotificationTypeSchemeAri: () => JiraNotificationTypeSchemeAri,\n  JiraNotificationUserPreferenceAri: () => JiraNotificationUserPreferenceAri,\n  JiraOperationsWorkspaceAri: () => JiraOperationsWorkspaceAri,\n  JiraPermissionSchemeAri: () => JiraPermissionSchemeAri,\n  JiraPlanAri: () => JiraPlanAri,\n  JiraPlanCrossProjectScenarioVersionAri: () => JiraPlanCrossProjectScenarioVersionAri,\n  JiraPlanCrossProjectVersionAri: () => JiraPlanCrossProjectVersionAri,\n  JiraPlanScenarioAri: () => JiraPlanScenarioAri,\n  JiraPlanScenarioIssueAri: () => JiraPlanScenarioIssueAri,\n  JiraPlanScenarioIssueFieldAri: () => JiraPlanScenarioIssueFieldAri,\n  JiraPlanScenarioVersionAri: () => JiraPlanScenarioVersionAri,\n  JiraPostIncidentReviewAri: () => JiraPostIncidentReviewAri,\n  JiraPostIncidentReviewHistoryAri: () => JiraPostIncidentReviewHistoryAri,\n  JiraPostIncidentReviewLinkAri: () => JiraPostIncidentReviewLinkAri,\n  JiraPriorityAri: () => JiraPriorityAri,\n  JiraProductAri: () => JiraProductAri,\n  JiraProjectAri: () => JiraProjectAri,\n  JiraProjectCategoryAri: () => JiraProjectCategoryAri,\n  JiraProjectFeatureAri: () => JiraProjectFeatureAri,\n  JiraProjectOverviewAri: () => JiraProjectOverviewAri,\n  JiraProjectRoleActorAri: () => JiraProjectRoleActorAri,\n  JiraProjectShortcutAri: () => JiraProjectShortcutAri,\n  JiraProjectTypeAri: () => JiraProjectTypeAri,\n  JiraPullRequestAri: () => JiraPullRequestAri,\n  JiraPullRequestHistoryAri: () => JiraPullRequestHistoryAri,\n  JiraRemoteLinkAri: () => JiraRemoteLinkAri,\n  JiraRemoteLinkHistoryAri: () => JiraRemoteLinkHistoryAri,\n  JiraRepositoryAri: () => JiraRepositoryAri,\n  JiraResolutionAri: () => JiraResolutionAri,\n  JiraResourceUsageMetricAri: () => JiraResourceUsageMetricAri,\n  JiraResourceUsageRecommendationAri: () => JiraResourceUsageRecommendationAri,\n  JiraRoleAri: () => JiraRoleAri,\n  JiraScreenTabAri: () => JiraScreenTabAri,\n  JiraSecurityContainerAri: () => JiraSecurityContainerAri,\n  JiraSecurityLevelAri: () => JiraSecurityLevelAri,\n  JiraSecurityWorkspaceAri: () => JiraSecurityWorkspaceAri,\n  JiraServicedeskApprovalAri: () => JiraServicedeskApprovalAri,\n  JiraServicedeskCalendarEventAri: () => JiraServicedeskCalendarEventAri,\n  JiraServicedeskCannedResponseAri: () => JiraServicedeskCannedResponseAri,\n  JiraServicedeskOrganizationAri: () => JiraServicedeskOrganizationAri,\n  JiraServicedeskQueueAri: () => JiraServicedeskQueueAri,\n  JiraServicedeskRequestTypeAri: () => JiraServicedeskRequestTypeAri,\n  JiraServicedeskRoleAri: () => JiraServicedeskRoleAri,\n  JiraServicedeskSiteAri: () => JiraServicedeskSiteAri,\n  JiraServicedeskSlaAri: () => JiraServicedeskSlaAri,\n  JiraSiteAri: () => JiraSiteAri,\n  JiraSoftwareBoardAri: () => JiraSoftwareBoardAri,\n  JiraSoftwareBoardFeatureAri: () => JiraSoftwareBoardFeatureAri,\n  JiraSoftwareBoardIssueListAri: () => JiraSoftwareBoardIssueListAri,\n  JiraSoftwareCardAri: () => JiraSoftwareCardAri,\n  JiraSoftwareCardColorAri: () => JiraSoftwareCardColorAri,\n  JiraSoftwareCardLayoutAri: () => JiraSoftwareCardLayoutAri,\n  JiraSoftwareCardParentAri: () => JiraSoftwareCardParentAri,\n  JiraSoftwareColumnAri: () => JiraSoftwareColumnAri,\n  JiraSoftwareCustomFilterAri: () => JiraSoftwareCustomFilterAri,\n  JiraSoftwareRoleAri: () => JiraSoftwareRoleAri,\n  JiraSoftwareSiteAri: () => JiraSoftwareSiteAri,\n  JiraSoftwareSwimlaneAri: () => JiraSoftwareSwimlaneAri,\n  JiraSoftwareUserBoardConfigAri: () => JiraSoftwareUserBoardConfigAri,\n  JiraSoftwareViewConfigAri: () => JiraSoftwareViewConfigAri,\n  JiraSprintAri: () => JiraSprintAri,\n  JiraUserBroadcastMessageAri: () => JiraUserBroadcastMessageAri,\n  JiraVersionApproverAri: () => JiraVersionApproverAri,\n  JiraVersionAri: () => JiraVersionAri,\n  JiraVulnerabilityAri: () => JiraVulnerabilityAri,\n  JiraVulnerabilityHistoryAri: () => JiraVulnerabilityHistoryAri,\n  JiraWorkflowAri: () => JiraWorkflowAri,\n  JiraWorkflowSchemeAri: () => JiraWorkflowSchemeAri,\n  JiraWorklogAri: () => JiraWorklogAri,\n  JiraWorkspaceAri: () => JiraWorkspaceAri,\n  LinkingPlatformDatasourceAri: () => LinkingPlatformDatasourceAri,\n  LoomSiteAri: () => LoomSiteAri,\n  MakerSpaceGroupAri: () => MakerSpaceGroupAri,\n  MapiRoleAri: () => MapiRoleAri,\n  MarketingCustomerDomainAri: () => MarketingCustomerDomainAri,\n  MarketplaceTeamAri: () => MarketplaceTeamAri,\n  MeasurementEmailUuidAri: () => MeasurementEmailUuidAri,\n  MeasurementSiteUserAri: () => MeasurementSiteUserAri,\n  MeasurementUserAri: () => MeasurementUserAri,\n  MediaFileAri: () => MediaFileAri,\n  MercuryCommentAri: () => MercuryCommentAri,\n  MercuryFocusAreaAri: () => MercuryFocusAreaAri,\n  MercuryFocusAreaStatusUpdateAri: () => MercuryFocusAreaStatusUpdateAri,\n  MercuryProgramAri: () => MercuryProgramAri,\n  MercuryProgramStatusUpdateAri: () => MercuryProgramStatusUpdateAri,\n  MercuryRoleAri: () => MercuryRoleAri,\n  MercurySiteAri: () => MercurySiteAri,\n  MercuryWorkspaceAri: () => MercuryWorkspaceAri,\n  MicrosoftChannelAri: () => MicrosoftChannelAri,\n  MicrosoftSharepointDocumentAri: () => MicrosoftSharepointDocumentAri,\n  OauthClientAri: () => OauthClientAri,\n  OpsgenieAccountLoginAri: () => OpsgenieAccountLoginAri,\n  OpsgenieAccountSettingsAri: () => OpsgenieAccountSettingsAri,\n  OpsgenieAlertAri: () => OpsgenieAlertAri,\n  OpsgenieAlertRecipientLinkAri: () => OpsgenieAlertRecipientLinkAri,\n  OpsgenieApiRequestMetricAri: () => OpsgenieApiRequestMetricAri,\n  OpsgenieCallRoutingAri: () => OpsgenieCallRoutingAri,\n  OpsgenieCustomRoleAri: () => OpsgenieCustomRoleAri,\n  OpsgenieDeploymentAri: () => OpsgenieDeploymentAri,\n  OpsgenieDeploymentServiceLinkAri: () => OpsgenieDeploymentServiceLinkAri,\n  OpsgenieEscalationAri: () => OpsgenieEscalationAri,\n  OpsgenieEventAri: () => OpsgenieEventAri,\n  OpsgenieIncidentAlertLinkAri: () => OpsgenieIncidentAlertLinkAri,\n  OpsgenieIncidentAri: () => OpsgenieIncidentAri,\n  OpsgenieIncidentStatusUpdateAri: () => OpsgenieIncidentStatusUpdateAri,\n  OpsgenieIncomingCallHistoryAri: () => OpsgenieIncomingCallHistoryAri,\n  OpsgenieIntegrationAri: () => OpsgenieIntegrationAri,\n  OpsgenieNotificationAri: () => OpsgenieNotificationAri,\n  OpsgenieRoleAri: () => OpsgenieRoleAri,\n  OpsgenieScheduleAri: () => OpsgenieScheduleAri,\n  OpsgenieScheduleRotationAri: () => OpsgenieScheduleRotationAri,\n  OpsgenieSiteAri: () => OpsgenieSiteAri,\n  OpsgenieTeamAri: () => OpsgenieTeamAri,\n  OpsgenieTimelineAri: () => OpsgenieTimelineAri,\n  OpsgenieWorkspaceAri: () => OpsgenieWorkspaceAri,\n  OrgPolicyPolicyAri: () => OrgPolicyPolicyAri,\n  PapiApiAri: () => PapiApiAri,\n  PapiRoleAri: () => PapiRoleAri,\n  PassionfruitUserAri: () => PassionfruitUserAri,\n  PeopleDataCostCenterAri: () => PeopleDataCostCenterAri,\n  PeopleDataJobProfileAri: () => PeopleDataJobProfileAri,\n  PeopleDataPositionAri: () => PeopleDataPositionAri,\n  PeopleDataSupervisoryOrgAri: () => PeopleDataSupervisoryOrgAri,\n  PeopleDataWorkerAri: () => PeopleDataWorkerAri,\n  PeoplePerftoolCalibrationAri: () => PeoplePerftoolCalibrationAri,\n  PeoplePerftoolFeedbackAri: () => PeoplePerftoolFeedbackAri,\n  PeoplePerftoolPerformanceAri: () => PeoplePerftoolPerformanceAri,\n  PlatformClassificationTagAri: () => PlatformClassificationTagAri,\n  PlatformIntegrationAri: () => PlatformIntegrationAri,\n  PlatformLifecycleResourceAri: () => PlatformLifecycleResourceAri,\n  PlatformLifecycleResourcePackageAri: () => PlatformLifecycleResourcePackageAri,\n  PlatformLifecycleResourcePackageTypeAri: () => PlatformLifecycleResourcePackageTypeAri,\n  PlatformOrgAri: () => PlatformOrgAri,\n  PlatformOrgUserAri: () => PlatformOrgUserAri,\n  PlatformSecureTunnelAri: () => PlatformSecureTunnelAri,\n  PlatformServicesStreamhubSchemaAri: () => PlatformServicesStreamhubSchemaAri,\n  PlatformSiteAri: () => PlatformSiteAri,\n  PollinatorCheckAri: () => PollinatorCheckAri,\n  PostOfficeMessageInstanceAri: () => PostOfficeMessageInstanceAri,\n  PostOfficeMessageTemplateAri: () => PostOfficeMessageTemplateAri,\n  ResourceOwner: () => ResourceOwnerEnum,\n  ResourceType: () => ResourceTypeEnum,\n  RovoSiteAri: () => RovoSiteAri,\n  RuntimeAuthClientRoleAri: () => RuntimeAuthClientRoleAri,\n  SearchEventAri: () => SearchEventAri,\n  SearchForwardDocumentAri: () => SearchForwardDocumentAri,\n  SearchForwardDocumentSubscriptionAri: () => SearchForwardDocumentSubscriptionAri,\n  SlackChannelAri: () => SlackChannelAri,\n  SlackMessageAri: () => SlackMessageAri,\n  StatuspageRoleAri: () => StatuspageRoleAri,\n  StatuspageSiteAri: () => StatuspageSiteAri,\n  SupportCustomerAri: () => SupportCustomerAri,\n  TeamsTeamAri: () => TeamsTeamAri,\n  TownsquareCommentAri: () => TownsquareCommentAri,\n  TownsquareGoalAri: () => TownsquareGoalAri,\n  TownsquareHelpPointerAri: () => TownsquareHelpPointerAri,\n  TownsquareLearningAri: () => TownsquareLearningAri,\n  TownsquareProjectAri: () => TownsquareProjectAri,\n  TownsquareQuestionAri: () => TownsquareQuestionAri,\n  TownsquareRoleAri: () => TownsquareRoleAri,\n  TownsquareSiteAri: () => TownsquareSiteAri,\n  TownsquareTagAri: () => TownsquareTagAri,\n  TownsquareWorkspaceAri: () => TownsquareWorkspaceAri,\n  TrelloAttachmentAri: () => TrelloAttachmentAri,\n  TrelloBoardAri: () => TrelloBoardAri,\n  TrelloCardAri: () => TrelloCardAri,\n  TrelloEnterpriseAri: () => TrelloEnterpriseAri,\n  TrelloListAri: () => TrelloListAri,\n  TrelloRoleAri: () => TrelloRoleAri,\n  TrelloSiteAri: () => TrelloSiteAri,\n  TrelloUserAri: () => TrelloUserAri,\n  TrelloWorkspaceAri: () => TrelloWorkspaceAri,\n  UnifiedHelpRoleAri: () => UnifiedHelpRoleAri,\n  UnifiedHelpSiteAri: () => UnifiedHelpSiteAri,\n  UnifiedHelpWorkspaceAri: () => UnifiedHelpWorkspaceAri,\n  UnifiedPortableProfileLinkedAccountAri: () => UnifiedPortableProfileLinkedAccountAri,\n  UnifiedPortableProfileParentAccountAri: () => UnifiedPortableProfileParentAccountAri,\n  UnifiedPortableProfileUnifiedAccountAri: () => UnifiedPortableProfileUnifiedAccountAri,\n  UnifiedPortableProfileUnifiedProfileAri: () => UnifiedPortableProfileUnifiedProfileAri,\n  ValidationError: () => ValidationError,\n  VirtualAgentConfigurationAri: () => VirtualAgentConfigurationAri,\n  VirtualAgentConversationAri: () => VirtualAgentConversationAri,\n  VirtualAgentFlowEditorAri: () => VirtualAgentFlowEditorAri,\n  VirtualAgentIntentProjectionAri: () => VirtualAgentIntentProjectionAri,\n  VirtualAgentIntentQuestionProjectionAri: () => VirtualAgentIntentQuestionProjectionAri,\n  VirtualAgentIntentRuleProjectionAri: () => VirtualAgentIntentRuleProjectionAri,\n  VirtualAgentIntentTemplateAri: () => VirtualAgentIntentTemplateAri,\n  WorkatoJobAri: () => WorkatoJobAri,\n  WorkatoRecipeAri: () => WorkatoRecipeAri,\n  WorkdayCostCenterAri: () => WorkdayCostCenterAri,\n  WorkdayJobProfileAri: () => WorkdayJobProfileAri,\n  WorkdayPositionAri: () => WorkdayPositionAri,\n  WorkdayStaffAri: () => WorkdayStaffAri,\n  WorkdaySupervisoryOrgAri: () => WorkdaySupervisoryOrgAri,\n  WorkdayWorkerAri: () => WorkdayWorkerAri\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/errors.ts\nvar ValidationError = class extends Error {\n};\n\n// src/core/rules/cloud-id.ts\nfunction validateCloudId(cloudId, format = new RegExp(\"^[a-zA-Z0-9\\\\-]*$\")) {\n  if (!cloudId.match(format))\n    throw new ValidationError(`Invalid cloud ID, expected ID of format ${format}.`);\n}\n\n// src/core/rules/platform-qualifier.ts\nfunction validatePlatformQualifier(qualifier) {\n  if (qualifier !== \"cloud\" && qualifier !== \"third-party\")\n    throw new ValidationError(`Identifier must have a qualifier of 'cloud' or 'third-party'. Received: ${qualifier}`);\n}\n\n// src/core/rules/qualifier.ts\nfunction validateAtiQualifier(qualifier) {\n  if (qualifier !== \"ati\")\n    throw new ValidationError(`ATI must have a qualifier of 'ati'. Received: ${qualifier}`);\n}\nfunction validateAriQualifier(qualifier) {\n  if (qualifier !== \"ari\")\n    throw new ValidationError(`ARI must have a qualifier of 'ari'. Received: ${qualifier}`);\n}\nfunction validateArmQualifier(qualifier) {\n  if (qualifier !== \"arm\")\n    throw new ValidationError(`ARM must have a qualifier of 'arm'. Received: ${qualifier}`);\n}\n\n// src/core/rules/resource-id.ts\nfunction validateResourceId(id, format = new RegExp(\"[!a-zA-Z0-9\\\\-_.~@:{}=]+(/[!a-zA-Z0-9\\\\-_.~@:{}=]+)*\" /* ANY_RESOURCE_ID */), key = \"resourceId\") {\n  let formatWithCarets = new RegExp(`^${format.source}$`);\n  if (!id.match(formatWithCarets))\n    throw new ValidationError(`Invalid ${key} - ${id}, expected ID of format ${formatWithCarets}.`);\n}\n\n// src/core/rules/resource-id-segments.ts\nfunction validateResourceIdSegments(resourceIdSegmentValues, resourceIdSegmentFormats) {\n  Object.entries(resourceIdSegmentValues).forEach(([resourceIdKey, resourceIdValue]) => {\n    validateResourceId(resourceIdValue, resourceIdSegmentFormats == null ? void 0 : resourceIdSegmentFormats[resourceIdKey], resourceIdKey);\n  });\n}\n\n// src/core/rules/resource-owner.ts\nfunction validateResourceOwner(owner, expectedResourceOwner) {\n  if (expectedResourceOwner && owner !== expectedResourceOwner)\n    throw new ValidationError(`Invalid resource owner - ${owner}, expected ${expectedResourceOwner}.`);\n}\n\n// src/core/rules/resource-type.ts\nfunction validateResourceType(type, expectedResourceType) {\n  if (expectedResourceType && type !== expectedResourceType)\n    throw new ValidationError(`Invalid resource type - ${type}, expected ${expectedResourceType}.`);\n}\n\n// src/core/parser/base.ts\nvar NUMBER_OF_BASE_SEGMENTS = 5, SEGMENT_SEPARATOR = \":\", BaseParser = class {\n  static getIdentifierSegments(inputStr, numberOfSegmentsRequired) {\n    let allSegments = inputStr.split(SEGMENT_SEPARATOR);\n    if (allSegments.length < numberOfSegmentsRequired)\n      throw new ValidationError(`Input string must have ${numberOfSegmentsRequired} segments.`);\n    if (allSegments.length > numberOfSegmentsRequired) {\n      let segments = allSegments.slice(0, NUMBER_OF_BASE_SEGMENTS - 1), segmentsForResourceId = allSegments.slice(NUMBER_OF_BASE_SEGMENTS - 1, allSegments.length);\n      return [...segments, segmentsForResourceId.join(SEGMENT_SEPARATOR)];\n    }\n    return allSegments;\n  }\n};\n\n// src/core/parser/ari.ts\nvar NUMBER_OF_ARI_SEGMENTS = 5, AriParser = class extends BaseParser {\n  static fromString(maybeAri, ariProperties) {\n    let segments = this.getIdentifierSegments(maybeAri, NUMBER_OF_ARI_SEGMENTS), [qualifier, platformQualifier, resourceOwner, cloudId, resourceTypeAndId] = segments, [resourceType, ...resourceIdSegments] = resourceTypeAndId.split(\"/\"), maybeAriDerivedProperties = {\n      qualifier,\n      platformQualifier,\n      cloudId,\n      resourceOwner,\n      resourceType,\n      resourceId: resourceIdSegments.join(\"/\"),\n      resourceIdSegmentValues: ariProperties != null && ariProperties.resourceIdSlug ? this.ariSegmentValuesFromSlug(\n        ariProperties.resourceIdSlug,\n        resourceIdSegments.join(\"/\"),\n        Object.keys(ariProperties.resourceIdSegmentFormats)\n      ) : {}\n    };\n    return this.fromOpts(maybeAriDerivedProperties, ariProperties);\n  }\n  static fromOpts(maybeAriOpts, ariProperties) {\n    let {\n      qualifier = \"ari\",\n      platformQualifier = \"cloud\",\n      resourceOwner,\n      cloudId,\n      resourceId,\n      resourceIdSegmentValues,\n      resourceType\n    } = maybeAriOpts;\n    return validateAriQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateCloudId(maybeAriOpts.cloudId || \"\", ariProperties == null ? void 0 : ariProperties.cloudId), validateResourceOwner(resourceOwner, ariProperties == null ? void 0 : ariProperties.resourceOwner), validateResourceType(resourceType, ariProperties == null ? void 0 : ariProperties.resourceType), validateResourceIdSegments(resourceIdSegmentValues, ariProperties == null ? void 0 : ariProperties.resourceIdSegmentFormats), {\n      qualifier,\n      resourceOwner,\n      resourceType,\n      platformQualifier,\n      cloudId,\n      resourceId,\n      resourceIdSegmentValues\n    };\n  }\n  static ariSegmentValuesFromSlug(slug, incomingSegments, expectedKeys) {\n    let regexpResult = new RegExp(\"^\" + slug.replace(/\\{(.*?)\\}/g, \"(?<$1>.*?)\") + \"$\").exec(incomingSegments);\n    if (!regexpResult)\n      throw new ValidationError(`Segment '${incomingSegments}' don't match expected slug: ${slug}`);\n    return expectedKeys.forEach((expectedKey) => {\n      var _a;\n      if (!((_a = regexpResult.groups) != null && _a[expectedKey]))\n        throw new ValidationError(`No value supplied for '${expectedKey}' based on slug ${slug}`);\n    }), regexpResult.groups || {};\n  }\n};\n\n// src/core/parser/ati.ts\nvar NUMBER_OF_ATI_SEGMENTS = 4, AtiParser = class extends BaseParser {\n  static fromString(inputStr, atiOpts) {\n    let segments = this.getIdentifierSegments(inputStr, NUMBER_OF_ATI_SEGMENTS), [qualifier = \"ati\", platformQualifier = \"cloud\", resourceOwner, resourceType] = segments;\n    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), { platformQualifier, resourceOwner, resourceType };\n  }\n  static fromOpts(maybeAtiOpts, atiOpts) {\n    let { qualifier, platformQualifier, resourceOwner, resourceType } = maybeAtiOpts;\n    return validateAtiQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateResourceOwner(resourceOwner, atiOpts == null ? void 0 : atiOpts.resourceOwner), validateResourceType(resourceType, atiOpts == null ? void 0 : atiOpts.resourceType), {\n      platformQualifier,\n      resourceOwner,\n      resourceType\n    };\n  }\n};\n\n// src/ati.ts\nvar Ati = class _Ati {\n  constructor(platformQualifier, resourceOwner, resourceType) {\n    this._platformQualifier = platformQualifier, this._resourceOwner = resourceOwner, this._resourceType = resourceType;\n  }\n  get platformQualifier() {\n    return this._platformQualifier;\n  }\n  get resourceOwner() {\n    return this._resourceOwner;\n  }\n  get resourceType() {\n    return this._resourceType;\n  }\n  static create(opts) {\n    return new _Ati(opts.platformQualifier || \"cloud\", opts.resourceOwner, opts.resourceType);\n  }\n  static parse(maybeAti, atiOpts) {\n    let opts = AtiParser.fromString(maybeAti, atiOpts);\n    return new _Ati(opts.platformQualifier, opts.resourceOwner, opts.resourceType);\n  }\n  toString() {\n    return `ati:${this.platformQualifier}:${this.resourceOwner}:${this.resourceType}`;\n  }\n  toJSON() {\n    return this.toString();\n  }\n  toOpts() {\n    return {\n      platformQualifier: this._platformQualifier,\n      resourceOwner: this._resourceOwner,\n      resourceType: this._resourceType\n    };\n  }\n};\n\n// src/core/ari.ts\nvar Ari = class {\n  constructor(opts) {\n    this._ati = Ati.create({\n      platformQualifier: opts.platformQualifier || \"cloud\",\n      resourceOwner: opts.resourceOwner,\n      resourceType: opts.resourceType\n    }), this._cloudId = opts.cloudId !== \"\" ? opts.cloudId : void 0, this._resourceId = opts.resourceId;\n  }\n  get platformQualifier() {\n    return this._ati.platformQualifier;\n  }\n  get cloudId() {\n    return this._cloudId;\n  }\n  get resourceOwner() {\n    return this._ati.resourceOwner;\n  }\n  get resourceType() {\n    return this._ati.resourceType;\n  }\n  get resourceId() {\n    return this._resourceId;\n  }\n  get ati() {\n    return this._ati;\n  }\n  equals(other) {\n    return this.toString() === other.toString();\n  }\n  toString() {\n    return `ari:${this.platformQualifier}:${this.resourceOwner}:${this.cloudId || \"\"}:${this.resourceType}/${this.resourceId}`;\n  }\n  toJSON() {\n    return this.toString();\n  }\n  toOpts() {\n    return {\n      platformQualifier: this.platformQualifier,\n      resourceOwner: this.resourceOwner,\n      cloudId: this.cloudId,\n      resourceType: this.resourceType,\n      resourceId: this.resourceId\n    };\n  }\n};\n\n// src/any-ari.ts\nvar AnyAri = class _AnyAri extends Ari {\n  constructor(opts) {\n    super(opts);\n  }\n  static create(ariOpts, ariStaticOpts) {\n    let ariOptsWithDefaults = { ...ariOpts, resourceIdSegmentValues: {} }, validatedOpts = AriParser.fromOpts(ariOptsWithDefaults, ariStaticOpts);\n    return new _AnyAri(validatedOpts);\n  }\n  static parse(maybeAri, ariStaticOpts) {\n    let validatedOpts = AriParser.fromString(maybeAri, ariStaticOpts);\n    return new _AnyAri(validatedOpts);\n  }\n  static check(maybeAri) {\n    try {\n      return _AnyAri.parse(maybeAri.toString()), !0;\n    } catch (err) {\n      return !1;\n    }\n  }\n  asAnyAri() {\n    return this;\n  }\n};\n\n// src/core/rules/resource-matcher.ts\nfunction validateNullableResourceMatcher(maybeMatcher) {\n  maybeMatcher.length !== 0 && validateMatcher(maybeMatcher);\n}\nfunction validateResourceMatcher(maybeMatcher) {\n  if (!maybeMatcher)\n    throw Error(\"Matcher must be defined\");\n  validateMatcher(maybeMatcher);\n}\nfunction validateMatcher(maybeMatcher) {\n  try {\n    new RegExp(maybeMatcher);\n  } catch (e) {\n    throw Error(\"Invalid matcher sequence\");\n  }\n}\n\n// src/core/parser/arm.ts\nvar NUMBER_OF_ARM_SEGMENTS = 5, ArmParser = class extends BaseParser {\n  static fromString(maybeArm) {\n    let segments = this.getIdentifierSegments(maybeArm, NUMBER_OF_ARM_SEGMENTS), [qualifier, platformQualifier, resourceOwnerMatcher, cloudIdMatcher, resourceTypeAndIdMatchers] = segments, [resourceTypeMatcher, resourceIdMatcher] = resourceTypeAndIdMatchers.split(\"/\"), maybeArmOpts = {\n      qualifier,\n      platformQualifier,\n      cloudIdMatcher,\n      resourceOwnerMatcher,\n      resourceTypeMatcher,\n      resourceIdMatcher\n    };\n    return this.fromOpts(maybeArmOpts);\n  }\n  static fromOpts(maybeArmOpts) {\n    let {\n      qualifier = \"arm\",\n      platformQualifier = \"cloud\",\n      cloudIdMatcher,\n      resourceOwnerMatcher,\n      resourceTypeMatcher,\n      resourceIdMatcher\n    } = maybeArmOpts;\n    return validateArmQualifier(qualifier), validatePlatformQualifier(platformQualifier), validateNullableResourceMatcher(cloudIdMatcher), validateResourceMatcher(resourceOwnerMatcher), validateResourceMatcher(resourceTypeMatcher), validateResourceMatcher(resourceIdMatcher), {\n      platformQualifier,\n      cloudIdMatcher,\n      resourceOwnerMatcher,\n      resourceTypeMatcher,\n      resourceIdMatcher\n    };\n  }\n};\n\n// src/arm.ts\nvar Arm = class _Arm {\n  static create(armOpts) {\n    let opts = ArmParser.fromOpts({\n      ...armOpts,\n      qualifier: \"arm\",\n      platformQualifier: armOpts.platformQualifier || \"cloud\",\n      cloudIdMatcher: armOpts.cloudIdMatcher\n    });\n    return new _Arm(opts);\n  }\n  static parse(maybeArm) {\n    let opts = ArmParser.fromString(maybeArm);\n    return new _Arm(opts);\n  }\n  constructor(opts) {\n    this._platformQualifier = opts.platformQualifier, this._cloudIdMatcher = opts.cloudIdMatcher, this._resourceOwnerMatcher = opts.resourceOwnerMatcher, this._resourceTypeMatcher = opts.resourceTypeMatcher, this._resourceIdMatcher = opts.resourceIdMatcher;\n  }\n  get platformQualifier() {\n    return this._platformQualifier;\n  }\n  get cloudIdMatcher() {\n    return this._cloudIdMatcher;\n  }\n  get resourceOwnerMatcher() {\n    return this._resourceOwnerMatcher;\n  }\n  get resourceTypeMatcher() {\n    return this._resourceTypeMatcher;\n  }\n  get resourceIdMatcher() {\n    return this._resourceIdMatcher;\n  }\n  match(ari) {\n    var _a, _b;\n    let cloudId = (_a = ari.cloudId) != null ? _a : \"\", resourceOwner = ari.resourceOwner, resourceType = ari.resourceType, resourceId = ari.resourceId;\n    return !(!new RegExp((_b = this.cloudIdMatcher) != null ? _b : \"\").test(cloudId) || !new RegExp(this.resourceOwnerMatcher).test(resourceOwner) || !new RegExp(this.resourceTypeMatcher).test(resourceType) || !new RegExp(this.resourceIdMatcher).test(resourceId));\n  }\n  equals(other) {\n    return this.toString() === other.toString();\n  }\n  toString() {\n    let {\n      platformQualifier,\n      resourceOwnerMatcher,\n      cloudIdMatcher = \"\",\n      resourceTypeMatcher,\n      resourceIdMatcher\n    } = this;\n    return `arm:${platformQualifier}:${resourceOwnerMatcher}:${cloudIdMatcher}:${resourceTypeMatcher}/${resourceIdMatcher}`;\n  }\n  toJSON() {\n    return this.toString();\n  }\n  toOpts() {\n    return {\n      platformQualifier: this.platformQualifier,\n      cloudIdMatcher: this.cloudIdMatcher,\n      resourceOwnerMatcher: this.resourceOwnerMatcher,\n      resourceTypeMatcher: this.resourceTypeMatcher,\n      resourceIdMatcher: this.resourceIdMatcher\n    };\n  }\n};\n\n// src/core/types/deprecated/resource-owner-enum.ts\nvar ResourceOwnerEnum = /* @__PURE__ */ ((ResourceOwnerEnum2) => (ResourceOwnerEnum2.Analytics = \"analytics\", ResourceOwnerEnum2.ApprovalDesk = \"approval-desk\", ResourceOwnerEnum2.Atlashub = \"atlashub\", ResourceOwnerEnum2.Automation = \"automation\", ResourceOwnerEnum2.Avocado = \"avocado\", ResourceOwnerEnum2.Avp = \"avp\", ResourceOwnerEnum2.Beacon = \"beacon\", ResourceOwnerEnum2.Bitbucket = \"bitbucket\", ResourceOwnerEnum2.Brie = \"brie\", ResourceOwnerEnum2.Canvas = \"canvas\", ResourceOwnerEnum2.Cmdb = \"cmdb\", ResourceOwnerEnum2.Commerce = \"commerce\", ResourceOwnerEnum2.Compass = \"compass\", ResourceOwnerEnum2.Confluence = \"confluence\", ResourceOwnerEnum2.ConnectionRegistry = \"connection-registry\", ResourceOwnerEnum2.ConversationalHelp = \"conversational-help\", ResourceOwnerEnum2.DataLake = \"data-lake\", ResourceOwnerEnum2.Devops = \"devops\", ResourceOwnerEnum2.Ecosystem = \"ecosystem\", ResourceOwnerEnum2.Elements = \"elements\", ResourceOwnerEnum2.ExusExternal = \"exus-external\", ResourceOwnerEnum2.Figma = \"figma\", ResourceOwnerEnum2.Google = \"google\", ResourceOwnerEnum2.Graph = \"graph\", ResourceOwnerEnum2.Help = \"help\", ResourceOwnerEnum2.Identity = \"identity\", ResourceOwnerEnum2.Jira = \"jira\", ResourceOwnerEnum2.JiraAlign = \"jira-align\", ResourceOwnerEnum2.JiraCore = \"jira-core\", ResourceOwnerEnum2.JiraServicedesk = \"jira-servicedesk\", ResourceOwnerEnum2.JiraSoftware = \"jira-software\", ResourceOwnerEnum2.LinkingPlatform = \"linking-platform\", ResourceOwnerEnum2.Loom = \"loom\", ResourceOwnerEnum2.MakerSpace = \"maker-space\", ResourceOwnerEnum2.Mapi = \"mapi\", ResourceOwnerEnum2.Marketing = \"marketing\", ResourceOwnerEnum2.Marketplace = \"marketplace\", ResourceOwnerEnum2.Measurement = \"measurement\", ResourceOwnerEnum2.Media = \"media\", ResourceOwnerEnum2.Mercury = \"mercury\", ResourceOwnerEnum2.Microsoft = \"microsoft\", ResourceOwnerEnum2.Oauth = \"oauth\", ResourceOwnerEnum2.Opsgenie = \"opsgenie\", ResourceOwnerEnum2.OrgPolicy = \"org-policy\", ResourceOwnerEnum2.Papi = \"papi\", ResourceOwnerEnum2.Passionfruit = \"passionfruit\", ResourceOwnerEnum2.PeopleData = \"people-data\", ResourceOwnerEnum2.PeoplePerftool = \"people-perftool\", ResourceOwnerEnum2.Platform = \"platform\", ResourceOwnerEnum2.PlatformServices = \"platform-services\", ResourceOwnerEnum2.Pollinator = \"pollinator\", ResourceOwnerEnum2.PostOffice = \"post-office\", ResourceOwnerEnum2.Rovo = \"rovo\", ResourceOwnerEnum2.RuntimeAuthClient = \"runtime-auth-client\", ResourceOwnerEnum2.Search = \"search\", ResourceOwnerEnum2.Slack = \"slack\", ResourceOwnerEnum2.Statuspage = \"statuspage\", ResourceOwnerEnum2.Support = \"support\", ResourceOwnerEnum2.Teams = \"teams\", ResourceOwnerEnum2.Townsquare = \"townsquare\", ResourceOwnerEnum2.Trello = \"trello\", ResourceOwnerEnum2.UnifiedHelp = \"unified-help\", ResourceOwnerEnum2.UnifiedPortableProfile = \"unified-portable-profile\", ResourceOwnerEnum2.VirtualAgent = \"virtual-agent\", ResourceOwnerEnum2.Workato = \"workato\", ResourceOwnerEnum2.Workday = \"workday\", ResourceOwnerEnum2))(ResourceOwnerEnum || {});\n\n// src/core/types/deprecated/resource-type-enum.ts\nvar ResourceTypeEnum = /* @__PURE__ */ ((ResourceTypeEnum2) => (ResourceTypeEnum2.AccountLogin = \"account-login\", ResourceTypeEnum2.AccountSettings = \"account-settings\", ResourceTypeEnum2.AdminAnnouncementBanner = \"admin-announcement-banner\", ResourceTypeEnum2.Alert = \"alert\", ResourceTypeEnum2.AlertRecipientLink = \"alert-recipient-link\", ResourceTypeEnum2.AnnouncementBanner = \"announcement-banner\", ResourceTypeEnum2.Answer = \"answer\", ResourceTypeEnum2.Api = \"api\", ResourceTypeEnum2.ApiRequestMetric = \"api-request-metric\", ResourceTypeEnum2.App = \"app\", ResourceTypeEnum2.AppEnvironmentVersion = \"app-environment-version\", ResourceTypeEnum2.Approval = \"approval\", ResourceTypeEnum2.Article = \"article\", ResourceTypeEnum2.AssistantAnswer = \"assistant-answer\", ResourceTypeEnum2.Attachment = \"attachment\", ResourceTypeEnum2.Attribute = \"attribute\", ResourceTypeEnum2.AuthPolicy = \"auth-policy\", ResourceTypeEnum2.AvailableFields = \"available-fields\", ResourceTypeEnum2.Blogpost = \"blogpost\", ResourceTypeEnum2.Board = \"board\", ResourceTypeEnum2.BoardFeature = \"board-feature\", ResourceTypeEnum2.BoardIssueList = \"board-issue-list\", ResourceTypeEnum2.Branch = \"branch\", ResourceTypeEnum2.BranchHistory = \"branch-history\", ResourceTypeEnum2.Build = \"build\", ResourceTypeEnum2.BuildHistory = \"build-history\", ResourceTypeEnum2.BulkOperationTask = \"bulk-operation-task\", ResourceTypeEnum2.CalendarEvent = \"calendar-event\", ResourceTypeEnum2.Calibration = \"calibration\", ResourceTypeEnum2.CallRouting = \"call-routing\", ResourceTypeEnum2.CannedResponse = \"canned-response\", ResourceTypeEnum2.Card = \"card\", ResourceTypeEnum2.CardColor = \"card-color\", ResourceTypeEnum2.CardLayout = \"card-layout\", ResourceTypeEnum2.CardParent = \"card-parent\", ResourceTypeEnum2.CatalogAccount = \"catalog-account\", ResourceTypeEnum2.Change = \"change\", ResourceTypeEnum2.Channel = \"channel\", ResourceTypeEnum2.Check = \"check\", ResourceTypeEnum2.ClassificationTag = \"classification-tag\", ResourceTypeEnum2.Client = \"client\", ResourceTypeEnum2.Column = \"column\", ResourceTypeEnum2.Comment = \"comment\", ResourceTypeEnum2.Commit = \"commit\", ResourceTypeEnum2.Component = \"component\", ResourceTypeEnum2.ComponentLabel = \"component-label\", ResourceTypeEnum2.ComponentLink = \"component-link\", ResourceTypeEnum2.Configuration = \"configuration\", ResourceTypeEnum2.ConnectApp = \"connect-app\", ResourceTypeEnum2.Container = \"container\", ResourceTypeEnum2.Content = \"content\", ResourceTypeEnum2.Conversation = \"conversation\", ResourceTypeEnum2.ConversationMessage = \"conversation-message\", ResourceTypeEnum2.CostCenter = \"cost-center\", ResourceTypeEnum2.CustomDetection = \"custom-detection\", ResourceTypeEnum2.CustomEmojiMetadata = \"custom-emoji-metadata\", ResourceTypeEnum2.Customer = \"customer\", ResourceTypeEnum2.CustomerDirectory = \"customer-directory\", ResourceTypeEnum2.CustomerDomain = \"customer-domain\", ResourceTypeEnum2.CustomerOrganization = \"customer-organization\", ResourceTypeEnum2.CustomFieldDefinition = \"custom-field-definition\", ResourceTypeEnum2.CustomFilter = \"custom-filter\", ResourceTypeEnum2.CustomRole = \"custom-role\", ResourceTypeEnum2.Dashboard = \"dashboard\", ResourceTypeEnum2.Database = \"database\", ResourceTypeEnum2.Datasource = \"datasource\", ResourceTypeEnum2.DecisionTable = \"decision-table\", ResourceTypeEnum2.Deployment = \"deployment\", ResourceTypeEnum2.DeploymentHistory = \"deployment-history\", ResourceTypeEnum2.DeploymentServiceLink = \"deployment-service-link\", ResourceTypeEnum2.Design = \"design\", ResourceTypeEnum2.DesignHistory = \"design-history\", ResourceTypeEnum2.Detection = \"detection\", ResourceTypeEnum2.DetectionSetting = \"detection-setting\", ResourceTypeEnum2.DevopsComponent = \"devops-component\", ResourceTypeEnum2.Directory = \"directory\", ResourceTypeEnum2.Document = \"document\", ResourceTypeEnum2.DocumentationCategory = \"documentation-category\", ResourceTypeEnum2.DocumentHistory = \"document-history\", ResourceTypeEnum2.Domain = \"domain\", ResourceTypeEnum2.EmailUuid = \"email-uuid\", ResourceTypeEnum2.Embed = \"embed\", ResourceTypeEnum2.Employee = \"employee\", ResourceTypeEnum2.EmployeeHistory = \"employee-history\", ResourceTypeEnum2.Enterprise = \"enterprise\", ResourceTypeEnum2.Entitlement = \"entitlement\", ResourceTypeEnum2.EntitlementTemplate = \"entitlement-template\", ResourceTypeEnum2.EntityProperty = \"entity-property\", ResourceTypeEnum2.Environment = \"environment\", ResourceTypeEnum2.Epic = \"epic\", ResourceTypeEnum2.Escalation = \"escalation\", ResourceTypeEnum2.Event = \"event\", ResourceTypeEnum2.EventSource = \"event-source\", ResourceTypeEnum2.Extension = \"extension\", ResourceTypeEnum2.ExtensionGroup = \"extension-group\", ResourceTypeEnum2.Favourite = \"favourite\", ResourceTypeEnum2.FeatureFlag = \"feature-flag\", ResourceTypeEnum2.FeatureFlagHistory = \"feature-flag-history\", ResourceTypeEnum2.Feedback = \"feedback\", ResourceTypeEnum2.File = \"file\", ResourceTypeEnum2.Filter = \"filter\", ResourceTypeEnum2.FilterEmailSubscription = \"filter-email-subscription\", ResourceTypeEnum2.FlowEditor = \"flow-editor\", ResourceTypeEnum2.FocusArea = \"focus-area\", ResourceTypeEnum2.FocusAreaStatusUpdate = \"focus-area-status-update\", ResourceTypeEnum2.Folder = \"folder\", ResourceTypeEnum2.Form = \"form\", ResourceTypeEnum2.ForwardDocument = \"forward-document\", ResourceTypeEnum2.ForwardDocumentSubscription = \"forward-document-subscription\", ResourceTypeEnum2.Goal = \"goal\", ResourceTypeEnum2.Group = \"group\", ResourceTypeEnum2.HelpCenter = \"help-center\", ResourceTypeEnum2.HelpDesk = \"help-desk\", ResourceTypeEnum2.HelpPointer = \"help-pointer\", ResourceTypeEnum2.Id = \"id\", ResourceTypeEnum2.ImportConfiguration = \"import-configuration\", ResourceTypeEnum2.Incident = \"incident\", ResourceTypeEnum2.IncidentAlertLink = \"incident-alert-link\", ResourceTypeEnum2.IncidentHistory = \"incident-history\", ResourceTypeEnum2.IncidentStatusUpdate = \"incident-status-update\", ResourceTypeEnum2.IncomingCallHistory = \"incoming-call-history\", ResourceTypeEnum2.IncomingWebhook = \"incoming-webhook\", ResourceTypeEnum2.Initiative = \"initiative\", ResourceTypeEnum2.Installation = \"installation\", ResourceTypeEnum2.Instance = \"instance\", ResourceTypeEnum2.Integration = \"integration\", ResourceTypeEnum2.IntentProjection = \"intent-projection\", ResourceTypeEnum2.IntentQuestionProjection = \"intent-question-projection\", ResourceTypeEnum2.IntentRuleProjection = \"intent-rule-projection\", ResourceTypeEnum2.IntentTemplate = \"intent-template\", ResourceTypeEnum2.InvoiceGroup = \"invoice-group\", ResourceTypeEnum2.Issue = \"issue\", ResourceTypeEnum2.IssueAttachment = \"issue-attachment\", ResourceTypeEnum2.IssueComment = \"issue-comment\", ResourceTypeEnum2.IssueFieldMetadata = \"issue-field-metadata\", ResourceTypeEnum2.IssueFieldOption = \"issue-field-option\", ResourceTypeEnum2.Issuefieldvalue = \"issuefieldvalue\", ResourceTypeEnum2.IssueHistory = \"issue-history\", ResourceTypeEnum2.IssueLink = \"issue-link\", ResourceTypeEnum2.IssueLinkType = \"issue-link-type\", ResourceTypeEnum2.IssueRemoteLink = \"issue-remote-link\", ResourceTypeEnum2.IssueSearchView = \"issue-search-view\", ResourceTypeEnum2.IssueStatus = \"issue-status\", ResourceTypeEnum2.IssueType = \"issue-type\", ResourceTypeEnum2.IssueTypeScheme = \"issue-type-scheme\", ResourceTypeEnum2.IssueTypeSchemeMapping = \"issue-type-scheme-mapping\", ResourceTypeEnum2.IssueWorklog = \"issue-worklog\", ResourceTypeEnum2.JiraProjectAndDevopsToolRelationship = \"jira-project-and-devops-tool-relationship\", ResourceTypeEnum2.JiraProjectAndDocumentationSpaceRelationship = \"jira-project-and-documentation-space-relationship\", ResourceTypeEnum2.JiraProjectAndOperationsTeamRelationship = \"jira-project-and-operations-team-relationship\", ResourceTypeEnum2.JiraProjectAndVcsRepositoryRelationship = \"jira-project-and-vcs-repository-relationship\", ResourceTypeEnum2.JiraProjectAndVcsRepositoryRelationshipTempMigration = \"jira-project-and-vcs-repository-relationship-temp-migration\", ResourceTypeEnum2.Job = \"job\", ResourceTypeEnum2.JobProfile = \"job-profile\", ResourceTypeEnum2.LakeConnection = \"lake-connection\", ResourceTypeEnum2.Layout = \"layout\", ResourceTypeEnum2.Learning = \"learning\", ResourceTypeEnum2.LifecycleResource = \"lifecycle-resource\", ResourceTypeEnum2.LifecycleResourcePackage = \"lifecycle-resource-package\", ResourceTypeEnum2.LifecycleResourcePackageType = \"lifecycle-resource-package-type\", ResourceTypeEnum2.Link = \"link\", ResourceTypeEnum2.LinkedAccount = \"linked-account\", ResourceTypeEnum2.List = \"list\", ResourceTypeEnum2.LongRunningTask = \"long-running-task\", ResourceTypeEnum2.Message = \"message\", ResourceTypeEnum2.MessageInstance = \"message-instance\", ResourceTypeEnum2.MessageTemplate = \"message-template\", ResourceTypeEnum2.MetricDefinition = \"metric-definition\", ResourceTypeEnum2.MetricSource = \"metric-source\", ResourceTypeEnum2.Namespace = \"namespace\", ResourceTypeEnum2.NavigationConfig = \"navigation-config\", ResourceTypeEnum2.NavigationItem = \"navigation-item\", ResourceTypeEnum2.Note = \"note\", ResourceTypeEnum2.Notification = \"notification\", ResourceTypeEnum2.NotificationType = \"notification-type\", ResourceTypeEnum2.NotificationTypeScheme = \"notification-type-scheme\", ResourceTypeEnum2.NotificationUserPreference = \"notification-user-preference\", ResourceTypeEnum2.OauthClient = \"oauthClient\", ResourceTypeEnum2.OauthConsumer = \"oauth-consumer\", ResourceTypeEnum2.Object = \"object\", ResourceTypeEnum2.Offering = \"offering\", ResourceTypeEnum2.OfferingRelationshipTemplate = \"offering-relationship-template\", ResourceTypeEnum2.OperationsWorkspace = \"operations-workspace\", ResourceTypeEnum2.Order = \"order\", ResourceTypeEnum2.Org = \"org\", ResourceTypeEnum2.Organization = \"organization\", ResourceTypeEnum2.OrgUser = \"org-user\", ResourceTypeEnum2.Page = \"page\", ResourceTypeEnum2.ParentAccount = \"parent-account\", ResourceTypeEnum2.PaymentMethod = \"payment-method\", ResourceTypeEnum2.Performance = \"performance\", ResourceTypeEnum2.PermissionScheme = \"permission-scheme\", ResourceTypeEnum2.Plan = \"plan\", ResourceTypeEnum2.PlanCrossProjectScenarioVersion = \"plan-cross-project-scenario-version\", ResourceTypeEnum2.PlanCrossProjectVersion = \"plan-cross-project-version\", ResourceTypeEnum2.PlanScenario = \"plan-scenario\", ResourceTypeEnum2.PlanScenarioIssue = \"plan-scenario-issue\", ResourceTypeEnum2.PlanScenarioIssueField = \"plan-scenario-issue-field\", ResourceTypeEnum2.PlanScenarioVersion = \"plan-scenario-version\", ResourceTypeEnum2.Policy = \"policy\", ResourceTypeEnum2.Portal = \"portal\", ResourceTypeEnum2.Position = \"position\", ResourceTypeEnum2.PostIncidentReview = \"post-incident-review\", ResourceTypeEnum2.PostIncidentReviewHistory = \"post-incident-review-history\", ResourceTypeEnum2.PostIncidentReviewLink = \"post-incident-review-link\", ResourceTypeEnum2.Presentation = \"presentation\", ResourceTypeEnum2.PricingPlan = \"pricing-plan\", ResourceTypeEnum2.Priority = \"priority\", ResourceTypeEnum2.Product = \"product\", ResourceTypeEnum2.Program = \"program\", ResourceTypeEnum2.ProgramStatusUpdate = \"program-status-update\", ResourceTypeEnum2.Project = \"project\", ResourceTypeEnum2.ProjectCategory = \"project-category\", ResourceTypeEnum2.ProjectFeature = \"project-feature\", ResourceTypeEnum2.ProjectOverview = \"project-overview\", ResourceTypeEnum2.ProjectRoleActor = \"project-role-actor\", ResourceTypeEnum2.ProjectShortcut = \"project-shortcut\", ResourceTypeEnum2.ProjectType = \"project-type\", ResourceTypeEnum2.Promotion = \"promotion\", ResourceTypeEnum2.Provider = \"provider\", ResourceTypeEnum2.PublicLink = \"public-link\", ResourceTypeEnum2.Pullrequest = \"pullrequest\", ResourceTypeEnum2.PullRequest = \"pull-request\", ResourceTypeEnum2.PullRequestHistory = \"pull-request-history\", ResourceTypeEnum2.Question = \"question\", ResourceTypeEnum2.Queue = \"queue\", ResourceTypeEnum2.Quote = \"quote\", ResourceTypeEnum2.Recipe = \"recipe\", ResourceTypeEnum2.Relationship = \"relationship\", ResourceTypeEnum2.RemoteLink = \"remote-link\", ResourceTypeEnum2.RemoteLinkHistory = \"remote-link-history\", ResourceTypeEnum2.Repository = \"repository\", ResourceTypeEnum2.RepositoryTransfer = \"repository-transfer\", ResourceTypeEnum2.RequestForm = \"request-form\", ResourceTypeEnum2.RequestType = \"request-type\", ResourceTypeEnum2.Resolution = \"resolution\", ResourceTypeEnum2.ResourceUsageMetric = \"resource-usage-metric\", ResourceTypeEnum2.ResourceUsageRecommendation = \"resource-usage-recommendation\", ResourceTypeEnum2.Role = \"role\", ResourceTypeEnum2.Rule = \"rule\", ResourceTypeEnum2.Schedule = \"schedule\", ResourceTypeEnum2.ScheduleRotation = \"schedule-rotation\", ResourceTypeEnum2.Schema = \"schema\", ResourceTypeEnum2.Scorecard = \"scorecard\", ResourceTypeEnum2.ScreenTab = \"screen-tab\", ResourceTypeEnum2.SecureTunnel = \"secure-tunnel\", ResourceTypeEnum2.SecurityContainer = \"security-container\", ResourceTypeEnum2.SecurityLevel = \"security-level\", ResourceTypeEnum2.SecurityWorkspace = \"security-workspace\", ResourceTypeEnum2.Service = \"service\", ResourceTypeEnum2.ServiceAndJiraProjectRelationship = \"service-and-jira-project-relationship\", ResourceTypeEnum2.ServiceAndOperationsTeamRelationship = \"service-and-operations-team-relationship\", ResourceTypeEnum2.ServiceAndVcsRepositoryRelationship = \"service-and-vcs-repository-relationship\", ResourceTypeEnum2.ServiceRelationship = \"service-relationship\", ResourceTypeEnum2.SharepointDocument = \"sharepoint-document\", ResourceTypeEnum2.ShipToParty = \"ship-to-party\", ResourceTypeEnum2.Site = \"site\", ResourceTypeEnum2.SiteUser = \"site-user\", ResourceTypeEnum2.Sla = \"sla\", ResourceTypeEnum2.Space = \"space\", ResourceTypeEnum2.Spreadsheet = \"spreadsheet\", ResourceTypeEnum2.Sprint = \"sprint\", ResourceTypeEnum2.Staff = \"staff\", ResourceTypeEnum2.StreamhubSchema = \"streamhub-schema\", ResourceTypeEnum2.Subscription = \"subscription\", ResourceTypeEnum2.SupervisoryOrg = \"supervisory-org\", ResourceTypeEnum2.Swimlane = \"swimlane\", ResourceTypeEnum2.Tag = \"tag\", ResourceTypeEnum2.Task = \"task\", ResourceTypeEnum2.Team = \"team\", ResourceTypeEnum2.TeamCalendar = \"team-calendar\", ResourceTypeEnum2.TeamMember = \"team-member\", ResourceTypeEnum2.ThirdPartyGroup = \"third-party-group\", ResourceTypeEnum2.ThirdPartyUser = \"third-party-user\", ResourceTypeEnum2.Timeline = \"timeline\", ResourceTypeEnum2.Tool = \"tool\", ResourceTypeEnum2.TransactionAccount = \"transaction-account\", ResourceTypeEnum2.Type = \"type\", ResourceTypeEnum2.UnifiedAccount = \"unified-account\", ResourceTypeEnum2.UnifiedProfile = \"unified-profile\", ResourceTypeEnum2.User = \"user\", ResourceTypeEnum2.Userbase = \"userbase\", ResourceTypeEnum2.UserBoardConfig = \"user-board-config\", ResourceTypeEnum2.UserBroadcastMessage = \"user-broadcast-message\", ResourceTypeEnum2.UserDefinedParameter = \"user-defined-parameter\", ResourceTypeEnum2.UserGrant = \"userGrant\", ResourceTypeEnum2.UserProperty = \"user-property\", ResourceTypeEnum2.Version = \"version\", ResourceTypeEnum2.VersionApprover = \"version-approver\", ResourceTypeEnum2.Video = \"video\", ResourceTypeEnum2.VideoHistory = \"video-history\", ResourceTypeEnum2.ViewConfig = \"view-config\", ResourceTypeEnum2.Vulnerability = \"vulnerability\", ResourceTypeEnum2.VulnerabilityHistory = \"vulnerability-history\", ResourceTypeEnum2.Webhook = \"webhook\", ResourceTypeEnum2.Whiteboard = \"whiteboard\", ResourceTypeEnum2.WorkbenchResource = \"workbench-resource\", ResourceTypeEnum2.Worker = \"worker\", ResourceTypeEnum2.Workflow = \"workflow\", ResourceTypeEnum2.WorkflowScheme = \"workflow-scheme\", ResourceTypeEnum2.Worklog = \"worklog\", ResourceTypeEnum2.Workspace = \"workspace\", ResourceTypeEnum2))(ResourceTypeEnum || {});\n\n// src/core/registered-ari.ts\nvar RegisteredAri = class extends Ari {\n  static check(maybeAri) {\n    try {\n      return this.parse(maybeAri.toString()), !0;\n    } catch (err) {\n      return !1;\n    }\n  }\n  asAnyAri() {\n    return AnyAri.parse(this.toString());\n  }\n};\n\n// src/analytics/user/types.ts\nvar AnalyticsUserAriResourceOwner = \"analytics\", AnalyticsUserAriResourceType = \"user\";\n\n// src/analytics/user/manifest.ts\nvar analyticsUserAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: AnalyticsUserAriResourceOwner,\n  resourceType: AnalyticsUserAriResourceType,\n  resourceIdSlug: \"anonymous/{anonUserId}\",\n  resourceIdSegmentFormats: {\n    anonUserId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/analytics/user/index.ts\nvar AnalyticsUserAri = class _AnalyticsUserAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._anonUserId = opts.resourceIdSegmentValues.anonUserId;\n  }\n  get anonUserId() {\n    return this._anonUserId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: analyticsUserAriStaticOpts.qualifier,\n      platformQualifier: analyticsUserAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: analyticsUserAriStaticOpts.resourceOwner,\n      resourceType: analyticsUserAriStaticOpts.resourceType,\n      resourceId: `anonymous/${opts.anonUserId}`,\n      resourceIdSegmentValues: {\n        anonUserId: opts.anonUserId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, analyticsUserAriStaticOpts);\n    return new _AnalyticsUserAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, analyticsUserAriStaticOpts);\n    return new _AnalyticsUserAri(opts);\n  }\n  getVariables() {\n    return {\n      anonUserId: this.anonUserId\n    };\n  }\n};\n\n// src/approval-desk/decision-table/types.ts\nvar ApprovalDeskDecisionTableAriResourceOwner = \"approval-desk\", ApprovalDeskDecisionTableAriResourceType = \"decision-table\";\n\n// src/approval-desk/decision-table/manifest.ts\nvar approvalDeskDecisionTableAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: ApprovalDeskDecisionTableAriResourceOwner,\n  resourceType: ApprovalDeskDecisionTableAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{workflowId}/{decisionTableId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    workflowId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    decisionTableId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/approval-desk/decision-table/index.ts\nvar ApprovalDeskDecisionTableAri = class _ApprovalDeskDecisionTableAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._workflowId = opts.resourceIdSegmentValues.workflowId, this._decisionTableId = opts.resourceIdSegmentValues.decisionTableId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get workflowId() {\n    return this._workflowId;\n  }\n  get decisionTableId() {\n    return this._decisionTableId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: approvalDeskDecisionTableAriStaticOpts.qualifier,\n      platformQualifier: approvalDeskDecisionTableAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: approvalDeskDecisionTableAriStaticOpts.resourceOwner,\n      resourceType: approvalDeskDecisionTableAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.workflowId}/${opts.decisionTableId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        workflowId: opts.workflowId,\n        decisionTableId: opts.decisionTableId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, approvalDeskDecisionTableAriStaticOpts);\n    return new _ApprovalDeskDecisionTableAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, approvalDeskDecisionTableAriStaticOpts);\n    return new _ApprovalDeskDecisionTableAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      workflowId: this.workflowId,\n      decisionTableId: this.decisionTableId\n    };\n  }\n};\n\n// src/approval-desk/role/types.ts\nvar ApprovalDeskRoleAriResourceOwner = \"approval-desk\", ApprovalDeskRoleAriResourceType = \"role\";\n\n// src/approval-desk/role/manifest.ts\nvar approvalDeskRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: ApprovalDeskRoleAriResourceOwner,\n  resourceType: ApprovalDeskRoleAriResourceType,\n  resourceIdSlug: \"{scope}/{roleId}\",\n  resourceIdSegmentFormats: {\n    scope: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    roleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/approval-desk/role/index.ts\nvar ApprovalDeskRoleAri = class _ApprovalDeskRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._scope = opts.resourceIdSegmentValues.scope, this._roleId = opts.resourceIdSegmentValues.roleId;\n  }\n  get scope() {\n    return this._scope;\n  }\n  get roleId() {\n    return this._roleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: approvalDeskRoleAriStaticOpts.qualifier,\n      platformQualifier: approvalDeskRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: approvalDeskRoleAriStaticOpts.resourceOwner,\n      resourceType: approvalDeskRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.scope}/${opts.roleId}`,\n      resourceIdSegmentValues: {\n        scope: opts.scope,\n        roleId: opts.roleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, approvalDeskRoleAriStaticOpts);\n    return new _ApprovalDeskRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, approvalDeskRoleAriStaticOpts);\n    return new _ApprovalDeskRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      scope: this.scope,\n      roleId: this.roleId\n    };\n  }\n};\n\n// src/approval-desk/workflow/types.ts\nvar ApprovalDeskWorkflowAriResourceOwner = \"approval-desk\", ApprovalDeskWorkflowAriResourceType = \"workflow\";\n\n// src/approval-desk/workflow/manifest.ts\nvar approvalDeskWorkflowAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: ApprovalDeskWorkflowAriResourceOwner,\n  resourceType: ApprovalDeskWorkflowAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{workflowId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    workflowId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/approval-desk/workflow/index.ts\nvar ApprovalDeskWorkflowAri = class _ApprovalDeskWorkflowAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._workflowId = opts.resourceIdSegmentValues.workflowId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get workflowId() {\n    return this._workflowId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: approvalDeskWorkflowAriStaticOpts.qualifier,\n      platformQualifier: approvalDeskWorkflowAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: approvalDeskWorkflowAriStaticOpts.resourceOwner,\n      resourceType: approvalDeskWorkflowAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.workflowId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        workflowId: opts.workflowId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, approvalDeskWorkflowAriStaticOpts);\n    return new _ApprovalDeskWorkflowAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, approvalDeskWorkflowAriStaticOpts);\n    return new _ApprovalDeskWorkflowAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      workflowId: this.workflowId\n    };\n  }\n};\n\n// src/approval-desk/workspace/types.ts\nvar ApprovalDeskWorkspaceAriResourceOwner = \"approval-desk\", ApprovalDeskWorkspaceAriResourceType = \"workspace\";\n\n// src/approval-desk/workspace/manifest.ts\nvar approvalDeskWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: ApprovalDeskWorkspaceAriResourceOwner,\n  resourceType: ApprovalDeskWorkspaceAriResourceType,\n  resourceIdSlug: \"{workspaceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/approval-desk/workspace/index.ts\nvar ApprovalDeskWorkspaceAri = class _ApprovalDeskWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: approvalDeskWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: approvalDeskWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: approvalDeskWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: approvalDeskWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, approvalDeskWorkspaceAriStaticOpts);\n    return new _ApprovalDeskWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, approvalDeskWorkspaceAriStaticOpts);\n    return new _ApprovalDeskWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId\n    };\n  }\n};\n\n// src/atlashub/id/types.ts\nvar AtlashubIdAriResourceOwner = \"atlashub\", AtlashubIdAriResourceType = \"id\";\n\n// src/atlashub/id/manifest.ts\nvar atlashubIdAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: AtlashubIdAriResourceOwner,\n  resourceType: AtlashubIdAriResourceType,\n  resourceIdSlug: \"{id}\",\n  resourceIdSegmentFormats: {\n    id: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/atlashub/id/index.ts\nvar AtlashubIdAri = class _AtlashubIdAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._id = opts.resourceIdSegmentValues.id;\n  }\n  get id() {\n    return this._id;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: atlashubIdAriStaticOpts.qualifier,\n      platformQualifier: atlashubIdAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: atlashubIdAriStaticOpts.resourceOwner,\n      resourceType: atlashubIdAriStaticOpts.resourceType,\n      resourceId: `${opts.id}`,\n      resourceIdSegmentValues: {\n        id: opts.id\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, atlashubIdAriStaticOpts);\n    return new _AtlashubIdAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, atlashubIdAriStaticOpts);\n    return new _AtlashubIdAri(opts);\n  }\n  getVariables() {\n    return {\n      id: this.id\n    };\n  }\n};\n\n// src/atlashub/site/types.ts\nvar AtlashubSiteAriResourceOwner = \"atlashub\", AtlashubSiteAriResourceType = \"site\";\n\n// src/atlashub/site/manifest.ts\nvar atlashubSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: AtlashubSiteAriResourceOwner,\n  resourceType: AtlashubSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/atlashub/site/index.ts\nvar AtlashubSiteAri = class _AtlashubSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: atlashubSiteAriStaticOpts.qualifier,\n      platformQualifier: atlashubSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: atlashubSiteAriStaticOpts.resourceOwner,\n      resourceType: atlashubSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, atlashubSiteAriStaticOpts);\n    return new _AtlashubSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, atlashubSiteAriStaticOpts);\n    return new _AtlashubSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/automation/role/types.ts\nvar AutomationRoleAriResourceOwner = \"automation\", AutomationRoleAriResourceType = \"role\";\n\n// src/automation/role/manifest.ts\nvar automationRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: AutomationRoleAriResourceOwner,\n  resourceType: AutomationRoleAriResourceType,\n  resourceIdSlug: \"{roleId}\",\n  resourceIdSegmentFormats: {\n    roleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/automation/role/index.ts\nvar AutomationRoleAri = class _AutomationRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleId = opts.resourceIdSegmentValues.roleId;\n  }\n  get roleId() {\n    return this._roleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: automationRoleAriStaticOpts.qualifier,\n      platformQualifier: automationRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: automationRoleAriStaticOpts.resourceOwner,\n      resourceType: automationRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.roleId}`,\n      resourceIdSegmentValues: {\n        roleId: opts.roleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, automationRoleAriStaticOpts);\n    return new _AutomationRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, automationRoleAriStaticOpts);\n    return new _AutomationRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleId: this.roleId\n    };\n  }\n};\n\n// src/automation/rule/types.ts\nvar AutomationRuleAriResourceOwner = \"automation\", AutomationRuleAriResourceType = \"rule\";\n\n// src/automation/rule/manifest.ts\nvar automationRuleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: AutomationRuleAriResourceOwner,\n  resourceType: AutomationRuleAriResourceType,\n  resourceIdSlug: \"{ruleId}\",\n  resourceIdSegmentFormats: {\n    ruleId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/automation/rule/index.ts\nvar AutomationRuleAri = class _AutomationRuleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._ruleId = opts.resourceIdSegmentValues.ruleId;\n  }\n  get ruleId() {\n    return this._ruleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: automationRuleAriStaticOpts.qualifier,\n      platformQualifier: automationRuleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: automationRuleAriStaticOpts.resourceOwner,\n      resourceType: automationRuleAriStaticOpts.resourceType,\n      resourceId: `${opts.ruleId}`,\n      resourceIdSegmentValues: {\n        ruleId: opts.ruleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, automationRuleAriStaticOpts);\n    return new _AutomationRuleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, automationRuleAriStaticOpts);\n    return new _AutomationRuleAri(opts);\n  }\n  getVariables() {\n    return {\n      ruleId: this.ruleId\n    };\n  }\n};\n\n// src/avocado/answer/types.ts\nvar AvocadoAnswerAriResourceOwner = \"avocado\", AvocadoAnswerAriResourceType = \"answer\";\n\n// src/avocado/answer/manifest.ts\nvar avocadoAnswerAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: AvocadoAnswerAriResourceOwner,\n  resourceType: AvocadoAnswerAriResourceType,\n  resourceIdSlug: \"activation/{workspaceId}/{answerId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    answerId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/avocado/answer/index.ts\nvar AvocadoAnswerAri = class _AvocadoAnswerAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._answerId = opts.resourceIdSegmentValues.answerId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get answerId() {\n    return this._answerId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: avocadoAnswerAriStaticOpts.qualifier,\n      platformQualifier: avocadoAnswerAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: avocadoAnswerAriStaticOpts.resourceOwner,\n      resourceType: avocadoAnswerAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.workspaceId}/${opts.answerId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        answerId: opts.answerId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, avocadoAnswerAriStaticOpts);\n    return new _AvocadoAnswerAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, avocadoAnswerAriStaticOpts);\n    return new _AvocadoAnswerAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      answerId: this.answerId\n    };\n  }\n};\n\n// src/avocado/question/types.ts\nvar AvocadoQuestionAriResourceOwner = \"avocado\", AvocadoQuestionAriResourceType = \"question\";\n\n// src/avocado/question/manifest.ts\nvar avocadoQuestionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: AvocadoQuestionAriResourceOwner,\n  resourceType: AvocadoQuestionAriResourceType,\n  resourceIdSlug: \"activation/{workspaceId}/{questionId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    questionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/avocado/question/index.ts\nvar AvocadoQuestionAri = class _AvocadoQuestionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._questionId = opts.resourceIdSegmentValues.questionId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get questionId() {\n    return this._questionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: avocadoQuestionAriStaticOpts.qualifier,\n      platformQualifier: avocadoQuestionAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: avocadoQuestionAriStaticOpts.resourceOwner,\n      resourceType: avocadoQuestionAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.workspaceId}/${opts.questionId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        questionId: opts.questionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, avocadoQuestionAriStaticOpts);\n    return new _AvocadoQuestionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, avocadoQuestionAriStaticOpts);\n    return new _AvocadoQuestionAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      questionId: this.questionId\n    };\n  }\n};\n\n// src/avocado/role/types.ts\nvar AvocadoRoleAriResourceOwner = \"avocado\", AvocadoRoleAriResourceType = \"role\";\n\n// src/avocado/role/manifest.ts\nvar avocadoRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: AvocadoRoleAriResourceOwner,\n  resourceType: AvocadoRoleAriResourceType,\n  resourceIdSlug: \"product/{roleType}\",\n  resourceIdSegmentFormats: {\n    roleType: /(?:member|admin)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/avocado/role/index.ts\nvar AvocadoRoleAri = class _AvocadoRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleType = opts.resourceIdSegmentValues.roleType;\n  }\n  get roleType() {\n    return this._roleType;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: avocadoRoleAriStaticOpts.qualifier,\n      platformQualifier: avocadoRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: avocadoRoleAriStaticOpts.resourceOwner,\n      resourceType: avocadoRoleAriStaticOpts.resourceType,\n      resourceId: `product/${opts.roleType}`,\n      resourceIdSegmentValues: {\n        roleType: opts.roleType\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, avocadoRoleAriStaticOpts);\n    return new _AvocadoRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, avocadoRoleAriStaticOpts);\n    return new _AvocadoRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleType: this.roleType\n    };\n  }\n};\n\n// src/avocado/site/types.ts\nvar AvocadoSiteAriResourceOwner = \"avocado\", AvocadoSiteAriResourceType = \"site\";\n\n// src/avocado/site/manifest.ts\nvar avocadoSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: AvocadoSiteAriResourceOwner,\n  resourceType: AvocadoSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/avocado/site/index.ts\nvar AvocadoSiteAri = class _AvocadoSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: avocadoSiteAriStaticOpts.qualifier,\n      platformQualifier: avocadoSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: avocadoSiteAriStaticOpts.resourceOwner,\n      resourceType: avocadoSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, avocadoSiteAriStaticOpts);\n    return new _AvocadoSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, avocadoSiteAriStaticOpts);\n    return new _AvocadoSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/avocado/user/types.ts\nvar AvocadoUserAriResourceOwner = \"avocado\", AvocadoUserAriResourceType = \"user\";\n\n// src/avocado/user/manifest.ts\nvar avocadoUserAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: AvocadoUserAriResourceOwner,\n  resourceType: AvocadoUserAriResourceType,\n  resourceIdSlug: \"{userId}\",\n  resourceIdSegmentFormats: {\n    userId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/avocado/user/index.ts\nvar AvocadoUserAri = class _AvocadoUserAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._userId = opts.resourceIdSegmentValues.userId;\n  }\n  get userId() {\n    return this._userId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: avocadoUserAriStaticOpts.qualifier,\n      platformQualifier: avocadoUserAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: avocadoUserAriStaticOpts.resourceOwner,\n      resourceType: avocadoUserAriStaticOpts.resourceType,\n      resourceId: `${opts.userId}`,\n      resourceIdSegmentValues: {\n        userId: opts.userId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, avocadoUserAriStaticOpts);\n    return new _AvocadoUserAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, avocadoUserAriStaticOpts);\n    return new _AvocadoUserAri(opts);\n  }\n  getVariables() {\n    return {\n      userId: this.userId\n    };\n  }\n};\n\n// src/avp/dashboard/types.ts\nvar AvpDashboardAriResourceOwner = \"avp\", AvpDashboardAriResourceType = \"dashboard\";\n\n// src/avp/dashboard/manifest.ts\nvar avpDashboardAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: AvpDashboardAriResourceOwner,\n  resourceType: AvpDashboardAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{dashboardId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    dashboardId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/avp/dashboard/index.ts\nvar AvpDashboardAri = class _AvpDashboardAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._dashboardId = opts.resourceIdSegmentValues.dashboardId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get dashboardId() {\n    return this._dashboardId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: avpDashboardAriStaticOpts.qualifier,\n      platformQualifier: avpDashboardAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: avpDashboardAriStaticOpts.resourceOwner,\n      resourceType: avpDashboardAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.dashboardId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        dashboardId: opts.dashboardId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, avpDashboardAriStaticOpts);\n    return new _AvpDashboardAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, avpDashboardAriStaticOpts);\n    return new _AvpDashboardAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      dashboardId: this.dashboardId\n    };\n  }\n};\n\n// src/avp/datasource/types.ts\nvar AvpDatasourceAriResourceOwner = \"avp\", AvpDatasourceAriResourceType = \"datasource\";\n\n// src/avp/datasource/manifest.ts\nvar avpDatasourceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: AvpDatasourceAriResourceOwner,\n  resourceType: AvpDatasourceAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{datasourceId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    datasourceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/avp/datasource/index.ts\nvar AvpDatasourceAri = class _AvpDatasourceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._datasourceId = opts.resourceIdSegmentValues.datasourceId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get datasourceId() {\n    return this._datasourceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: avpDatasourceAriStaticOpts.qualifier,\n      platformQualifier: avpDatasourceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: avpDatasourceAriStaticOpts.resourceOwner,\n      resourceType: avpDatasourceAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.datasourceId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        datasourceId: opts.datasourceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, avpDatasourceAriStaticOpts);\n    return new _AvpDatasourceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, avpDatasourceAriStaticOpts);\n    return new _AvpDatasourceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      datasourceId: this.datasourceId\n    };\n  }\n};\n\n// src/avp/role/types.ts\nvar AvpRoleAriResourceOwner = \"avp\", AvpRoleAriResourceType = \"role\";\n\n// src/avp/role/manifest.ts\nvar avpRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: AvpRoleAriResourceOwner,\n  resourceType: AvpRoleAriResourceType,\n  resourceIdSlug: \"{roleId}\",\n  resourceIdSegmentFormats: {\n    roleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/avp/role/index.ts\nvar AvpRoleAri = class _AvpRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleId = opts.resourceIdSegmentValues.roleId;\n  }\n  get roleId() {\n    return this._roleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: avpRoleAriStaticOpts.qualifier,\n      platformQualifier: avpRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: avpRoleAriStaticOpts.resourceOwner,\n      resourceType: avpRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.roleId}`,\n      resourceIdSegmentValues: {\n        roleId: opts.roleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, avpRoleAriStaticOpts);\n    return new _AvpRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, avpRoleAriStaticOpts);\n    return new _AvpRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleId: this.roleId\n    };\n  }\n};\n\n// src/avp/site/types.ts\nvar AvpSiteAriResourceOwner = \"avp\", AvpSiteAriResourceType = \"site\";\n\n// src/avp/site/manifest.ts\nvar avpSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: AvpSiteAriResourceOwner,\n  resourceType: AvpSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/avp/site/index.ts\nvar AvpSiteAri = class _AvpSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: avpSiteAriStaticOpts.qualifier,\n      platformQualifier: avpSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: avpSiteAriStaticOpts.resourceOwner,\n      resourceType: avpSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, avpSiteAriStaticOpts);\n    return new _AvpSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, avpSiteAriStaticOpts);\n    return new _AvpSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/beacon/alert/types.ts\nvar BeaconAlertAriResourceOwner = \"beacon\", BeaconAlertAriResourceType = \"alert\";\n\n// src/beacon/alert/manifest.ts\nvar beaconAlertAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: BeaconAlertAriResourceOwner,\n  resourceType: BeaconAlertAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{alertId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    alertId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/beacon/alert/index.ts\nvar BeaconAlertAri = class _BeaconAlertAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._alertId = opts.resourceIdSegmentValues.alertId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get alertId() {\n    return this._alertId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: beaconAlertAriStaticOpts.qualifier,\n      platformQualifier: beaconAlertAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: beaconAlertAriStaticOpts.resourceOwner,\n      resourceType: beaconAlertAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.alertId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        alertId: opts.alertId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconAlertAriStaticOpts);\n    return new _BeaconAlertAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, beaconAlertAriStaticOpts);\n    return new _BeaconAlertAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      alertId: this.alertId\n    };\n  }\n};\n\n// src/beacon/custom-detection/types.ts\nvar BeaconCustomDetectionAriResourceOwner = \"beacon\", BeaconCustomDetectionAriResourceType = \"custom-detection\";\n\n// src/beacon/custom-detection/manifest.ts\nvar beaconCustomDetectionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: BeaconCustomDetectionAriResourceOwner,\n  resourceType: BeaconCustomDetectionAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{customDetectionId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    customDetectionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/beacon/custom-detection/index.ts\nvar BeaconCustomDetectionAri = class _BeaconCustomDetectionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._customDetectionId = opts.resourceIdSegmentValues.customDetectionId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get customDetectionId() {\n    return this._customDetectionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: beaconCustomDetectionAriStaticOpts.qualifier,\n      platformQualifier: beaconCustomDetectionAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: beaconCustomDetectionAriStaticOpts.resourceOwner,\n      resourceType: beaconCustomDetectionAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.customDetectionId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        customDetectionId: opts.customDetectionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconCustomDetectionAriStaticOpts);\n    return new _BeaconCustomDetectionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, beaconCustomDetectionAriStaticOpts);\n    return new _BeaconCustomDetectionAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      customDetectionId: this.customDetectionId\n    };\n  }\n};\n\n// src/beacon/detection/types.ts\nvar BeaconDetectionAriResourceOwner = \"beacon\", BeaconDetectionAriResourceType = \"detection\";\n\n// src/beacon/detection/manifest.ts\nvar beaconDetectionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BeaconDetectionAriResourceOwner,\n  resourceType: BeaconDetectionAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{detectionId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    detectionId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/beacon/detection/index.ts\nvar BeaconDetectionAri = class _BeaconDetectionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._detectionId = opts.resourceIdSegmentValues.detectionId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get detectionId() {\n    return this._detectionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: beaconDetectionAriStaticOpts.qualifier,\n      platformQualifier: beaconDetectionAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: beaconDetectionAriStaticOpts.resourceOwner,\n      resourceType: beaconDetectionAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.detectionId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        detectionId: opts.detectionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconDetectionAriStaticOpts);\n    return new _BeaconDetectionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, beaconDetectionAriStaticOpts);\n    return new _BeaconDetectionAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      detectionId: this.detectionId\n    };\n  }\n};\n\n// src/beacon/detection-setting/types.ts\nvar BeaconDetectionSettingAriResourceOwner = \"beacon\", BeaconDetectionSettingAriResourceType = \"detection-setting\";\n\n// src/beacon/detection-setting/manifest.ts\nvar beaconDetectionSettingAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: BeaconDetectionSettingAriResourceOwner,\n  resourceType: BeaconDetectionSettingAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{detectionType}/{detectionId}/{settingId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    detectionType: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    detectionId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    settingId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/beacon/detection-setting/index.ts\nvar BeaconDetectionSettingAri = class _BeaconDetectionSettingAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._detectionType = opts.resourceIdSegmentValues.detectionType, this._detectionId = opts.resourceIdSegmentValues.detectionId, this._settingId = opts.resourceIdSegmentValues.settingId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get detectionType() {\n    return this._detectionType;\n  }\n  get detectionId() {\n    return this._detectionId;\n  }\n  get settingId() {\n    return this._settingId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: beaconDetectionSettingAriStaticOpts.qualifier,\n      platformQualifier: beaconDetectionSettingAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: beaconDetectionSettingAriStaticOpts.resourceOwner,\n      resourceType: beaconDetectionSettingAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.detectionType}/${opts.detectionId}/${opts.settingId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        detectionType: opts.detectionType,\n        detectionId: opts.detectionId,\n        settingId: opts.settingId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconDetectionSettingAriStaticOpts);\n    return new _BeaconDetectionSettingAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, beaconDetectionSettingAriStaticOpts);\n    return new _BeaconDetectionSettingAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      detectionType: this.detectionType,\n      detectionId: this.detectionId,\n      settingId: this.settingId\n    };\n  }\n};\n\n// src/beacon/role/types.ts\nvar BeaconRoleAriResourceOwner = \"beacon\", BeaconRoleAriResourceType = \"role\";\n\n// src/beacon/role/manifest.ts\nvar beaconRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BeaconRoleAriResourceOwner,\n  resourceType: BeaconRoleAriResourceType,\n  resourceIdSlug: \"product/{roleType}\",\n  resourceIdSegmentFormats: {\n    roleType: /(?:member|admin)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/beacon/role/index.ts\nvar BeaconRoleAri = class _BeaconRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleType = opts.resourceIdSegmentValues.roleType;\n  }\n  get roleType() {\n    return this._roleType;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: beaconRoleAriStaticOpts.qualifier,\n      platformQualifier: beaconRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: beaconRoleAriStaticOpts.resourceOwner,\n      resourceType: beaconRoleAriStaticOpts.resourceType,\n      resourceId: `product/${opts.roleType}`,\n      resourceIdSegmentValues: {\n        roleType: opts.roleType\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconRoleAriStaticOpts);\n    return new _BeaconRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, beaconRoleAriStaticOpts);\n    return new _BeaconRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleType: this.roleType\n    };\n  }\n};\n\n// src/beacon/site/types.ts\nvar BeaconSiteAriResourceOwner = \"beacon\", BeaconSiteAriResourceType = \"site\";\n\n// src/beacon/site/manifest.ts\nvar beaconSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BeaconSiteAriResourceOwner,\n  resourceType: BeaconSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/beacon/site/index.ts\nvar BeaconSiteAri = class _BeaconSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: beaconSiteAriStaticOpts.qualifier,\n      platformQualifier: beaconSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: beaconSiteAriStaticOpts.resourceOwner,\n      resourceType: beaconSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconSiteAriStaticOpts);\n    return new _BeaconSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, beaconSiteAriStaticOpts);\n    return new _BeaconSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/beacon/subscription/types.ts\nvar BeaconSubscriptionAriResourceOwner = \"beacon\", BeaconSubscriptionAriResourceType = \"subscription\";\n\n// src/beacon/subscription/manifest.ts\nvar beaconSubscriptionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: BeaconSubscriptionAriResourceOwner,\n  resourceType: BeaconSubscriptionAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{subscriptionId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    subscriptionId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/beacon/subscription/index.ts\nvar BeaconSubscriptionAri = class _BeaconSubscriptionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._subscriptionId = opts.resourceIdSegmentValues.subscriptionId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get subscriptionId() {\n    return this._subscriptionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: beaconSubscriptionAriStaticOpts.qualifier,\n      platformQualifier: beaconSubscriptionAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: beaconSubscriptionAriStaticOpts.resourceOwner,\n      resourceType: beaconSubscriptionAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.subscriptionId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        subscriptionId: opts.subscriptionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconSubscriptionAriStaticOpts);\n    return new _BeaconSubscriptionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, beaconSubscriptionAriStaticOpts);\n    return new _BeaconSubscriptionAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      subscriptionId: this.subscriptionId\n    };\n  }\n};\n\n// src/beacon/workspace/types.ts\nvar BeaconWorkspaceAriResourceOwner = \"beacon\", BeaconWorkspaceAriResourceType = \"workspace\";\n\n// src/beacon/workspace/manifest.ts\nvar beaconWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: BeaconWorkspaceAriResourceOwner,\n  resourceType: BeaconWorkspaceAriResourceType,\n  resourceIdSlug: \"{workspaceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/beacon/workspace/index.ts\nvar BeaconWorkspaceAri = class _BeaconWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: beaconWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: beaconWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: beaconWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: beaconWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, beaconWorkspaceAriStaticOpts);\n    return new _BeaconWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, beaconWorkspaceAriStaticOpts);\n    return new _BeaconWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId\n    };\n  }\n};\n\n// src/bitbucket/app/types.ts\nvar BitbucketAppAriResourceOwner = \"bitbucket\", BitbucketAppAriResourceType = \"app\";\n\n// src/bitbucket/app/manifest.ts\nvar bitbucketAppAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BitbucketAppAriResourceOwner,\n  resourceType: BitbucketAppAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{appId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /\\{[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}}/,\n    // eslint-disable-line no-useless-escape\n    appId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/bitbucket/app/index.ts\nvar BitbucketAppAri = class _BitbucketAppAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._appId = opts.resourceIdSegmentValues.appId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get appId() {\n    return this._appId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: bitbucketAppAriStaticOpts.qualifier,\n      platformQualifier: bitbucketAppAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: bitbucketAppAriStaticOpts.resourceOwner,\n      resourceType: bitbucketAppAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.appId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        appId: opts.appId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketAppAriStaticOpts);\n    return new _BitbucketAppAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, bitbucketAppAriStaticOpts);\n    return new _BitbucketAppAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      appId: this.appId\n    };\n  }\n};\n\n// src/bitbucket/oauth-consumer/types.ts\nvar BitbucketOauthConsumerAriResourceOwner = \"bitbucket\", BitbucketOauthConsumerAriResourceType = \"oauth-consumer\";\n\n// src/bitbucket/oauth-consumer/manifest.ts\nvar bitbucketOauthConsumerAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BitbucketOauthConsumerAriResourceOwner,\n  resourceType: BitbucketOauthConsumerAriResourceType,\n  resourceIdSlug: \"{clientId}\",\n  resourceIdSegmentFormats: {\n    clientId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/bitbucket/oauth-consumer/index.ts\nvar BitbucketOauthConsumerAri = class _BitbucketOauthConsumerAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._clientId = opts.resourceIdSegmentValues.clientId;\n  }\n  get clientId() {\n    return this._clientId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: bitbucketOauthConsumerAriStaticOpts.qualifier,\n      platformQualifier: bitbucketOauthConsumerAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: bitbucketOauthConsumerAriStaticOpts.resourceOwner,\n      resourceType: bitbucketOauthConsumerAriStaticOpts.resourceType,\n      resourceId: `${opts.clientId}`,\n      resourceIdSegmentValues: {\n        clientId: opts.clientId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketOauthConsumerAriStaticOpts);\n    return new _BitbucketOauthConsumerAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, bitbucketOauthConsumerAriStaticOpts);\n    return new _BitbucketOauthConsumerAri(opts);\n  }\n  getVariables() {\n    return {\n      clientId: this.clientId\n    };\n  }\n};\n\n// src/bitbucket/project/types.ts\nvar BitbucketProjectAriResourceOwner = \"bitbucket\", BitbucketProjectAriResourceType = \"project\";\n\n// src/bitbucket/project/manifest.ts\nvar bitbucketProjectAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BitbucketProjectAriResourceOwner,\n  resourceType: BitbucketProjectAriResourceType,\n  resourceIdSlug: \"{projectId}\",\n  resourceIdSegmentFormats: {\n    projectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/bitbucket/project/index.ts\nvar BitbucketProjectAri = class _BitbucketProjectAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._projectId = opts.resourceIdSegmentValues.projectId;\n  }\n  get projectId() {\n    return this._projectId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: bitbucketProjectAriStaticOpts.qualifier,\n      platformQualifier: bitbucketProjectAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: bitbucketProjectAriStaticOpts.resourceOwner,\n      resourceType: bitbucketProjectAriStaticOpts.resourceType,\n      resourceId: `${opts.projectId}`,\n      resourceIdSegmentValues: {\n        projectId: opts.projectId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketProjectAriStaticOpts);\n    return new _BitbucketProjectAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, bitbucketProjectAriStaticOpts);\n    return new _BitbucketProjectAri(opts);\n  }\n  getVariables() {\n    return {\n      projectId: this.projectId\n    };\n  }\n};\n\n// src/bitbucket/pullrequest/types.ts\nvar BitbucketPullrequestAriResourceOwner = \"bitbucket\", BitbucketPullrequestAriResourceType = \"pullrequest\";\n\n// src/bitbucket/pullrequest/manifest.ts\nvar bitbucketPullrequestAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BitbucketPullrequestAriResourceOwner,\n  resourceType: BitbucketPullrequestAriResourceType,\n  resourceIdSlug: \"{pullRequestId}\",\n  resourceIdSegmentFormats: {\n    pullRequestId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/bitbucket/pullrequest/index.ts\nvar BitbucketPullrequestAri = class _BitbucketPullrequestAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId;\n  }\n  get pullRequestId() {\n    return this._pullRequestId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: bitbucketPullrequestAriStaticOpts.qualifier,\n      platformQualifier: bitbucketPullrequestAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: bitbucketPullrequestAriStaticOpts.resourceOwner,\n      resourceType: bitbucketPullrequestAriStaticOpts.resourceType,\n      resourceId: `${opts.pullRequestId}`,\n      resourceIdSegmentValues: {\n        pullRequestId: opts.pullRequestId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketPullrequestAriStaticOpts);\n    return new _BitbucketPullrequestAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, bitbucketPullrequestAriStaticOpts);\n    return new _BitbucketPullrequestAri(opts);\n  }\n  getVariables() {\n    return {\n      pullRequestId: this.pullRequestId\n    };\n  }\n};\n\n// src/bitbucket/repository/types.ts\nvar BitbucketRepositoryAriResourceOwner = \"bitbucket\", BitbucketRepositoryAriResourceType = \"repository\";\n\n// src/bitbucket/repository/manifest.ts\nvar bitbucketRepositoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BitbucketRepositoryAriResourceOwner,\n  resourceType: BitbucketRepositoryAriResourceType,\n  resourceIdSlug: \"{repositoryId}\",\n  resourceIdSegmentFormats: {\n    repositoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/bitbucket/repository/index.ts\nvar BitbucketRepositoryAri = class _BitbucketRepositoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._repositoryId = opts.resourceIdSegmentValues.repositoryId;\n  }\n  get repositoryId() {\n    return this._repositoryId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: bitbucketRepositoryAriStaticOpts.qualifier,\n      platformQualifier: bitbucketRepositoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: bitbucketRepositoryAriStaticOpts.resourceOwner,\n      resourceType: bitbucketRepositoryAriStaticOpts.resourceType,\n      resourceId: `${opts.repositoryId}`,\n      resourceIdSegmentValues: {\n        repositoryId: opts.repositoryId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketRepositoryAriStaticOpts);\n    return new _BitbucketRepositoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, bitbucketRepositoryAriStaticOpts);\n    return new _BitbucketRepositoryAri(opts);\n  }\n  getVariables() {\n    return {\n      repositoryId: this.repositoryId\n    };\n  }\n};\n\n// src/bitbucket/repository-transfer/types.ts\nvar BitbucketRepositoryTransferAriResourceOwner = \"bitbucket\", BitbucketRepositoryTransferAriResourceType = \"repository-transfer\";\n\n// src/bitbucket/repository-transfer/manifest.ts\nvar bitbucketRepositoryTransferAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BitbucketRepositoryTransferAriResourceOwner,\n  resourceType: BitbucketRepositoryTransferAriResourceType,\n  resourceIdSlug: \"{transferId}\",\n  resourceIdSegmentFormats: {\n    transferId: /[a-f0-9]{32}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/bitbucket/repository-transfer/index.ts\nvar BitbucketRepositoryTransferAri = class _BitbucketRepositoryTransferAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._transferId = opts.resourceIdSegmentValues.transferId;\n  }\n  get transferId() {\n    return this._transferId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: bitbucketRepositoryTransferAriStaticOpts.qualifier,\n      platformQualifier: bitbucketRepositoryTransferAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: bitbucketRepositoryTransferAriStaticOpts.resourceOwner,\n      resourceType: bitbucketRepositoryTransferAriStaticOpts.resourceType,\n      resourceId: `${opts.transferId}`,\n      resourceIdSegmentValues: {\n        transferId: opts.transferId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketRepositoryTransferAriStaticOpts);\n    return new _BitbucketRepositoryTransferAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, bitbucketRepositoryTransferAriStaticOpts);\n    return new _BitbucketRepositoryTransferAri(opts);\n  }\n  getVariables() {\n    return {\n      transferId: this.transferId\n    };\n  }\n};\n\n// src/bitbucket/site/types.ts\nvar BitbucketSiteAriResourceOwner = \"bitbucket\", BitbucketSiteAriResourceType = \"site\";\n\n// src/bitbucket/site/manifest.ts\nvar bitbucketSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BitbucketSiteAriResourceOwner,\n  resourceType: BitbucketSiteAriResourceType,\n  resourceIdSlug: \"bitbucket\",\n  resourceIdSegmentFormats: {}\n};\n\n// src/bitbucket/site/index.ts\nvar BitbucketSiteAri = class _BitbucketSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: bitbucketSiteAriStaticOpts.qualifier,\n      platformQualifier: bitbucketSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: bitbucketSiteAriStaticOpts.resourceOwner,\n      resourceType: bitbucketSiteAriStaticOpts.resourceType,\n      resourceId: \"bitbucket\",\n      resourceIdSegmentValues: {}\n    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketSiteAriStaticOpts);\n    return new _BitbucketSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, bitbucketSiteAriStaticOpts);\n    return new _BitbucketSiteAri(opts);\n  }\n  getVariables() {\n    return {};\n  }\n};\n\n// src/bitbucket/team/types.ts\nvar BitbucketTeamAriResourceOwner = \"bitbucket\", BitbucketTeamAriResourceType = \"team\";\n\n// src/bitbucket/team/manifest.ts\nvar bitbucketTeamAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BitbucketTeamAriResourceOwner,\n  resourceType: BitbucketTeamAriResourceType,\n  resourceIdSlug: \"{teamId}\",\n  resourceIdSegmentFormats: {\n    teamId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/bitbucket/team/index.ts\nvar BitbucketTeamAri = class _BitbucketTeamAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._teamId = opts.resourceIdSegmentValues.teamId;\n  }\n  get teamId() {\n    return this._teamId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: bitbucketTeamAriStaticOpts.qualifier,\n      platformQualifier: bitbucketTeamAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: bitbucketTeamAriStaticOpts.resourceOwner,\n      resourceType: bitbucketTeamAriStaticOpts.resourceType,\n      resourceId: `${opts.teamId}`,\n      resourceIdSegmentValues: {\n        teamId: opts.teamId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketTeamAriStaticOpts);\n    return new _BitbucketTeamAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, bitbucketTeamAriStaticOpts);\n    return new _BitbucketTeamAri(opts);\n  }\n  getVariables() {\n    return {\n      teamId: this.teamId\n    };\n  }\n};\n\n// src/bitbucket/workspace/types.ts\nvar BitbucketWorkspaceAriResourceOwner = \"bitbucket\", BitbucketWorkspaceAriResourceType = \"workspace\";\n\n// src/bitbucket/workspace/manifest.ts\nvar bitbucketWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BitbucketWorkspaceAriResourceOwner,\n  resourceType: BitbucketWorkspaceAriResourceType,\n  resourceIdSlug: \"{workspaceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/bitbucket/workspace/index.ts\nvar BitbucketWorkspaceAri = class _BitbucketWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: bitbucketWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: bitbucketWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: bitbucketWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: bitbucketWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, bitbucketWorkspaceAriStaticOpts);\n    return new _BitbucketWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, bitbucketWorkspaceAriStaticOpts);\n    return new _BitbucketWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId\n    };\n  }\n};\n\n// src/brie/role/types.ts\nvar BrieRoleAriResourceOwner = \"brie\", BrieRoleAriResourceType = \"role\";\n\n// src/brie/role/manifest.ts\nvar brieRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BrieRoleAriResourceOwner,\n  resourceType: BrieRoleAriResourceType,\n  resourceIdSlug: \"scope/{roleTypeId}\",\n  resourceIdSegmentFormats: {\n    roleTypeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/brie/role/index.ts\nvar BrieRoleAri = class _BrieRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleTypeId = opts.resourceIdSegmentValues.roleTypeId;\n  }\n  get roleTypeId() {\n    return this._roleTypeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: brieRoleAriStaticOpts.qualifier,\n      platformQualifier: brieRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: brieRoleAriStaticOpts.resourceOwner,\n      resourceType: brieRoleAriStaticOpts.resourceType,\n      resourceId: `scope/${opts.roleTypeId}`,\n      resourceIdSegmentValues: {\n        roleTypeId: opts.roleTypeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, brieRoleAriStaticOpts);\n    return new _BrieRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, brieRoleAriStaticOpts);\n    return new _BrieRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleTypeId: this.roleTypeId\n    };\n  }\n};\n\n// src/brie/site/types.ts\nvar BrieSiteAriResourceOwner = \"brie\", BrieSiteAriResourceType = \"site\";\n\n// src/brie/site/manifest.ts\nvar brieSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: BrieSiteAriResourceOwner,\n  resourceType: BrieSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/brie/site/index.ts\nvar BrieSiteAri = class _BrieSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: brieSiteAriStaticOpts.qualifier,\n      platformQualifier: brieSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: brieSiteAriStaticOpts.resourceOwner,\n      resourceType: brieSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, brieSiteAriStaticOpts);\n    return new _BrieSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, brieSiteAriStaticOpts);\n    return new _BrieSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/canvas/board/types.ts\nvar CanvasBoardAriResourceOwner = \"canvas\", CanvasBoardAriResourceType = \"board\";\n\n// src/canvas/board/manifest.ts\nvar canvasBoardAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CanvasBoardAriResourceOwner,\n  resourceType: CanvasBoardAriResourceType,\n  resourceIdSlug: \"{boardId}\",\n  resourceIdSegmentFormats: {\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/canvas/board/index.ts\nvar CanvasBoardAri = class _CanvasBoardAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._boardId = opts.resourceIdSegmentValues.boardId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: canvasBoardAriStaticOpts.qualifier,\n      platformQualifier: canvasBoardAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: canvasBoardAriStaticOpts.resourceOwner,\n      resourceType: canvasBoardAriStaticOpts.resourceType,\n      resourceId: `${opts.boardId}`,\n      resourceIdSegmentValues: {\n        boardId: opts.boardId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, canvasBoardAriStaticOpts);\n    return new _CanvasBoardAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, canvasBoardAriStaticOpts);\n    return new _CanvasBoardAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      boardId: this.boardId\n    };\n  }\n};\n\n// src/canvas/database/types.ts\nvar CanvasDatabaseAriResourceOwner = \"canvas\", CanvasDatabaseAriResourceType = \"database\";\n\n// src/canvas/database/manifest.ts\nvar canvasDatabaseAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CanvasDatabaseAriResourceOwner,\n  resourceType: CanvasDatabaseAriResourceType,\n  resourceIdSlug: \"{databaseId}\",\n  resourceIdSegmentFormats: {\n    databaseId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/canvas/database/index.ts\nvar CanvasDatabaseAri = class _CanvasDatabaseAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._databaseId = opts.resourceIdSegmentValues.databaseId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get databaseId() {\n    return this._databaseId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: canvasDatabaseAriStaticOpts.qualifier,\n      platformQualifier: canvasDatabaseAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: canvasDatabaseAriStaticOpts.resourceOwner,\n      resourceType: canvasDatabaseAriStaticOpts.resourceType,\n      resourceId: `${opts.databaseId}`,\n      resourceIdSegmentValues: {\n        databaseId: opts.databaseId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, canvasDatabaseAriStaticOpts);\n    return new _CanvasDatabaseAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, canvasDatabaseAriStaticOpts);\n    return new _CanvasDatabaseAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      databaseId: this.databaseId\n    };\n  }\n};\n\n// src/canvas/site/types.ts\nvar CanvasSiteAriResourceOwner = \"canvas\", CanvasSiteAriResourceType = \"site\";\n\n// src/canvas/site/manifest.ts\nvar canvasSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CanvasSiteAriResourceOwner,\n  resourceType: CanvasSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/canvas/site/index.ts\nvar CanvasSiteAri = class _CanvasSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: canvasSiteAriStaticOpts.qualifier,\n      platformQualifier: canvasSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: canvasSiteAriStaticOpts.resourceOwner,\n      resourceType: canvasSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, canvasSiteAriStaticOpts);\n    return new _CanvasSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, canvasSiteAriStaticOpts);\n    return new _CanvasSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/canvas/workspace/types.ts\nvar CanvasWorkspaceAriResourceOwner = \"canvas\", CanvasWorkspaceAriResourceType = \"workspace\";\n\n// src/canvas/workspace/manifest.ts\nvar canvasWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CanvasWorkspaceAriResourceOwner,\n  resourceType: CanvasWorkspaceAriResourceType,\n  resourceIdSlug: \"{workspaceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/canvas/workspace/index.ts\nvar CanvasWorkspaceAri = class _CanvasWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: canvasWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: canvasWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: canvasWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: canvasWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, canvasWorkspaceAriStaticOpts);\n    return new _CanvasWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, canvasWorkspaceAriStaticOpts);\n    return new _CanvasWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId\n    };\n  }\n};\n\n// src/cmdb/attribute/types.ts\nvar CmdbAttributeAriResourceOwner = \"cmdb\", CmdbAttributeAriResourceType = \"attribute\";\n\n// src/cmdb/attribute/manifest.ts\nvar cmdbAttributeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CmdbAttributeAriResourceOwner,\n  resourceType: CmdbAttributeAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{attributeId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    attributeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/cmdb/attribute/index.ts\nvar CmdbAttributeAri = class _CmdbAttributeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._attributeId = opts.resourceIdSegmentValues.attributeId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get attributeId() {\n    return this._attributeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: cmdbAttributeAriStaticOpts.qualifier,\n      platformQualifier: cmdbAttributeAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: cmdbAttributeAriStaticOpts.resourceOwner,\n      resourceType: cmdbAttributeAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.attributeId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        attributeId: opts.attributeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbAttributeAriStaticOpts);\n    return new _CmdbAttributeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, cmdbAttributeAriStaticOpts);\n    return new _CmdbAttributeAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      attributeId: this.attributeId\n    };\n  }\n};\n\n// src/cmdb/import-configuration/types.ts\nvar CmdbImportConfigurationAriResourceOwner = \"cmdb\", CmdbImportConfigurationAriResourceType = \"import-configuration\";\n\n// src/cmdb/import-configuration/manifest.ts\nvar cmdbImportConfigurationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CmdbImportConfigurationAriResourceOwner,\n  resourceType: CmdbImportConfigurationAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{importConfigId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    importConfigId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/cmdb/import-configuration/index.ts\nvar CmdbImportConfigurationAri = class _CmdbImportConfigurationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._importConfigId = opts.resourceIdSegmentValues.importConfigId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get importConfigId() {\n    return this._importConfigId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: cmdbImportConfigurationAriStaticOpts.qualifier,\n      platformQualifier: cmdbImportConfigurationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: cmdbImportConfigurationAriStaticOpts.resourceOwner,\n      resourceType: cmdbImportConfigurationAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.importConfigId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        importConfigId: opts.importConfigId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbImportConfigurationAriStaticOpts);\n    return new _CmdbImportConfigurationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, cmdbImportConfigurationAriStaticOpts);\n    return new _CmdbImportConfigurationAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      importConfigId: this.importConfigId\n    };\n  }\n};\n\n// src/cmdb/object/types.ts\nvar CmdbObjectAriResourceOwner = \"cmdb\", CmdbObjectAriResourceType = \"object\";\n\n// src/cmdb/object/manifest.ts\nvar cmdbObjectAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CmdbObjectAriResourceOwner,\n  resourceType: CmdbObjectAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{objectId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    objectId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/cmdb/object/index.ts\nvar CmdbObjectAri = class _CmdbObjectAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._objectId = opts.resourceIdSegmentValues.objectId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get objectId() {\n    return this._objectId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: cmdbObjectAriStaticOpts.qualifier,\n      platformQualifier: cmdbObjectAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: cmdbObjectAriStaticOpts.resourceOwner,\n      resourceType: cmdbObjectAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.objectId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        objectId: opts.objectId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbObjectAriStaticOpts);\n    return new _CmdbObjectAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, cmdbObjectAriStaticOpts);\n    return new _CmdbObjectAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      objectId: this.objectId\n    };\n  }\n};\n\n// src/cmdb/role/types.ts\nvar CmdbRoleAriResourceOwner = \"cmdb\", CmdbRoleAriResourceType = \"role\";\n\n// src/cmdb/role/manifest.ts\nvar cmdbRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CmdbRoleAriResourceOwner,\n  resourceType: CmdbRoleAriResourceType,\n  resourceIdSlug: \"{roleGroup}/{roleType}\",\n  resourceIdSegmentFormats: {\n    roleGroup: /(?:schema|airtrack|airtrack-buoy)/,\n    // eslint-disable-line no-useless-escape\n    roleType: /(?:viewer|admin|report-viewer|report-editor)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/cmdb/role/index.ts\nvar CmdbRoleAri = class _CmdbRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleGroup = opts.resourceIdSegmentValues.roleGroup, this._roleType = opts.resourceIdSegmentValues.roleType;\n  }\n  get roleGroup() {\n    return this._roleGroup;\n  }\n  get roleType() {\n    return this._roleType;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: cmdbRoleAriStaticOpts.qualifier,\n      platformQualifier: cmdbRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: cmdbRoleAriStaticOpts.resourceOwner,\n      resourceType: cmdbRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.roleGroup}/${opts.roleType}`,\n      resourceIdSegmentValues: {\n        roleGroup: opts.roleGroup,\n        roleType: opts.roleType\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbRoleAriStaticOpts);\n    return new _CmdbRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, cmdbRoleAriStaticOpts);\n    return new _CmdbRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleGroup: this.roleGroup,\n      roleType: this.roleType\n    };\n  }\n};\n\n// src/cmdb/schema/types.ts\nvar CmdbSchemaAriResourceOwner = \"cmdb\", CmdbSchemaAriResourceType = \"schema\";\n\n// src/cmdb/schema/manifest.ts\nvar cmdbSchemaAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CmdbSchemaAriResourceOwner,\n  resourceType: CmdbSchemaAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{schemaId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    schemaId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/cmdb/schema/index.ts\nvar CmdbSchemaAri = class _CmdbSchemaAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._schemaId = opts.resourceIdSegmentValues.schemaId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get schemaId() {\n    return this._schemaId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: cmdbSchemaAriStaticOpts.qualifier,\n      platformQualifier: cmdbSchemaAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: cmdbSchemaAriStaticOpts.resourceOwner,\n      resourceType: cmdbSchemaAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.schemaId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        schemaId: opts.schemaId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbSchemaAriStaticOpts);\n    return new _CmdbSchemaAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, cmdbSchemaAriStaticOpts);\n    return new _CmdbSchemaAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      schemaId: this.schemaId\n    };\n  }\n};\n\n// src/cmdb/type/types.ts\nvar CmdbTypeAriResourceOwner = \"cmdb\", CmdbTypeAriResourceType = \"type\";\n\n// src/cmdb/type/manifest.ts\nvar cmdbTypeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CmdbTypeAriResourceOwner,\n  resourceType: CmdbTypeAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{typeId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    typeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/cmdb/type/index.ts\nvar CmdbTypeAri = class _CmdbTypeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._typeId = opts.resourceIdSegmentValues.typeId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get typeId() {\n    return this._typeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: cmdbTypeAriStaticOpts.qualifier,\n      platformQualifier: cmdbTypeAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: cmdbTypeAriStaticOpts.resourceOwner,\n      resourceType: cmdbTypeAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.typeId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        typeId: opts.typeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbTypeAriStaticOpts);\n    return new _CmdbTypeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, cmdbTypeAriStaticOpts);\n    return new _CmdbTypeAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      typeId: this.typeId\n    };\n  }\n};\n\n// src/cmdb/workspace/types.ts\nvar CmdbWorkspaceAriResourceOwner = \"cmdb\", CmdbWorkspaceAriResourceType = \"workspace\";\n\n// src/cmdb/workspace/manifest.ts\nvar cmdbWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CmdbWorkspaceAriResourceOwner,\n  resourceType: CmdbWorkspaceAriResourceType,\n  resourceIdSlug: \"{workspaceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/cmdb/workspace/index.ts\nvar CmdbWorkspaceAri = class _CmdbWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: cmdbWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: cmdbWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: cmdbWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: cmdbWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, cmdbWorkspaceAriStaticOpts);\n    return new _CmdbWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, cmdbWorkspaceAriStaticOpts);\n    return new _CmdbWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId\n    };\n  }\n};\n\n// src/commerce/catalog-account/types.ts\nvar CommerceCatalogAccountAriResourceOwner = \"commerce\", CommerceCatalogAccountAriResourceType = \"catalog-account\";\n\n// src/commerce/catalog-account/manifest.ts\nvar commerceCatalogAccountAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommerceCatalogAccountAriResourceOwner,\n  resourceType: CommerceCatalogAccountAriResourceType,\n  resourceIdSlug: \"{catalogAccountId}\",\n  resourceIdSegmentFormats: {\n    catalogAccountId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/catalog-account/index.ts\nvar CommerceCatalogAccountAri = class _CommerceCatalogAccountAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._catalogAccountId = opts.resourceIdSegmentValues.catalogAccountId;\n  }\n  get catalogAccountId() {\n    return this._catalogAccountId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceCatalogAccountAriStaticOpts.qualifier,\n      platformQualifier: commerceCatalogAccountAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commerceCatalogAccountAriStaticOpts.resourceOwner,\n      resourceType: commerceCatalogAccountAriStaticOpts.resourceType,\n      resourceId: `${opts.catalogAccountId}`,\n      resourceIdSegmentValues: {\n        catalogAccountId: opts.catalogAccountId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceCatalogAccountAriStaticOpts);\n    return new _CommerceCatalogAccountAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceCatalogAccountAriStaticOpts);\n    return new _CommerceCatalogAccountAri(opts);\n  }\n  getVariables() {\n    return {\n      catalogAccountId: this.catalogAccountId\n    };\n  }\n};\n\n// src/commerce/change/types.ts\nvar CommerceChangeAriResourceOwner = \"commerce\", CommerceChangeAriResourceType = \"change\";\n\n// src/commerce/change/manifest.ts\nvar commerceChangeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommerceChangeAriResourceOwner,\n  resourceType: CommerceChangeAriResourceType,\n  resourceIdSlug: \"{changeUuid}\",\n  resourceIdSegmentFormats: {\n    changeUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/change/index.ts\nvar CommerceChangeAri = class _CommerceChangeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._changeUuid = opts.resourceIdSegmentValues.changeUuid;\n  }\n  get changeUuid() {\n    return this._changeUuid;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceChangeAriStaticOpts.qualifier,\n      platformQualifier: commerceChangeAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commerceChangeAriStaticOpts.resourceOwner,\n      resourceType: commerceChangeAriStaticOpts.resourceType,\n      resourceId: `${opts.changeUuid}`,\n      resourceIdSegmentValues: {\n        changeUuid: opts.changeUuid\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceChangeAriStaticOpts);\n    return new _CommerceChangeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceChangeAriStaticOpts);\n    return new _CommerceChangeAri(opts);\n  }\n  getVariables() {\n    return {\n      changeUuid: this.changeUuid\n    };\n  }\n};\n\n// src/commerce/entitlement/types.ts\nvar CommerceEntitlementAriResourceOwner = \"commerce\", CommerceEntitlementAriResourceType = \"entitlement\";\n\n// src/commerce/entitlement/manifest.ts\nvar commerceEntitlementAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommerceEntitlementAriResourceOwner,\n  resourceType: CommerceEntitlementAriResourceType,\n  resourceIdSlug: \"{entitlementId}\",\n  resourceIdSegmentFormats: {\n    entitlementId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/entitlement/index.ts\nvar CommerceEntitlementAri = class _CommerceEntitlementAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._entitlementId = opts.resourceIdSegmentValues.entitlementId;\n  }\n  get entitlementId() {\n    return this._entitlementId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceEntitlementAriStaticOpts.qualifier,\n      platformQualifier: commerceEntitlementAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commerceEntitlementAriStaticOpts.resourceOwner,\n      resourceType: commerceEntitlementAriStaticOpts.resourceType,\n      resourceId: `${opts.entitlementId}`,\n      resourceIdSegmentValues: {\n        entitlementId: opts.entitlementId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceEntitlementAriStaticOpts);\n    return new _CommerceEntitlementAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceEntitlementAriStaticOpts);\n    return new _CommerceEntitlementAri(opts);\n  }\n  getVariables() {\n    return {\n      entitlementId: this.entitlementId\n    };\n  }\n};\n\n// src/commerce/entitlement-template/types.ts\nvar CommerceEntitlementTemplateAriResourceOwner = \"commerce\", CommerceEntitlementTemplateAriResourceType = \"entitlement-template\";\n\n// src/commerce/entitlement-template/manifest.ts\nvar commerceEntitlementTemplateAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommerceEntitlementTemplateAriResourceOwner,\n  resourceType: CommerceEntitlementTemplateAriResourceType,\n  resourceIdSlug: \"{entitlementTemplateId}\",\n  resourceIdSegmentFormats: {\n    entitlementTemplateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/entitlement-template/index.ts\nvar CommerceEntitlementTemplateAri = class _CommerceEntitlementTemplateAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._entitlementTemplateId = opts.resourceIdSegmentValues.entitlementTemplateId;\n  }\n  get entitlementTemplateId() {\n    return this._entitlementTemplateId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceEntitlementTemplateAriStaticOpts.qualifier,\n      platformQualifier: commerceEntitlementTemplateAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commerceEntitlementTemplateAriStaticOpts.resourceOwner,\n      resourceType: commerceEntitlementTemplateAriStaticOpts.resourceType,\n      resourceId: `${opts.entitlementTemplateId}`,\n      resourceIdSegmentValues: {\n        entitlementTemplateId: opts.entitlementTemplateId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceEntitlementTemplateAriStaticOpts);\n    return new _CommerceEntitlementTemplateAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceEntitlementTemplateAriStaticOpts);\n    return new _CommerceEntitlementTemplateAri(opts);\n  }\n  getVariables() {\n    return {\n      entitlementTemplateId: this.entitlementTemplateId\n    };\n  }\n};\n\n// src/commerce/initiative/types.ts\nvar CommerceInitiativeAriResourceOwner = \"commerce\", CommerceInitiativeAriResourceType = \"initiative\";\n\n// src/commerce/initiative/manifest.ts\nvar commerceInitiativeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommerceInitiativeAriResourceOwner,\n  resourceType: CommerceInitiativeAriResourceType,\n  resourceIdSlug: \"{initiativeUuid}\",\n  resourceIdSegmentFormats: {\n    initiativeUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/initiative/index.ts\nvar CommerceInitiativeAri = class _CommerceInitiativeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._initiativeUuid = opts.resourceIdSegmentValues.initiativeUuid;\n  }\n  get initiativeUuid() {\n    return this._initiativeUuid;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceInitiativeAriStaticOpts.qualifier,\n      platformQualifier: commerceInitiativeAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commerceInitiativeAriStaticOpts.resourceOwner,\n      resourceType: commerceInitiativeAriStaticOpts.resourceType,\n      resourceId: `${opts.initiativeUuid}`,\n      resourceIdSegmentValues: {\n        initiativeUuid: opts.initiativeUuid\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceInitiativeAriStaticOpts);\n    return new _CommerceInitiativeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceInitiativeAriStaticOpts);\n    return new _CommerceInitiativeAri(opts);\n  }\n  getVariables() {\n    return {\n      initiativeUuid: this.initiativeUuid\n    };\n  }\n};\n\n// src/commerce/invoice-group/types.ts\nvar CommerceInvoiceGroupAriResourceOwner = \"commerce\", CommerceInvoiceGroupAriResourceType = \"invoice-group\";\n\n// src/commerce/invoice-group/manifest.ts\nvar commerceInvoiceGroupAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CommerceInvoiceGroupAriResourceOwner,\n  resourceType: CommerceInvoiceGroupAriResourceType,\n  resourceIdSlug: \"{invoiceGroupId}\",\n  resourceIdSegmentFormats: {\n    invoiceGroupId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/invoice-group/index.ts\nvar CommerceInvoiceGroupAri = class _CommerceInvoiceGroupAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._txaId = opts.cloudId || \"\", this._invoiceGroupId = opts.resourceIdSegmentValues.invoiceGroupId;\n  }\n  get txaId() {\n    return this._txaId;\n  }\n  get invoiceGroupId() {\n    return this._invoiceGroupId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceInvoiceGroupAriStaticOpts.qualifier,\n      platformQualifier: commerceInvoiceGroupAriStaticOpts.platformQualifier,\n      cloudId: opts.txaId,\n      resourceOwner: commerceInvoiceGroupAriStaticOpts.resourceOwner,\n      resourceType: commerceInvoiceGroupAriStaticOpts.resourceType,\n      resourceId: `${opts.invoiceGroupId}`,\n      resourceIdSegmentValues: {\n        invoiceGroupId: opts.invoiceGroupId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceInvoiceGroupAriStaticOpts);\n    return new _CommerceInvoiceGroupAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceInvoiceGroupAriStaticOpts);\n    return new _CommerceInvoiceGroupAri(opts);\n  }\n  getVariables() {\n    return {\n      txaId: this.txaId,\n      invoiceGroupId: this.invoiceGroupId\n    };\n  }\n};\n\n// src/commerce/offering/types.ts\nvar CommerceOfferingAriResourceOwner = \"commerce\", CommerceOfferingAriResourceType = \"offering\";\n\n// src/commerce/offering/manifest.ts\nvar commerceOfferingAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommerceOfferingAriResourceOwner,\n  resourceType: CommerceOfferingAriResourceType,\n  resourceIdSlug: \"{offeringId}\",\n  resourceIdSegmentFormats: {\n    offeringId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/offering/index.ts\nvar CommerceOfferingAri = class _CommerceOfferingAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._offeringId = opts.resourceIdSegmentValues.offeringId;\n  }\n  get offeringId() {\n    return this._offeringId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceOfferingAriStaticOpts.qualifier,\n      platformQualifier: commerceOfferingAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commerceOfferingAriStaticOpts.resourceOwner,\n      resourceType: commerceOfferingAriStaticOpts.resourceType,\n      resourceId: `${opts.offeringId}`,\n      resourceIdSegmentValues: {\n        offeringId: opts.offeringId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceOfferingAriStaticOpts);\n    return new _CommerceOfferingAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceOfferingAriStaticOpts);\n    return new _CommerceOfferingAri(opts);\n  }\n  getVariables() {\n    return {\n      offeringId: this.offeringId\n    };\n  }\n};\n\n// src/commerce/offering-relationship-template/types.ts\nvar CommerceOfferingRelationshipTemplateAriResourceOwner = \"commerce\", CommerceOfferingRelationshipTemplateAriResourceType = \"offering-relationship-template\";\n\n// src/commerce/offering-relationship-template/manifest.ts\nvar commerceOfferingRelationshipTemplateAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommerceOfferingRelationshipTemplateAriResourceOwner,\n  resourceType: CommerceOfferingRelationshipTemplateAriResourceType,\n  resourceIdSlug: \"{offeringRelationshipTemplateId}\",\n  resourceIdSegmentFormats: {\n    offeringRelationshipTemplateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/offering-relationship-template/index.ts\nvar CommerceOfferingRelationshipTemplateAri = class _CommerceOfferingRelationshipTemplateAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._offeringRelationshipTemplateId = opts.resourceIdSegmentValues.offeringRelationshipTemplateId;\n  }\n  get offeringRelationshipTemplateId() {\n    return this._offeringRelationshipTemplateId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceOfferingRelationshipTemplateAriStaticOpts.qualifier,\n      platformQualifier: commerceOfferingRelationshipTemplateAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commerceOfferingRelationshipTemplateAriStaticOpts.resourceOwner,\n      resourceType: commerceOfferingRelationshipTemplateAriStaticOpts.resourceType,\n      resourceId: `${opts.offeringRelationshipTemplateId}`,\n      resourceIdSegmentValues: {\n        offeringRelationshipTemplateId: opts.offeringRelationshipTemplateId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceOfferingRelationshipTemplateAriStaticOpts);\n    return new _CommerceOfferingRelationshipTemplateAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceOfferingRelationshipTemplateAriStaticOpts);\n    return new _CommerceOfferingRelationshipTemplateAri(opts);\n  }\n  getVariables() {\n    return {\n      offeringRelationshipTemplateId: this.offeringRelationshipTemplateId\n    };\n  }\n};\n\n// src/commerce/order/types.ts\nvar CommerceOrderAriResourceOwner = \"commerce\", CommerceOrderAriResourceType = \"order\";\n\n// src/commerce/order/manifest.ts\nvar commerceOrderAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CommerceOrderAriResourceOwner,\n  resourceType: CommerceOrderAriResourceType,\n  resourceIdSlug: \"{orderId}\",\n  resourceIdSegmentFormats: {\n    orderId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/order/index.ts\nvar CommerceOrderAri = class _CommerceOrderAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._txaId = opts.cloudId || \"\", this._orderId = opts.resourceIdSegmentValues.orderId;\n  }\n  get txaId() {\n    return this._txaId;\n  }\n  get orderId() {\n    return this._orderId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceOrderAriStaticOpts.qualifier,\n      platformQualifier: commerceOrderAriStaticOpts.platformQualifier,\n      cloudId: opts.txaId,\n      resourceOwner: commerceOrderAriStaticOpts.resourceOwner,\n      resourceType: commerceOrderAriStaticOpts.resourceType,\n      resourceId: `${opts.orderId}`,\n      resourceIdSegmentValues: {\n        orderId: opts.orderId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceOrderAriStaticOpts);\n    return new _CommerceOrderAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceOrderAriStaticOpts);\n    return new _CommerceOrderAri(opts);\n  }\n  getVariables() {\n    return {\n      txaId: this.txaId,\n      orderId: this.orderId\n    };\n  }\n};\n\n// src/commerce/payment-method/types.ts\nvar CommercePaymentMethodAriResourceOwner = \"commerce\", CommercePaymentMethodAriResourceType = \"payment-method\";\n\n// src/commerce/payment-method/manifest.ts\nvar commercePaymentMethodAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CommercePaymentMethodAriResourceOwner,\n  resourceType: CommercePaymentMethodAriResourceType,\n  resourceIdSlug: \"{paymentMethodId}\",\n  resourceIdSegmentFormats: {\n    paymentMethodId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/payment-method/index.ts\nvar CommercePaymentMethodAri = class _CommercePaymentMethodAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._txaId = opts.cloudId || \"\", this._paymentMethodId = opts.resourceIdSegmentValues.paymentMethodId;\n  }\n  get txaId() {\n    return this._txaId;\n  }\n  get paymentMethodId() {\n    return this._paymentMethodId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commercePaymentMethodAriStaticOpts.qualifier,\n      platformQualifier: commercePaymentMethodAriStaticOpts.platformQualifier,\n      cloudId: opts.txaId,\n      resourceOwner: commercePaymentMethodAriStaticOpts.resourceOwner,\n      resourceType: commercePaymentMethodAriStaticOpts.resourceType,\n      resourceId: `${opts.paymentMethodId}`,\n      resourceIdSegmentValues: {\n        paymentMethodId: opts.paymentMethodId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commercePaymentMethodAriStaticOpts);\n    return new _CommercePaymentMethodAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commercePaymentMethodAriStaticOpts);\n    return new _CommercePaymentMethodAri(opts);\n  }\n  getVariables() {\n    return {\n      txaId: this.txaId,\n      paymentMethodId: this.paymentMethodId\n    };\n  }\n};\n\n// src/commerce/pricing-plan/types.ts\nvar CommercePricingPlanAriResourceOwner = \"commerce\", CommercePricingPlanAriResourceType = \"pricing-plan\";\n\n// src/commerce/pricing-plan/manifest.ts\nvar commercePricingPlanAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommercePricingPlanAriResourceOwner,\n  resourceType: CommercePricingPlanAriResourceType,\n  resourceIdSlug: \"{pricingPlanId}\",\n  resourceIdSegmentFormats: {\n    pricingPlanId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/pricing-plan/index.ts\nvar CommercePricingPlanAri = class _CommercePricingPlanAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._pricingPlanId = opts.resourceIdSegmentValues.pricingPlanId;\n  }\n  get pricingPlanId() {\n    return this._pricingPlanId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commercePricingPlanAriStaticOpts.qualifier,\n      platformQualifier: commercePricingPlanAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commercePricingPlanAriStaticOpts.resourceOwner,\n      resourceType: commercePricingPlanAriStaticOpts.resourceType,\n      resourceId: `${opts.pricingPlanId}`,\n      resourceIdSegmentValues: {\n        pricingPlanId: opts.pricingPlanId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commercePricingPlanAriStaticOpts);\n    return new _CommercePricingPlanAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commercePricingPlanAriStaticOpts);\n    return new _CommercePricingPlanAri(opts);\n  }\n  getVariables() {\n    return {\n      pricingPlanId: this.pricingPlanId\n    };\n  }\n};\n\n// src/commerce/product/types.ts\nvar CommerceProductAriResourceOwner = \"commerce\", CommerceProductAriResourceType = \"product\";\n\n// src/commerce/product/manifest.ts\nvar commerceProductAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommerceProductAriResourceOwner,\n  resourceType: CommerceProductAriResourceType,\n  resourceIdSlug: \"{productId}\",\n  resourceIdSegmentFormats: {\n    productId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/product/index.ts\nvar CommerceProductAri = class _CommerceProductAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._productId = opts.resourceIdSegmentValues.productId;\n  }\n  get productId() {\n    return this._productId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceProductAriStaticOpts.qualifier,\n      platformQualifier: commerceProductAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commerceProductAriStaticOpts.resourceOwner,\n      resourceType: commerceProductAriStaticOpts.resourceType,\n      resourceId: `${opts.productId}`,\n      resourceIdSegmentValues: {\n        productId: opts.productId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceProductAriStaticOpts);\n    return new _CommerceProductAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceProductAriStaticOpts);\n    return new _CommerceProductAri(opts);\n  }\n  getVariables() {\n    return {\n      productId: this.productId\n    };\n  }\n};\n\n// src/commerce/promotion/types.ts\nvar CommercePromotionAriResourceOwner = \"commerce\", CommercePromotionAriResourceType = \"promotion\";\n\n// src/commerce/promotion/manifest.ts\nvar commercePromotionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommercePromotionAriResourceOwner,\n  resourceType: CommercePromotionAriResourceType,\n  resourceIdSlug: \"{promotionId}\",\n  resourceIdSegmentFormats: {\n    promotionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/promotion/index.ts\nvar CommercePromotionAri = class _CommercePromotionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._promotionId = opts.resourceIdSegmentValues.promotionId;\n  }\n  get promotionId() {\n    return this._promotionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commercePromotionAriStaticOpts.qualifier,\n      platformQualifier: commercePromotionAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commercePromotionAriStaticOpts.resourceOwner,\n      resourceType: commercePromotionAriStaticOpts.resourceType,\n      resourceId: `${opts.promotionId}`,\n      resourceIdSegmentValues: {\n        promotionId: opts.promotionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commercePromotionAriStaticOpts);\n    return new _CommercePromotionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commercePromotionAriStaticOpts);\n    return new _CommercePromotionAri(opts);\n  }\n  getVariables() {\n    return {\n      promotionId: this.promotionId\n    };\n  }\n};\n\n// src/commerce/quote/types.ts\nvar CommerceQuoteAriResourceOwner = \"commerce\", CommerceQuoteAriResourceType = \"quote\";\n\n// src/commerce/quote/manifest.ts\nvar commerceQuoteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CommerceQuoteAriResourceOwner,\n  resourceType: CommerceQuoteAriResourceType,\n  resourceIdSlug: \"{quoteId}\",\n  resourceIdSegmentFormats: {\n    quoteId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/quote/index.ts\nvar CommerceQuoteAri = class _CommerceQuoteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._txaId = opts.cloudId || \"\", this._quoteId = opts.resourceIdSegmentValues.quoteId;\n  }\n  get txaId() {\n    return this._txaId;\n  }\n  get quoteId() {\n    return this._quoteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceQuoteAriStaticOpts.qualifier,\n      platformQualifier: commerceQuoteAriStaticOpts.platformQualifier,\n      cloudId: opts.txaId,\n      resourceOwner: commerceQuoteAriStaticOpts.resourceOwner,\n      resourceType: commerceQuoteAriStaticOpts.resourceType,\n      resourceId: `${opts.quoteId}`,\n      resourceIdSegmentValues: {\n        quoteId: opts.quoteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceQuoteAriStaticOpts);\n    return new _CommerceQuoteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceQuoteAriStaticOpts);\n    return new _CommerceQuoteAri(opts);\n  }\n  getVariables() {\n    return {\n      txaId: this.txaId,\n      quoteId: this.quoteId\n    };\n  }\n};\n\n// src/commerce/role/types.ts\nvar CommerceRoleAriResourceOwner = \"commerce\", CommerceRoleAriResourceType = \"role\";\n\n// src/commerce/role/manifest.ts\nvar commerceRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommerceRoleAriResourceOwner,\n  resourceType: CommerceRoleAriResourceType,\n  resourceIdSlug: \"{roleId}\",\n  resourceIdSegmentFormats: {\n    roleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/role/index.ts\nvar CommerceRoleAri = class _CommerceRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleId = opts.resourceIdSegmentValues.roleId;\n  }\n  get roleId() {\n    return this._roleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceRoleAriStaticOpts.qualifier,\n      platformQualifier: commerceRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commerceRoleAriStaticOpts.resourceOwner,\n      resourceType: commerceRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.roleId}`,\n      resourceIdSegmentValues: {\n        roleId: opts.roleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceRoleAriStaticOpts);\n    return new _CommerceRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceRoleAriStaticOpts);\n    return new _CommerceRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleId: this.roleId\n    };\n  }\n};\n\n// src/commerce/ship-to-party/types.ts\nvar CommerceShipToPartyAriResourceOwner = \"commerce\", CommerceShipToPartyAriResourceType = \"ship-to-party\";\n\n// src/commerce/ship-to-party/manifest.ts\nvar commerceShipToPartyAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CommerceShipToPartyAriResourceOwner,\n  resourceType: CommerceShipToPartyAriResourceType,\n  resourceIdSlug: \"{shipToPartyId}\",\n  resourceIdSegmentFormats: {\n    shipToPartyId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/ship-to-party/index.ts\nvar CommerceShipToPartyAri = class _CommerceShipToPartyAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._txaId = opts.cloudId || \"\", this._shipToPartyId = opts.resourceIdSegmentValues.shipToPartyId;\n  }\n  get txaId() {\n    return this._txaId;\n  }\n  get shipToPartyId() {\n    return this._shipToPartyId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceShipToPartyAriStaticOpts.qualifier,\n      platformQualifier: commerceShipToPartyAriStaticOpts.platformQualifier,\n      cloudId: opts.txaId,\n      resourceOwner: commerceShipToPartyAriStaticOpts.resourceOwner,\n      resourceType: commerceShipToPartyAriStaticOpts.resourceType,\n      resourceId: `${opts.shipToPartyId}`,\n      resourceIdSegmentValues: {\n        shipToPartyId: opts.shipToPartyId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceShipToPartyAriStaticOpts);\n    return new _CommerceShipToPartyAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceShipToPartyAriStaticOpts);\n    return new _CommerceShipToPartyAri(opts);\n  }\n  getVariables() {\n    return {\n      txaId: this.txaId,\n      shipToPartyId: this.shipToPartyId\n    };\n  }\n};\n\n// src/commerce/transaction-account/types.ts\nvar CommerceTransactionAccountAriResourceOwner = \"commerce\", CommerceTransactionAccountAriResourceType = \"transaction-account\";\n\n// src/commerce/transaction-account/manifest.ts\nvar commerceTransactionAccountAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommerceTransactionAccountAriResourceOwner,\n  resourceType: CommerceTransactionAccountAriResourceType,\n  resourceIdSlug: \"{txaId}\",\n  resourceIdSegmentFormats: {\n    txaId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/transaction-account/index.ts\nvar CommerceTransactionAccountAri = class _CommerceTransactionAccountAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._txaId = opts.resourceIdSegmentValues.txaId;\n  }\n  get txaId() {\n    return this._txaId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceTransactionAccountAriStaticOpts.qualifier,\n      platformQualifier: commerceTransactionAccountAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commerceTransactionAccountAriStaticOpts.resourceOwner,\n      resourceType: commerceTransactionAccountAriStaticOpts.resourceType,\n      resourceId: `${opts.txaId}`,\n      resourceIdSegmentValues: {\n        txaId: opts.txaId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceTransactionAccountAriStaticOpts);\n    return new _CommerceTransactionAccountAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceTransactionAccountAriStaticOpts);\n    return new _CommerceTransactionAccountAri(opts);\n  }\n  getVariables() {\n    return {\n      txaId: this.txaId\n    };\n  }\n};\n\n// src/commerce/workbench-resource/types.ts\nvar CommerceWorkbenchResourceAriResourceOwner = \"commerce\", CommerceWorkbenchResourceAriResourceType = \"workbench-resource\";\n\n// src/commerce/workbench-resource/manifest.ts\nvar commerceWorkbenchResourceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CommerceWorkbenchResourceAriResourceOwner,\n  resourceType: CommerceWorkbenchResourceAriResourceType,\n  resourceIdSlug: \"{resourceName}\",\n  resourceIdSegmentFormats: {\n    resourceName: /(database)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/commerce/workbench-resource/index.ts\nvar CommerceWorkbenchResourceAri = class _CommerceWorkbenchResourceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._resourceName = opts.resourceIdSegmentValues.resourceName;\n  }\n  get resourceName() {\n    return this._resourceName;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: commerceWorkbenchResourceAriStaticOpts.qualifier,\n      platformQualifier: commerceWorkbenchResourceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: commerceWorkbenchResourceAriStaticOpts.resourceOwner,\n      resourceType: commerceWorkbenchResourceAriStaticOpts.resourceType,\n      resourceId: `${opts.resourceName}`,\n      resourceIdSegmentValues: {\n        resourceName: opts.resourceName\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, commerceWorkbenchResourceAriStaticOpts);\n    return new _CommerceWorkbenchResourceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, commerceWorkbenchResourceAriStaticOpts);\n    return new _CommerceWorkbenchResourceAri(opts);\n  }\n  getVariables() {\n    return {\n      resourceName: this.resourceName\n    };\n  }\n};\n\n// src/compass/assistant-answer/types.ts\nvar CompassAssistantAnswerAriResourceOwner = \"compass\", CompassAssistantAnswerAriResourceType = \"assistant-answer\";\n\n// src/compass/assistant-answer/manifest.ts\nvar compassAssistantAnswerAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassAssistantAnswerAriResourceOwner,\n  resourceType: CompassAssistantAnswerAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{answerId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    answerId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/assistant-answer/index.ts\nvar CompassAssistantAnswerAri = class _CompassAssistantAnswerAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._answerId = opts.resourceIdSegmentValues.answerId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get answerId() {\n    return this._answerId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassAssistantAnswerAriStaticOpts.qualifier,\n      platformQualifier: compassAssistantAnswerAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassAssistantAnswerAriStaticOpts.resourceOwner,\n      resourceType: compassAssistantAnswerAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.answerId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        answerId: opts.answerId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassAssistantAnswerAriStaticOpts);\n    return new _CompassAssistantAnswerAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassAssistantAnswerAriStaticOpts);\n    return new _CompassAssistantAnswerAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      answerId: this.answerId\n    };\n  }\n};\n\n// src/compass/component/types.ts\nvar CompassComponentAriResourceOwner = \"compass\", CompassComponentAriResourceType = \"component\";\n\n// src/compass/component/manifest.ts\nvar compassComponentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassComponentAriResourceOwner,\n  resourceType: CompassComponentAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{componentId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    componentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/component/index.ts\nvar CompassComponentAri = class _CompassComponentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._componentId = opts.resourceIdSegmentValues.componentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get componentId() {\n    return this._componentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassComponentAriStaticOpts.qualifier,\n      platformQualifier: compassComponentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassComponentAriStaticOpts.resourceOwner,\n      resourceType: compassComponentAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.componentId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        componentId: opts.componentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassComponentAriStaticOpts);\n    return new _CompassComponentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassComponentAriStaticOpts);\n    return new _CompassComponentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      componentId: this.componentId\n    };\n  }\n};\n\n// src/compass/component-label/types.ts\nvar CompassComponentLabelAriResourceOwner = \"compass\", CompassComponentLabelAriResourceType = \"component-label\";\n\n// src/compass/component-label/manifest.ts\nvar compassComponentLabelAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassComponentLabelAriResourceOwner,\n  resourceType: CompassComponentLabelAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{labelId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    labelId: /[0-9a-f\\-]{36,64}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/component-label/index.ts\nvar CompassComponentLabelAri = class _CompassComponentLabelAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._labelId = opts.resourceIdSegmentValues.labelId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get labelId() {\n    return this._labelId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassComponentLabelAriStaticOpts.qualifier,\n      platformQualifier: compassComponentLabelAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassComponentLabelAriStaticOpts.resourceOwner,\n      resourceType: compassComponentLabelAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.labelId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        labelId: opts.labelId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassComponentLabelAriStaticOpts);\n    return new _CompassComponentLabelAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassComponentLabelAriStaticOpts);\n    return new _CompassComponentLabelAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      labelId: this.labelId\n    };\n  }\n};\n\n// src/compass/component-link/types.ts\nvar CompassComponentLinkAriResourceOwner = \"compass\", CompassComponentLinkAriResourceType = \"component-link\";\n\n// src/compass/component-link/manifest.ts\nvar compassComponentLinkAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassComponentLinkAriResourceOwner,\n  resourceType: CompassComponentLinkAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{componentId}/{componentLinkId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    componentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    componentLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/component-link/index.ts\nvar CompassComponentLinkAri = class _CompassComponentLinkAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._componentId = opts.resourceIdSegmentValues.componentId, this._componentLinkId = opts.resourceIdSegmentValues.componentLinkId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get componentId() {\n    return this._componentId;\n  }\n  get componentLinkId() {\n    return this._componentLinkId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassComponentLinkAriStaticOpts.qualifier,\n      platformQualifier: compassComponentLinkAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassComponentLinkAriStaticOpts.resourceOwner,\n      resourceType: compassComponentLinkAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.componentId}/${opts.componentLinkId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        componentId: opts.componentId,\n        componentLinkId: opts.componentLinkId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassComponentLinkAriStaticOpts);\n    return new _CompassComponentLinkAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassComponentLinkAriStaticOpts);\n    return new _CompassComponentLinkAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      componentId: this.componentId,\n      componentLinkId: this.componentLinkId\n    };\n  }\n};\n\n// src/compass/custom-field-definition/types.ts\nvar CompassCustomFieldDefinitionAriResourceOwner = \"compass\", CompassCustomFieldDefinitionAriResourceType = \"custom-field-definition\";\n\n// src/compass/custom-field-definition/manifest.ts\nvar compassCustomFieldDefinitionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassCustomFieldDefinitionAriResourceOwner,\n  resourceType: CompassCustomFieldDefinitionAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{definitionId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    definitionId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/custom-field-definition/index.ts\nvar CompassCustomFieldDefinitionAri = class _CompassCustomFieldDefinitionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._definitionId = opts.resourceIdSegmentValues.definitionId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get definitionId() {\n    return this._definitionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassCustomFieldDefinitionAriStaticOpts.qualifier,\n      platformQualifier: compassCustomFieldDefinitionAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassCustomFieldDefinitionAriStaticOpts.resourceOwner,\n      resourceType: compassCustomFieldDefinitionAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.definitionId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        definitionId: opts.definitionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassCustomFieldDefinitionAriStaticOpts);\n    return new _CompassCustomFieldDefinitionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassCustomFieldDefinitionAriStaticOpts);\n    return new _CompassCustomFieldDefinitionAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      definitionId: this.definitionId\n    };\n  }\n};\n\n// src/compass/document/types.ts\nvar CompassDocumentAriResourceOwner = \"compass\", CompassDocumentAriResourceType = \"document\";\n\n// src/compass/document/manifest.ts\nvar compassDocumentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassDocumentAriResourceOwner,\n  resourceType: CompassDocumentAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{documentId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/document/index.ts\nvar CompassDocumentAri = class _CompassDocumentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._documentId = opts.resourceIdSegmentValues.documentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get documentId() {\n    return this._documentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassDocumentAriStaticOpts.qualifier,\n      platformQualifier: compassDocumentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassDocumentAriStaticOpts.resourceOwner,\n      resourceType: compassDocumentAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.documentId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        documentId: opts.documentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassDocumentAriStaticOpts);\n    return new _CompassDocumentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassDocumentAriStaticOpts);\n    return new _CompassDocumentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      documentId: this.documentId\n    };\n  }\n};\n\n// src/compass/documentation-category/types.ts\nvar CompassDocumentationCategoryAriResourceOwner = \"compass\", CompassDocumentationCategoryAriResourceType = \"documentation-category\";\n\n// src/compass/documentation-category/manifest.ts\nvar compassDocumentationCategoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassDocumentationCategoryAriResourceOwner,\n  resourceType: CompassDocumentationCategoryAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{documentationCategoryId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    documentationCategoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/documentation-category/index.ts\nvar CompassDocumentationCategoryAri = class _CompassDocumentationCategoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._documentationCategoryId = opts.resourceIdSegmentValues.documentationCategoryId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get documentationCategoryId() {\n    return this._documentationCategoryId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassDocumentationCategoryAriStaticOpts.qualifier,\n      platformQualifier: compassDocumentationCategoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassDocumentationCategoryAriStaticOpts.resourceOwner,\n      resourceType: compassDocumentationCategoryAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.documentationCategoryId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        documentationCategoryId: opts.documentationCategoryId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassDocumentationCategoryAriStaticOpts);\n    return new _CompassDocumentationCategoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassDocumentationCategoryAriStaticOpts);\n    return new _CompassDocumentationCategoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      documentationCategoryId: this.documentationCategoryId\n    };\n  }\n};\n\n// src/compass/event-source/types.ts\nvar CompassEventSourceAriResourceOwner = \"compass\", CompassEventSourceAriResourceType = \"event-source\";\n\n// src/compass/event-source/manifest.ts\nvar compassEventSourceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassEventSourceAriResourceOwner,\n  resourceType: CompassEventSourceAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{eventSourceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    eventSourceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/event-source/index.ts\nvar CompassEventSourceAri = class _CompassEventSourceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._eventSourceId = opts.resourceIdSegmentValues.eventSourceId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get eventSourceId() {\n    return this._eventSourceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassEventSourceAriStaticOpts.qualifier,\n      platformQualifier: compassEventSourceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassEventSourceAriStaticOpts.resourceOwner,\n      resourceType: compassEventSourceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.eventSourceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        eventSourceId: opts.eventSourceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassEventSourceAriStaticOpts);\n    return new _CompassEventSourceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassEventSourceAriStaticOpts);\n    return new _CompassEventSourceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      eventSourceId: this.eventSourceId\n    };\n  }\n};\n\n// src/compass/incoming-webhook/types.ts\nvar CompassIncomingWebhookAriResourceOwner = \"compass\", CompassIncomingWebhookAriResourceType = \"incoming-webhook\";\n\n// src/compass/incoming-webhook/manifest.ts\nvar compassIncomingWebhookAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassIncomingWebhookAriResourceOwner,\n  resourceType: CompassIncomingWebhookAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{incomingWebhookId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    incomingWebhookId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/incoming-webhook/index.ts\nvar CompassIncomingWebhookAri = class _CompassIncomingWebhookAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incomingWebhookId = opts.resourceIdSegmentValues.incomingWebhookId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get incomingWebhookId() {\n    return this._incomingWebhookId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassIncomingWebhookAriStaticOpts.qualifier,\n      platformQualifier: compassIncomingWebhookAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassIncomingWebhookAriStaticOpts.resourceOwner,\n      resourceType: compassIncomingWebhookAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.incomingWebhookId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        incomingWebhookId: opts.incomingWebhookId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassIncomingWebhookAriStaticOpts);\n    return new _CompassIncomingWebhookAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassIncomingWebhookAriStaticOpts);\n    return new _CompassIncomingWebhookAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      incomingWebhookId: this.incomingWebhookId\n    };\n  }\n};\n\n// src/compass/metric-definition/types.ts\nvar CompassMetricDefinitionAriResourceOwner = \"compass\", CompassMetricDefinitionAriResourceType = \"metric-definition\";\n\n// src/compass/metric-definition/manifest.ts\nvar compassMetricDefinitionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]*$\"),\n  resourceOwner: CompassMetricDefinitionAriResourceOwner,\n  resourceType: CompassMetricDefinitionAriResourceType,\n  resourceIdSlug: \"{containerId}/{definitionId}\",\n  resourceIdSegmentFormats: {\n    containerId: /(?:builtin|forge|[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12})/,\n    // eslint-disable-line no-useless-escape\n    definitionId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/metric-definition/index.ts\nvar CompassMetricDefinitionAri = class _CompassMetricDefinitionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._optionalSiteId = opts.cloudId || \"\", this._containerId = opts.resourceIdSegmentValues.containerId, this._definitionId = opts.resourceIdSegmentValues.definitionId;\n  }\n  get optionalSiteId() {\n    return this._optionalSiteId;\n  }\n  get containerId() {\n    return this._containerId;\n  }\n  get definitionId() {\n    return this._definitionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassMetricDefinitionAriStaticOpts.qualifier,\n      platformQualifier: compassMetricDefinitionAriStaticOpts.platformQualifier,\n      cloudId: opts.optionalSiteId,\n      resourceOwner: compassMetricDefinitionAriStaticOpts.resourceOwner,\n      resourceType: compassMetricDefinitionAriStaticOpts.resourceType,\n      resourceId: `${opts.containerId}/${opts.definitionId}`,\n      resourceIdSegmentValues: {\n        containerId: opts.containerId,\n        definitionId: opts.definitionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassMetricDefinitionAriStaticOpts);\n    return new _CompassMetricDefinitionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassMetricDefinitionAriStaticOpts);\n    return new _CompassMetricDefinitionAri(opts);\n  }\n  getVariables() {\n    return {\n      optionalSiteId: this.optionalSiteId,\n      containerId: this.containerId,\n      definitionId: this.definitionId\n    };\n  }\n};\n\n// src/compass/metric-source/types.ts\nvar CompassMetricSourceAriResourceOwner = \"compass\", CompassMetricSourceAriResourceType = \"metric-source\";\n\n// src/compass/metric-source/manifest.ts\nvar compassMetricSourceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassMetricSourceAriResourceOwner,\n  resourceType: CompassMetricSourceAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{metricSourceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    metricSourceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/metric-source/index.ts\nvar CompassMetricSourceAri = class _CompassMetricSourceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._metricSourceId = opts.resourceIdSegmentValues.metricSourceId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get metricSourceId() {\n    return this._metricSourceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassMetricSourceAriStaticOpts.qualifier,\n      platformQualifier: compassMetricSourceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassMetricSourceAriStaticOpts.resourceOwner,\n      resourceType: compassMetricSourceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.metricSourceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        metricSourceId: opts.metricSourceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassMetricSourceAriStaticOpts);\n    return new _CompassMetricSourceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassMetricSourceAriStaticOpts);\n    return new _CompassMetricSourceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      metricSourceId: this.metricSourceId\n    };\n  }\n};\n\n// src/compass/role/types.ts\nvar CompassRoleAriResourceOwner = \"compass\", CompassRoleAriResourceType = \"role\";\n\n// src/compass/role/manifest.ts\nvar compassRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CompassRoleAriResourceOwner,\n  resourceType: CompassRoleAriResourceType,\n  resourceIdSlug: \"product/{roleType}\",\n  resourceIdSegmentFormats: {\n    roleType: /(?:basic|member|admin)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/role/index.ts\nvar CompassRoleAri = class _CompassRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleType = opts.resourceIdSegmentValues.roleType;\n  }\n  get roleType() {\n    return this._roleType;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassRoleAriStaticOpts.qualifier,\n      platformQualifier: compassRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: compassRoleAriStaticOpts.resourceOwner,\n      resourceType: compassRoleAriStaticOpts.resourceType,\n      resourceId: `product/${opts.roleType}`,\n      resourceIdSegmentValues: {\n        roleType: opts.roleType\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassRoleAriStaticOpts);\n    return new _CompassRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassRoleAriStaticOpts);\n    return new _CompassRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleType: this.roleType\n    };\n  }\n};\n\n// src/compass/scorecard/types.ts\nvar CompassScorecardAriResourceOwner = \"compass\", CompassScorecardAriResourceType = \"scorecard\";\n\n// src/compass/scorecard/manifest.ts\nvar compassScorecardAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassScorecardAriResourceOwner,\n  resourceType: CompassScorecardAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{scorecardId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    scorecardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/scorecard/index.ts\nvar CompassScorecardAri = class _CompassScorecardAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._scorecardId = opts.resourceIdSegmentValues.scorecardId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get scorecardId() {\n    return this._scorecardId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassScorecardAriStaticOpts.qualifier,\n      platformQualifier: compassScorecardAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassScorecardAriStaticOpts.resourceOwner,\n      resourceType: compassScorecardAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.scorecardId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        scorecardId: opts.scorecardId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassScorecardAriStaticOpts);\n    return new _CompassScorecardAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassScorecardAriStaticOpts);\n    return new _CompassScorecardAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      scorecardId: this.scorecardId\n    };\n  }\n};\n\n// src/compass/site/types.ts\nvar CompassSiteAriResourceOwner = \"compass\", CompassSiteAriResourceType = \"site\";\n\n// src/compass/site/manifest.ts\nvar compassSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: CompassSiteAriResourceOwner,\n  resourceType: CompassSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/site/index.ts\nvar CompassSiteAri = class _CompassSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassSiteAriStaticOpts.qualifier,\n      platformQualifier: compassSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: compassSiteAriStaticOpts.resourceOwner,\n      resourceType: compassSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassSiteAriStaticOpts);\n    return new _CompassSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassSiteAriStaticOpts);\n    return new _CompassSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/compass/user-defined-parameter/types.ts\nvar CompassUserDefinedParameterAriResourceOwner = \"compass\", CompassUserDefinedParameterAriResourceType = \"user-defined-parameter\";\n\n// src/compass/user-defined-parameter/manifest.ts\nvar compassUserDefinedParameterAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassUserDefinedParameterAriResourceOwner,\n  resourceType: CompassUserDefinedParameterAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{userDefinedParameterId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    userDefinedParameterId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/user-defined-parameter/index.ts\nvar CompassUserDefinedParameterAri = class _CompassUserDefinedParameterAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._userDefinedParameterId = opts.resourceIdSegmentValues.userDefinedParameterId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get userDefinedParameterId() {\n    return this._userDefinedParameterId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassUserDefinedParameterAriStaticOpts.qualifier,\n      platformQualifier: compassUserDefinedParameterAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassUserDefinedParameterAriStaticOpts.resourceOwner,\n      resourceType: compassUserDefinedParameterAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.userDefinedParameterId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        userDefinedParameterId: opts.userDefinedParameterId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassUserDefinedParameterAriStaticOpts);\n    return new _CompassUserDefinedParameterAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassUserDefinedParameterAriStaticOpts);\n    return new _CompassUserDefinedParameterAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      userDefinedParameterId: this.userDefinedParameterId\n    };\n  }\n};\n\n// src/compass/webhook/types.ts\nvar CompassWebhookAriResourceOwner = \"compass\", CompassWebhookAriResourceType = \"webhook\";\n\n// src/compass/webhook/manifest.ts\nvar compassWebhookAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassWebhookAriResourceOwner,\n  resourceType: CompassWebhookAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{webhookId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    webhookId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/webhook/index.ts\nvar CompassWebhookAri = class _CompassWebhookAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._webhookId = opts.resourceIdSegmentValues.webhookId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get webhookId() {\n    return this._webhookId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassWebhookAriStaticOpts.qualifier,\n      platformQualifier: compassWebhookAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassWebhookAriStaticOpts.resourceOwner,\n      resourceType: compassWebhookAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.webhookId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        webhookId: opts.webhookId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassWebhookAriStaticOpts);\n    return new _CompassWebhookAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassWebhookAriStaticOpts);\n    return new _CompassWebhookAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      webhookId: this.webhookId\n    };\n  }\n};\n\n// src/compass/workspace/types.ts\nvar CompassWorkspaceAriResourceOwner = \"compass\", CompassWorkspaceAriResourceType = \"workspace\";\n\n// src/compass/workspace/manifest.ts\nvar compassWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: CompassWorkspaceAriResourceOwner,\n  resourceType: CompassWorkspaceAriResourceType,\n  resourceIdSlug: \"{workspaceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/compass/workspace/index.ts\nvar CompassWorkspaceAri = class _CompassWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: compassWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: compassWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: compassWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: compassWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, compassWorkspaceAriStaticOpts);\n    return new _CompassWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, compassWorkspaceAriStaticOpts);\n    return new _CompassWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId\n    };\n  }\n};\n\n// src/confluence/admin-announcement-banner/types.ts\nvar ConfluenceAdminAnnouncementBannerAriResourceOwner = \"confluence\", ConfluenceAdminAnnouncementBannerAriResourceType = \"admin-announcement-banner\";\n\n// src/confluence/admin-announcement-banner/manifest.ts\nvar confluenceAdminAnnouncementBannerAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceAdminAnnouncementBannerAriResourceOwner,\n  resourceType: ConfluenceAdminAnnouncementBannerAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{bannerId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    bannerId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/admin-announcement-banner/index.ts\nvar ConfluenceAdminAnnouncementBannerAri = class _ConfluenceAdminAnnouncementBannerAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._bannerId = opts.resourceIdSegmentValues.bannerId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get bannerId() {\n    return this._bannerId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceAdminAnnouncementBannerAriStaticOpts.qualifier,\n      platformQualifier: confluenceAdminAnnouncementBannerAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceAdminAnnouncementBannerAriStaticOpts.resourceOwner,\n      resourceType: confluenceAdminAnnouncementBannerAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.bannerId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        bannerId: opts.bannerId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceAdminAnnouncementBannerAriStaticOpts);\n    return new _ConfluenceAdminAnnouncementBannerAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceAdminAnnouncementBannerAriStaticOpts);\n    return new _ConfluenceAdminAnnouncementBannerAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      bannerId: this.bannerId\n    };\n  }\n};\n\n// src/confluence/attachment/types.ts\nvar ConfluenceAttachmentAriResourceOwner = \"confluence\", ConfluenceAttachmentAriResourceType = \"attachment\";\n\n// src/confluence/attachment/manifest.ts\nvar confluenceAttachmentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceAttachmentAriResourceOwner,\n  resourceType: ConfluenceAttachmentAriResourceType,\n  resourceIdSlug: \"{attachmentId}\",\n  resourceIdSegmentFormats: {\n    attachmentId: /(att)?[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/attachment/index.ts\nvar ConfluenceAttachmentAri = class _ConfluenceAttachmentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._attachmentId = opts.resourceIdSegmentValues.attachmentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get attachmentId() {\n    return this._attachmentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceAttachmentAriStaticOpts.qualifier,\n      platformQualifier: confluenceAttachmentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceAttachmentAriStaticOpts.resourceOwner,\n      resourceType: confluenceAttachmentAriStaticOpts.resourceType,\n      resourceId: `${opts.attachmentId}`,\n      resourceIdSegmentValues: {\n        attachmentId: opts.attachmentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceAttachmentAriStaticOpts);\n    return new _ConfluenceAttachmentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceAttachmentAriStaticOpts);\n    return new _ConfluenceAttachmentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      attachmentId: this.attachmentId\n    };\n  }\n};\n\n// src/confluence/blogpost/types.ts\nvar ConfluenceBlogpostAriResourceOwner = \"confluence\", ConfluenceBlogpostAriResourceType = \"blogpost\";\n\n// src/confluence/blogpost/manifest.ts\nvar confluenceBlogpostAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceBlogpostAriResourceOwner,\n  resourceType: ConfluenceBlogpostAriResourceType,\n  resourceIdSlug: \"{blogpostId}\",\n  resourceIdSegmentFormats: {\n    blogpostId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/blogpost/index.ts\nvar ConfluenceBlogpostAri = class _ConfluenceBlogpostAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._blogpostId = opts.resourceIdSegmentValues.blogpostId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get blogpostId() {\n    return this._blogpostId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceBlogpostAriStaticOpts.qualifier,\n      platformQualifier: confluenceBlogpostAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceBlogpostAriStaticOpts.resourceOwner,\n      resourceType: confluenceBlogpostAriStaticOpts.resourceType,\n      resourceId: `${opts.blogpostId}`,\n      resourceIdSegmentValues: {\n        blogpostId: opts.blogpostId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceBlogpostAriStaticOpts);\n    return new _ConfluenceBlogpostAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceBlogpostAriStaticOpts);\n    return new _ConfluenceBlogpostAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      blogpostId: this.blogpostId\n    };\n  }\n};\n\n// src/confluence/comment/types.ts\nvar ConfluenceCommentAriResourceOwner = \"confluence\", ConfluenceCommentAriResourceType = \"comment\";\n\n// src/confluence/comment/manifest.ts\nvar confluenceCommentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceCommentAriResourceOwner,\n  resourceType: ConfluenceCommentAriResourceType,\n  resourceIdSlug: \"{commentId}\",\n  resourceIdSegmentFormats: {\n    commentId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/comment/index.ts\nvar ConfluenceCommentAri = class _ConfluenceCommentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._commentId = opts.resourceIdSegmentValues.commentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get commentId() {\n    return this._commentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceCommentAriStaticOpts.qualifier,\n      platformQualifier: confluenceCommentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceCommentAriStaticOpts.resourceOwner,\n      resourceType: confluenceCommentAriStaticOpts.resourceType,\n      resourceId: `${opts.commentId}`,\n      resourceIdSegmentValues: {\n        commentId: opts.commentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceCommentAriStaticOpts);\n    return new _ConfluenceCommentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceCommentAriStaticOpts);\n    return new _ConfluenceCommentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      commentId: this.commentId\n    };\n  }\n};\n\n// src/confluence/content/types.ts\nvar ConfluenceContentAriResourceOwner = \"confluence\", ConfluenceContentAriResourceType = \"content\";\n\n// src/confluence/content/manifest.ts\nvar confluenceContentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceContentAriResourceOwner,\n  resourceType: ConfluenceContentAriResourceType,\n  resourceIdSlug: \"{contentId}\",\n  resourceIdSegmentFormats: {\n    contentId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/content/index.ts\nvar ConfluenceContentAri = class _ConfluenceContentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._contentId = opts.resourceIdSegmentValues.contentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get contentId() {\n    return this._contentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceContentAriStaticOpts.qualifier,\n      platformQualifier: confluenceContentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceContentAriStaticOpts.resourceOwner,\n      resourceType: confluenceContentAriStaticOpts.resourceType,\n      resourceId: `${opts.contentId}`,\n      resourceIdSegmentValues: {\n        contentId: opts.contentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceContentAriStaticOpts);\n    return new _ConfluenceContentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceContentAriStaticOpts);\n    return new _ConfluenceContentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      contentId: this.contentId\n    };\n  }\n};\n\n// src/confluence/database/types.ts\nvar ConfluenceDatabaseAriResourceOwner = \"confluence\", ConfluenceDatabaseAriResourceType = \"database\";\n\n// src/confluence/database/manifest.ts\nvar confluenceDatabaseAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceDatabaseAriResourceOwner,\n  resourceType: ConfluenceDatabaseAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{databaseId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    databaseId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/database/index.ts\nvar ConfluenceDatabaseAri = class _ConfluenceDatabaseAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._databaseId = opts.resourceIdSegmentValues.databaseId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get databaseId() {\n    return this._databaseId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceDatabaseAriStaticOpts.qualifier,\n      platformQualifier: confluenceDatabaseAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceDatabaseAriStaticOpts.resourceOwner,\n      resourceType: confluenceDatabaseAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.databaseId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        databaseId: opts.databaseId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceDatabaseAriStaticOpts);\n    return new _ConfluenceDatabaseAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceDatabaseAriStaticOpts);\n    return new _ConfluenceDatabaseAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      databaseId: this.databaseId\n    };\n  }\n};\n\n// src/confluence/embed/types.ts\nvar ConfluenceEmbedAriResourceOwner = \"confluence\", ConfluenceEmbedAriResourceType = \"embed\";\n\n// src/confluence/embed/manifest.ts\nvar confluenceEmbedAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceEmbedAriResourceOwner,\n  resourceType: ConfluenceEmbedAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{embedId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    embedId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/embed/index.ts\nvar ConfluenceEmbedAri = class _ConfluenceEmbedAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._embedId = opts.resourceIdSegmentValues.embedId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get embedId() {\n    return this._embedId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceEmbedAriStaticOpts.qualifier,\n      platformQualifier: confluenceEmbedAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceEmbedAriStaticOpts.resourceOwner,\n      resourceType: confluenceEmbedAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.embedId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        embedId: opts.embedId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceEmbedAriStaticOpts);\n    return new _ConfluenceEmbedAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceEmbedAriStaticOpts);\n    return new _ConfluenceEmbedAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      embedId: this.embedId\n    };\n  }\n};\n\n// src/confluence/event/types.ts\nvar ConfluenceEventAriResourceOwner = \"confluence\", ConfluenceEventAriResourceType = \"event\";\n\n// src/confluence/event/manifest.ts\nvar confluenceEventAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceEventAriResourceOwner,\n  resourceType: ConfluenceEventAriResourceType,\n  resourceIdSlug: \"{eventType}/activation/{activationId}/event/{eventId}\",\n  resourceIdSegmentFormats: {\n    eventType: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    eventId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/event/index.ts\nvar ConfluenceEventAri = class _ConfluenceEventAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._eventType = opts.resourceIdSegmentValues.eventType, this._activationId = opts.resourceIdSegmentValues.activationId, this._eventId = opts.resourceIdSegmentValues.eventId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get eventType() {\n    return this._eventType;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get eventId() {\n    return this._eventId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceEventAriStaticOpts.qualifier,\n      platformQualifier: confluenceEventAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceEventAriStaticOpts.resourceOwner,\n      resourceType: confluenceEventAriStaticOpts.resourceType,\n      resourceId: `${opts.eventType}/activation/${opts.activationId}/event/${opts.eventId}`,\n      resourceIdSegmentValues: {\n        eventType: opts.eventType,\n        activationId: opts.activationId,\n        eventId: opts.eventId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceEventAriStaticOpts);\n    return new _ConfluenceEventAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceEventAriStaticOpts);\n    return new _ConfluenceEventAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      eventType: this.eventType,\n      activationId: this.activationId,\n      eventId: this.eventId\n    };\n  }\n};\n\n// src/confluence/folder/types.ts\nvar ConfluenceFolderAriResourceOwner = \"confluence\", ConfluenceFolderAriResourceType = \"folder\";\n\n// src/confluence/folder/manifest.ts\nvar confluenceFolderAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceFolderAriResourceOwner,\n  resourceType: ConfluenceFolderAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{folderId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    folderId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/folder/index.ts\nvar ConfluenceFolderAri = class _ConfluenceFolderAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._folderId = opts.resourceIdSegmentValues.folderId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get folderId() {\n    return this._folderId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceFolderAriStaticOpts.qualifier,\n      platformQualifier: confluenceFolderAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceFolderAriStaticOpts.resourceOwner,\n      resourceType: confluenceFolderAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.folderId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        folderId: opts.folderId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceFolderAriStaticOpts);\n    return new _ConfluenceFolderAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceFolderAriStaticOpts);\n    return new _ConfluenceFolderAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      folderId: this.folderId\n    };\n  }\n};\n\n// src/confluence/long-running-task/types.ts\nvar ConfluenceLongRunningTaskAriResourceOwner = \"confluence\", ConfluenceLongRunningTaskAriResourceType = \"long-running-task\";\n\n// src/confluence/long-running-task/manifest.ts\nvar confluenceLongRunningTaskAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceLongRunningTaskAriResourceOwner,\n  resourceType: ConfluenceLongRunningTaskAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{taskId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    taskId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/long-running-task/index.ts\nvar ConfluenceLongRunningTaskAri = class _ConfluenceLongRunningTaskAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._taskId = opts.resourceIdSegmentValues.taskId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get taskId() {\n    return this._taskId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceLongRunningTaskAriStaticOpts.qualifier,\n      platformQualifier: confluenceLongRunningTaskAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceLongRunningTaskAriStaticOpts.resourceOwner,\n      resourceType: confluenceLongRunningTaskAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.taskId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        taskId: opts.taskId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceLongRunningTaskAriStaticOpts);\n    return new _ConfluenceLongRunningTaskAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceLongRunningTaskAriStaticOpts);\n    return new _ConfluenceLongRunningTaskAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      taskId: this.taskId\n    };\n  }\n};\n\n// src/confluence/note/types.ts\nvar ConfluenceNoteAriResourceOwner = \"confluence\", ConfluenceNoteAriResourceType = \"note\";\n\n// src/confluence/note/manifest.ts\nvar confluenceNoteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceNoteAriResourceOwner,\n  resourceType: ConfluenceNoteAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{noteId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    noteId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/note/index.ts\nvar ConfluenceNoteAri = class _ConfluenceNoteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._noteId = opts.resourceIdSegmentValues.noteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get noteId() {\n    return this._noteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceNoteAriStaticOpts.qualifier,\n      platformQualifier: confluenceNoteAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceNoteAriStaticOpts.resourceOwner,\n      resourceType: confluenceNoteAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.noteId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        noteId: opts.noteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceNoteAriStaticOpts);\n    return new _ConfluenceNoteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceNoteAriStaticOpts);\n    return new _ConfluenceNoteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      noteId: this.noteId\n    };\n  }\n};\n\n// src/confluence/page/types.ts\nvar ConfluencePageAriResourceOwner = \"confluence\", ConfluencePageAriResourceType = \"page\";\n\n// src/confluence/page/manifest.ts\nvar confluencePageAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluencePageAriResourceOwner,\n  resourceType: ConfluencePageAriResourceType,\n  resourceIdSlug: \"{pageId}\",\n  resourceIdSegmentFormats: {\n    pageId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/page/index.ts\nvar ConfluencePageAri = class _ConfluencePageAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._pageId = opts.resourceIdSegmentValues.pageId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get pageId() {\n    return this._pageId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluencePageAriStaticOpts.qualifier,\n      platformQualifier: confluencePageAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluencePageAriStaticOpts.resourceOwner,\n      resourceType: confluencePageAriStaticOpts.resourceType,\n      resourceId: `${opts.pageId}`,\n      resourceIdSegmentValues: {\n        pageId: opts.pageId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluencePageAriStaticOpts);\n    return new _ConfluencePageAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluencePageAriStaticOpts);\n    return new _ConfluencePageAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      pageId: this.pageId\n    };\n  }\n};\n\n// src/confluence/public-link/types.ts\nvar ConfluencePublicLinkAriResourceOwner = \"confluence\", ConfluencePublicLinkAriResourceType = \"public-link\";\n\n// src/confluence/public-link/manifest.ts\nvar confluencePublicLinkAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluencePublicLinkAriResourceOwner,\n  resourceType: ConfluencePublicLinkAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{publicLinkId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    publicLinkId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/public-link/index.ts\nvar ConfluencePublicLinkAri = class _ConfluencePublicLinkAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._publicLinkId = opts.resourceIdSegmentValues.publicLinkId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get publicLinkId() {\n    return this._publicLinkId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluencePublicLinkAriStaticOpts.qualifier,\n      platformQualifier: confluencePublicLinkAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluencePublicLinkAriStaticOpts.resourceOwner,\n      resourceType: confluencePublicLinkAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.publicLinkId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        publicLinkId: opts.publicLinkId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluencePublicLinkAriStaticOpts);\n    return new _ConfluencePublicLinkAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluencePublicLinkAriStaticOpts);\n    return new _ConfluencePublicLinkAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      publicLinkId: this.publicLinkId\n    };\n  }\n};\n\n// src/confluence/role/types.ts\nvar ConfluenceRoleAriResourceOwner = \"confluence\", ConfluenceRoleAriResourceType = \"role\";\n\n// src/confluence/role/manifest.ts\nvar confluenceRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]*$\"),\n  resourceOwner: ConfluenceRoleAriResourceOwner,\n  resourceType: ConfluenceRoleAriResourceType,\n  resourceIdSlug: \"{roleId}\",\n  resourceIdSegmentFormats: {\n    roleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/role/index.ts\nvar ConfluenceRoleAri = class _ConfluenceRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._optionalSiteId = opts.cloudId || \"\", this._roleId = opts.resourceIdSegmentValues.roleId;\n  }\n  get optionalSiteId() {\n    return this._optionalSiteId;\n  }\n  get roleId() {\n    return this._roleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceRoleAriStaticOpts.qualifier,\n      platformQualifier: confluenceRoleAriStaticOpts.platformQualifier,\n      cloudId: opts.optionalSiteId,\n      resourceOwner: confluenceRoleAriStaticOpts.resourceOwner,\n      resourceType: confluenceRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.roleId}`,\n      resourceIdSegmentValues: {\n        roleId: opts.roleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceRoleAriStaticOpts);\n    return new _ConfluenceRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceRoleAriStaticOpts);\n    return new _ConfluenceRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      optionalSiteId: this.optionalSiteId,\n      roleId: this.roleId\n    };\n  }\n};\n\n// src/confluence/site/types.ts\nvar ConfluenceSiteAriResourceOwner = \"confluence\", ConfluenceSiteAriResourceType = \"site\";\n\n// src/confluence/site/manifest.ts\nvar confluenceSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: ConfluenceSiteAriResourceOwner,\n  resourceType: ConfluenceSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/site/index.ts\nvar ConfluenceSiteAri = class _ConfluenceSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceSiteAriStaticOpts.qualifier,\n      platformQualifier: confluenceSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: confluenceSiteAriStaticOpts.resourceOwner,\n      resourceType: confluenceSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceSiteAriStaticOpts);\n    return new _ConfluenceSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceSiteAriStaticOpts);\n    return new _ConfluenceSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/confluence/space/types.ts\nvar ConfluenceSpaceAriResourceOwner = \"confluence\", ConfluenceSpaceAriResourceType = \"space\";\n\n// src/confluence/space/manifest.ts\nvar confluenceSpaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceSpaceAriResourceOwner,\n  resourceType: ConfluenceSpaceAriResourceType,\n  resourceIdSlug: \"{spaceId}\",\n  resourceIdSegmentFormats: {\n    spaceId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/space/index.ts\nvar ConfluenceSpaceAri = class _ConfluenceSpaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._spaceId = opts.resourceIdSegmentValues.spaceId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get spaceId() {\n    return this._spaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceSpaceAriStaticOpts.qualifier,\n      platformQualifier: confluenceSpaceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceSpaceAriStaticOpts.resourceOwner,\n      resourceType: confluenceSpaceAriStaticOpts.resourceType,\n      resourceId: `${opts.spaceId}`,\n      resourceIdSegmentValues: {\n        spaceId: opts.spaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceSpaceAriStaticOpts);\n    return new _ConfluenceSpaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceSpaceAriStaticOpts);\n    return new _ConfluenceSpaceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      spaceId: this.spaceId\n    };\n  }\n};\n\n// src/confluence/task/types.ts\nvar ConfluenceTaskAriResourceOwner = \"confluence\", ConfluenceTaskAriResourceType = \"task\";\n\n// src/confluence/task/manifest.ts\nvar confluenceTaskAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceTaskAriResourceOwner,\n  resourceType: ConfluenceTaskAriResourceType,\n  resourceIdSlug: \"{taskId}\",\n  resourceIdSegmentFormats: {\n    taskId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/task/index.ts\nvar ConfluenceTaskAri = class _ConfluenceTaskAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._taskId = opts.resourceIdSegmentValues.taskId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get taskId() {\n    return this._taskId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceTaskAriStaticOpts.qualifier,\n      platformQualifier: confluenceTaskAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceTaskAriStaticOpts.resourceOwner,\n      resourceType: confluenceTaskAriStaticOpts.resourceType,\n      resourceId: `${opts.taskId}`,\n      resourceIdSegmentValues: {\n        taskId: opts.taskId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceTaskAriStaticOpts);\n    return new _ConfluenceTaskAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceTaskAriStaticOpts);\n    return new _ConfluenceTaskAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      taskId: this.taskId\n    };\n  }\n};\n\n// src/confluence/team-calendar/types.ts\nvar ConfluenceTeamCalendarAriResourceOwner = \"confluence\", ConfluenceTeamCalendarAriResourceType = \"team-calendar\";\n\n// src/confluence/team-calendar/manifest.ts\nvar confluenceTeamCalendarAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceTeamCalendarAriResourceOwner,\n  resourceType: ConfluenceTeamCalendarAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{calendarId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    calendarId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/team-calendar/index.ts\nvar ConfluenceTeamCalendarAri = class _ConfluenceTeamCalendarAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._calendarId = opts.resourceIdSegmentValues.calendarId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get calendarId() {\n    return this._calendarId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceTeamCalendarAriStaticOpts.qualifier,\n      platformQualifier: confluenceTeamCalendarAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceTeamCalendarAriStaticOpts.resourceOwner,\n      resourceType: confluenceTeamCalendarAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.calendarId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        calendarId: opts.calendarId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceTeamCalendarAriStaticOpts);\n    return new _ConfluenceTeamCalendarAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceTeamCalendarAriStaticOpts);\n    return new _ConfluenceTeamCalendarAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      calendarId: this.calendarId\n    };\n  }\n};\n\n// src/confluence/user-property/types.ts\nvar ConfluenceUserPropertyAriResourceOwner = \"confluence\", ConfluenceUserPropertyAriResourceType = \"user-property\";\n\n// src/confluence/user-property/manifest.ts\nvar confluenceUserPropertyAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceUserPropertyAriResourceOwner,\n  resourceType: ConfluenceUserPropertyAriResourceType,\n  resourceIdSlug: \"{userPropertyId}\",\n  resourceIdSegmentFormats: {\n    userPropertyId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/user-property/index.ts\nvar ConfluenceUserPropertyAri = class _ConfluenceUserPropertyAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._userPropertyId = opts.resourceIdSegmentValues.userPropertyId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get userPropertyId() {\n    return this._userPropertyId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceUserPropertyAriStaticOpts.qualifier,\n      platformQualifier: confluenceUserPropertyAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceUserPropertyAriStaticOpts.resourceOwner,\n      resourceType: confluenceUserPropertyAriStaticOpts.resourceType,\n      resourceId: `${opts.userPropertyId}`,\n      resourceIdSegmentValues: {\n        userPropertyId: opts.userPropertyId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceUserPropertyAriStaticOpts);\n    return new _ConfluenceUserPropertyAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceUserPropertyAriStaticOpts);\n    return new _ConfluenceUserPropertyAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      userPropertyId: this.userPropertyId\n    };\n  }\n};\n\n// src/confluence/whiteboard/types.ts\nvar ConfluenceWhiteboardAriResourceOwner = \"confluence\", ConfluenceWhiteboardAriResourceType = \"whiteboard\";\n\n// src/confluence/whiteboard/manifest.ts\nvar confluenceWhiteboardAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceWhiteboardAriResourceOwner,\n  resourceType: ConfluenceWhiteboardAriResourceType,\n  resourceIdSlug: \"{whiteboardId}\",\n  resourceIdSegmentFormats: {\n    whiteboardId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/whiteboard/index.ts\nvar ConfluenceWhiteboardAri = class _ConfluenceWhiteboardAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._whiteboardId = opts.resourceIdSegmentValues.whiteboardId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get whiteboardId() {\n    return this._whiteboardId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceWhiteboardAriStaticOpts.qualifier,\n      platformQualifier: confluenceWhiteboardAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceWhiteboardAriStaticOpts.resourceOwner,\n      resourceType: confluenceWhiteboardAriStaticOpts.resourceType,\n      resourceId: `${opts.whiteboardId}`,\n      resourceIdSegmentValues: {\n        whiteboardId: opts.whiteboardId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceWhiteboardAriStaticOpts);\n    return new _ConfluenceWhiteboardAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceWhiteboardAriStaticOpts);\n    return new _ConfluenceWhiteboardAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      whiteboardId: this.whiteboardId\n    };\n  }\n};\n\n// src/confluence/workspace/types.ts\nvar ConfluenceWorkspaceAriResourceOwner = \"confluence\", ConfluenceWorkspaceAriResourceType = \"workspace\";\n\n// src/confluence/workspace/manifest.ts\nvar confluenceWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConfluenceWorkspaceAriResourceOwner,\n  resourceType: ConfluenceWorkspaceAriResourceType,\n  resourceIdSlug: \"{activationId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/confluence/workspace/index.ts\nvar ConfluenceWorkspaceAri = class _ConfluenceWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: confluenceWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: confluenceWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: confluenceWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: confluenceWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, confluenceWorkspaceAriStaticOpts);\n    return new _ConfluenceWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, confluenceWorkspaceAriStaticOpts);\n    return new _ConfluenceWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId\n    };\n  }\n};\n\n// src/connection-registry/link/types.ts\nvar ConnectionRegistryLinkAriResourceOwner = \"connection-registry\", ConnectionRegistryLinkAriResourceType = \"link\";\n\n// src/connection-registry/link/manifest.ts\nvar connectionRegistryLinkAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: ConnectionRegistryLinkAriResourceOwner,\n  resourceType: ConnectionRegistryLinkAriResourceType,\n  resourceIdSlug: \"{linkId}\",\n  resourceIdSegmentFormats: {\n    linkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/connection-registry/link/index.ts\nvar ConnectionRegistryLinkAri = class _ConnectionRegistryLinkAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._linkId = opts.resourceIdSegmentValues.linkId;\n  }\n  get linkId() {\n    return this._linkId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: connectionRegistryLinkAriStaticOpts.qualifier,\n      platformQualifier: connectionRegistryLinkAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: connectionRegistryLinkAriStaticOpts.resourceOwner,\n      resourceType: connectionRegistryLinkAriStaticOpts.resourceType,\n      resourceId: `${opts.linkId}`,\n      resourceIdSegmentValues: {\n        linkId: opts.linkId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, connectionRegistryLinkAriStaticOpts);\n    return new _ConnectionRegistryLinkAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, connectionRegistryLinkAriStaticOpts);\n    return new _ConnectionRegistryLinkAri(opts);\n  }\n  getVariables() {\n    return {\n      linkId: this.linkId\n    };\n  }\n};\n\n// src/conversational-help/conversation/types.ts\nvar ConversationalHelpConversationAriResourceOwner = \"conversational-help\", ConversationalHelpConversationAriResourceType = \"conversation\";\n\n// src/conversational-help/conversation/manifest.ts\nvar conversationalHelpConversationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConversationalHelpConversationAriResourceOwner,\n  resourceType: ConversationalHelpConversationAriResourceType,\n  resourceIdSlug: \"{conversationId}\",\n  resourceIdSegmentFormats: {\n    conversationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/conversational-help/conversation/index.ts\nvar ConversationalHelpConversationAri = class _ConversationalHelpConversationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._conversationId = opts.resourceIdSegmentValues.conversationId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get conversationId() {\n    return this._conversationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: conversationalHelpConversationAriStaticOpts.qualifier,\n      platformQualifier: conversationalHelpConversationAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: conversationalHelpConversationAriStaticOpts.resourceOwner,\n      resourceType: conversationalHelpConversationAriStaticOpts.resourceType,\n      resourceId: `${opts.conversationId}`,\n      resourceIdSegmentValues: {\n        conversationId: opts.conversationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, conversationalHelpConversationAriStaticOpts);\n    return new _ConversationalHelpConversationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, conversationalHelpConversationAriStaticOpts);\n    return new _ConversationalHelpConversationAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      conversationId: this.conversationId\n    };\n  }\n};\n\n// src/conversational-help/conversation-message/types.ts\nvar ConversationalHelpConversationMessageAriResourceOwner = \"conversational-help\", ConversationalHelpConversationMessageAriResourceType = \"conversation-message\";\n\n// src/conversational-help/conversation-message/manifest.ts\nvar conversationalHelpConversationMessageAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: ConversationalHelpConversationMessageAriResourceOwner,\n  resourceType: ConversationalHelpConversationMessageAriResourceType,\n  resourceIdSlug: \"{conversationMessageId}\",\n  resourceIdSegmentFormats: {\n    conversationMessageId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/conversational-help/conversation-message/index.ts\nvar ConversationalHelpConversationMessageAri = class _ConversationalHelpConversationMessageAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._conversationMessageId = opts.resourceIdSegmentValues.conversationMessageId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get conversationMessageId() {\n    return this._conversationMessageId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: conversationalHelpConversationMessageAriStaticOpts.qualifier,\n      platformQualifier: conversationalHelpConversationMessageAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: conversationalHelpConversationMessageAriStaticOpts.resourceOwner,\n      resourceType: conversationalHelpConversationMessageAriStaticOpts.resourceType,\n      resourceId: `${opts.conversationMessageId}`,\n      resourceIdSegmentValues: {\n        conversationMessageId: opts.conversationMessageId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, conversationalHelpConversationMessageAriStaticOpts);\n    return new _ConversationalHelpConversationMessageAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, conversationalHelpConversationMessageAriStaticOpts);\n    return new _ConversationalHelpConversationMessageAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      conversationMessageId: this.conversationMessageId\n    };\n  }\n};\n\n// src/data-lake/lake-connection/types.ts\nvar DataLakeLakeConnectionAriResourceOwner = \"data-lake\", DataLakeLakeConnectionAriResourceType = \"lake-connection\";\n\n// src/data-lake/lake-connection/manifest.ts\nvar dataLakeLakeConnectionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: DataLakeLakeConnectionAriResourceOwner,\n  resourceType: DataLakeLakeConnectionAriResourceType,\n  resourceIdSlug: \"{lakeConnectionId}\",\n  resourceIdSegmentFormats: {\n    lakeConnectionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/data-lake/lake-connection/index.ts\nvar DataLakeLakeConnectionAri = class _DataLakeLakeConnectionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._lakeConnectionId = opts.resourceIdSegmentValues.lakeConnectionId;\n  }\n  get lakeConnectionId() {\n    return this._lakeConnectionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: dataLakeLakeConnectionAriStaticOpts.qualifier,\n      platformQualifier: dataLakeLakeConnectionAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: dataLakeLakeConnectionAriStaticOpts.resourceOwner,\n      resourceType: dataLakeLakeConnectionAriStaticOpts.resourceType,\n      resourceId: `${opts.lakeConnectionId}`,\n      resourceIdSegmentValues: {\n        lakeConnectionId: opts.lakeConnectionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, dataLakeLakeConnectionAriStaticOpts);\n    return new _DataLakeLakeConnectionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, dataLakeLakeConnectionAriStaticOpts);\n    return new _DataLakeLakeConnectionAri(opts);\n  }\n  getVariables() {\n    return {\n      lakeConnectionId: this.lakeConnectionId\n    };\n  }\n};\n\n// src/devops/container/types.ts\nvar DevopsContainerAriResourceOwner = \"devops\", DevopsContainerAriResourceType = \"container\";\n\n// src/devops/container/manifest.ts\nvar devopsContainerAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: DevopsContainerAriResourceOwner,\n  resourceType: DevopsContainerAriResourceType,\n  resourceIdSlug: \"{containerId}\",\n  resourceIdSegmentFormats: {\n    containerId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/devops/container/index.ts\nvar DevopsContainerAri = class _DevopsContainerAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._containerId = opts.resourceIdSegmentValues.containerId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get containerId() {\n    return this._containerId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: devopsContainerAriStaticOpts.qualifier,\n      platformQualifier: devopsContainerAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: devopsContainerAriStaticOpts.resourceOwner,\n      resourceType: devopsContainerAriStaticOpts.resourceType,\n      resourceId: `${opts.containerId}`,\n      resourceIdSegmentValues: {\n        containerId: opts.containerId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, devopsContainerAriStaticOpts);\n    return new _DevopsContainerAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, devopsContainerAriStaticOpts);\n    return new _DevopsContainerAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      containerId: this.containerId\n    };\n  }\n};\n\n// src/devops/namespace/types.ts\nvar DevopsNamespaceAriResourceOwner = \"devops\", DevopsNamespaceAriResourceType = \"namespace\";\n\n// src/devops/namespace/manifest.ts\nvar devopsNamespaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: DevopsNamespaceAriResourceOwner,\n  resourceType: DevopsNamespaceAriResourceType,\n  resourceIdSlug: \"{namespaceId}\",\n  resourceIdSegmentFormats: {\n    namespaceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/devops/namespace/index.ts\nvar DevopsNamespaceAri = class _DevopsNamespaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._namespaceId = opts.resourceIdSegmentValues.namespaceId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get namespaceId() {\n    return this._namespaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: devopsNamespaceAriStaticOpts.qualifier,\n      platformQualifier: devopsNamespaceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: devopsNamespaceAriStaticOpts.resourceOwner,\n      resourceType: devopsNamespaceAriStaticOpts.resourceType,\n      resourceId: `${opts.namespaceId}`,\n      resourceIdSegmentValues: {\n        namespaceId: opts.namespaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, devopsNamespaceAriStaticOpts);\n    return new _DevopsNamespaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, devopsNamespaceAriStaticOpts);\n    return new _DevopsNamespaceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      namespaceId: this.namespaceId\n    };\n  }\n};\n\n// src/devops/provider/types.ts\nvar DevopsProviderAriResourceOwner = \"devops\", DevopsProviderAriResourceType = \"provider\";\n\n// src/devops/provider/manifest.ts\nvar devopsProviderAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: DevopsProviderAriResourceOwner,\n  resourceType: DevopsProviderAriResourceType,\n  resourceIdSlug: \"{providerNamespace}/{providerAppId}\",\n  resourceIdSegmentFormats: {\n    providerNamespace: /(classic|forge|asap|oauth)/,\n    // eslint-disable-line no-useless-escape\n    providerAppId: /[a-zA-Z0-9-._]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/devops/provider/index.ts\nvar DevopsProviderAri = class _DevopsProviderAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._providerNamespace = opts.resourceIdSegmentValues.providerNamespace, this._providerAppId = opts.resourceIdSegmentValues.providerAppId;\n  }\n  get providerNamespace() {\n    return this._providerNamespace;\n  }\n  get providerAppId() {\n    return this._providerAppId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: devopsProviderAriStaticOpts.qualifier,\n      platformQualifier: devopsProviderAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: devopsProviderAriStaticOpts.resourceOwner,\n      resourceType: devopsProviderAriStaticOpts.resourceType,\n      resourceId: `${opts.providerNamespace}/${opts.providerAppId}`,\n      resourceIdSegmentValues: {\n        providerNamespace: opts.providerNamespace,\n        providerAppId: opts.providerAppId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, devopsProviderAriStaticOpts);\n    return new _DevopsProviderAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, devopsProviderAriStaticOpts);\n    return new _DevopsProviderAri(opts);\n  }\n  getVariables() {\n    return {\n      providerNamespace: this.providerNamespace,\n      providerAppId: this.providerAppId\n    };\n  }\n};\n\n// src/devops/relationship/types.ts\nvar DevopsRelationshipAriResourceOwner = \"devops\", DevopsRelationshipAriResourceType = \"relationship\";\n\n// src/devops/relationship/manifest.ts\nvar devopsRelationshipAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: DevopsRelationshipAriResourceOwner,\n  resourceType: DevopsRelationshipAriResourceType,\n  resourceIdSlug: \"{relationshipId}\",\n  resourceIdSegmentFormats: {\n    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/devops/relationship/index.ts\nvar DevopsRelationshipAri = class _DevopsRelationshipAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._relationshipId = opts.resourceIdSegmentValues.relationshipId;\n  }\n  get relationshipId() {\n    return this._relationshipId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: devopsRelationshipAriStaticOpts.qualifier,\n      platformQualifier: devopsRelationshipAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: devopsRelationshipAriStaticOpts.resourceOwner,\n      resourceType: devopsRelationshipAriStaticOpts.resourceType,\n      resourceId: `${opts.relationshipId}`,\n      resourceIdSegmentValues: {\n        relationshipId: opts.relationshipId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, devopsRelationshipAriStaticOpts);\n    return new _DevopsRelationshipAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, devopsRelationshipAriStaticOpts);\n    return new _DevopsRelationshipAri(opts);\n  }\n  getVariables() {\n    return {\n      relationshipId: this.relationshipId\n    };\n  }\n};\n\n// src/devops/tool/types.ts\nvar DevopsToolAriResourceOwner = \"devops\", DevopsToolAriResourceType = \"tool\";\n\n// src/devops/tool/manifest.ts\nvar devopsToolAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: DevopsToolAriResourceOwner,\n  resourceType: DevopsToolAriResourceType,\n  resourceIdSlug: \"{toolId}\",\n  resourceIdSegmentFormats: {\n    toolId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/devops/tool/index.ts\nvar DevopsToolAri = class _DevopsToolAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._toolId = opts.resourceIdSegmentValues.toolId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get toolId() {\n    return this._toolId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: devopsToolAriStaticOpts.qualifier,\n      platformQualifier: devopsToolAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: devopsToolAriStaticOpts.resourceOwner,\n      resourceType: devopsToolAriStaticOpts.resourceType,\n      resourceId: `${opts.toolId}`,\n      resourceIdSegmentValues: {\n        toolId: opts.toolId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, devopsToolAriStaticOpts);\n    return new _DevopsToolAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, devopsToolAriStaticOpts);\n    return new _DevopsToolAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      toolId: this.toolId\n    };\n  }\n};\n\n// src/ecosystem/app/types.ts\nvar EcosystemAppAriResourceOwner = \"ecosystem\", EcosystemAppAriResourceType = \"app\";\n\n// src/ecosystem/app/manifest.ts\nvar ecosystemAppAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: EcosystemAppAriResourceOwner,\n  resourceType: EcosystemAppAriResourceType,\n  resourceIdSlug: \"{appId}\",\n  resourceIdSegmentFormats: {\n    appId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/ecosystem/app/index.ts\nvar EcosystemAppAri = class _EcosystemAppAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._appId = opts.resourceIdSegmentValues.appId;\n  }\n  get appId() {\n    return this._appId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: ecosystemAppAriStaticOpts.qualifier,\n      platformQualifier: ecosystemAppAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: ecosystemAppAriStaticOpts.resourceOwner,\n      resourceType: ecosystemAppAriStaticOpts.resourceType,\n      resourceId: `${opts.appId}`,\n      resourceIdSegmentValues: {\n        appId: opts.appId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemAppAriStaticOpts);\n    return new _EcosystemAppAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, ecosystemAppAriStaticOpts);\n    return new _EcosystemAppAri(opts);\n  }\n  getVariables() {\n    return {\n      appId: this.appId\n    };\n  }\n};\n\n// src/ecosystem/app-environment-version/types.ts\nvar EcosystemAppEnvironmentVersionAriResourceOwner = \"ecosystem\", EcosystemAppEnvironmentVersionAriResourceType = \"app-environment-version\";\n\n// src/ecosystem/app-environment-version/manifest.ts\nvar ecosystemAppEnvironmentVersionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: EcosystemAppEnvironmentVersionAriResourceOwner,\n  resourceType: EcosystemAppEnvironmentVersionAriResourceType,\n  resourceIdSlug: \"{appId}/{environmentId}/{versionId}\",\n  resourceIdSegmentFormats: {\n    appId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    environmentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    versionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/ecosystem/app-environment-version/index.ts\nvar EcosystemAppEnvironmentVersionAri = class _EcosystemAppEnvironmentVersionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._appId = opts.resourceIdSegmentValues.appId, this._environmentId = opts.resourceIdSegmentValues.environmentId, this._versionId = opts.resourceIdSegmentValues.versionId;\n  }\n  get appId() {\n    return this._appId;\n  }\n  get environmentId() {\n    return this._environmentId;\n  }\n  get versionId() {\n    return this._versionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: ecosystemAppEnvironmentVersionAriStaticOpts.qualifier,\n      platformQualifier: ecosystemAppEnvironmentVersionAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: ecosystemAppEnvironmentVersionAriStaticOpts.resourceOwner,\n      resourceType: ecosystemAppEnvironmentVersionAriStaticOpts.resourceType,\n      resourceId: `${opts.appId}/${opts.environmentId}/${opts.versionId}`,\n      resourceIdSegmentValues: {\n        appId: opts.appId,\n        environmentId: opts.environmentId,\n        versionId: opts.versionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemAppEnvironmentVersionAriStaticOpts);\n    return new _EcosystemAppEnvironmentVersionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, ecosystemAppEnvironmentVersionAriStaticOpts);\n    return new _EcosystemAppEnvironmentVersionAri(opts);\n  }\n  getVariables() {\n    return {\n      appId: this.appId,\n      environmentId: this.environmentId,\n      versionId: this.versionId\n    };\n  }\n};\n\n// src/ecosystem/connect-app/types.ts\nvar EcosystemConnectAppAriResourceOwner = \"ecosystem\", EcosystemConnectAppAriResourceType = \"connect-app\";\n\n// src/ecosystem/connect-app/manifest.ts\nvar ecosystemConnectAppAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: EcosystemConnectAppAriResourceOwner,\n  resourceType: EcosystemConnectAppAriResourceType,\n  resourceIdSlug: \"{appKey}\",\n  resourceIdSegmentFormats: {\n    appKey: /[a-zA-Z0-9-._]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/ecosystem/connect-app/index.ts\nvar EcosystemConnectAppAri = class _EcosystemConnectAppAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._appKey = opts.resourceIdSegmentValues.appKey;\n  }\n  get appKey() {\n    return this._appKey;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: ecosystemConnectAppAriStaticOpts.qualifier,\n      platformQualifier: ecosystemConnectAppAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: ecosystemConnectAppAriStaticOpts.resourceOwner,\n      resourceType: ecosystemConnectAppAriStaticOpts.resourceType,\n      resourceId: `${opts.appKey}`,\n      resourceIdSegmentValues: {\n        appKey: opts.appKey\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemConnectAppAriStaticOpts);\n    return new _EcosystemConnectAppAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, ecosystemConnectAppAriStaticOpts);\n    return new _EcosystemConnectAppAri(opts);\n  }\n  getVariables() {\n    return {\n      appKey: this.appKey\n    };\n  }\n};\n\n// src/ecosystem/environment/types.ts\nvar EcosystemEnvironmentAriResourceOwner = \"ecosystem\", EcosystemEnvironmentAriResourceType = \"environment\";\n\n// src/ecosystem/environment/manifest.ts\nvar ecosystemEnvironmentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: EcosystemEnvironmentAriResourceOwner,\n  resourceType: EcosystemEnvironmentAriResourceType,\n  resourceIdSlug: \"{appId}/{environmentId}\",\n  resourceIdSegmentFormats: {\n    appId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    environmentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/ecosystem/environment/index.ts\nvar EcosystemEnvironmentAri = class _EcosystemEnvironmentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._appId = opts.resourceIdSegmentValues.appId, this._environmentId = opts.resourceIdSegmentValues.environmentId;\n  }\n  get appId() {\n    return this._appId;\n  }\n  get environmentId() {\n    return this._environmentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: ecosystemEnvironmentAriStaticOpts.qualifier,\n      platformQualifier: ecosystemEnvironmentAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: ecosystemEnvironmentAriStaticOpts.resourceOwner,\n      resourceType: ecosystemEnvironmentAriStaticOpts.resourceType,\n      resourceId: `${opts.appId}/${opts.environmentId}`,\n      resourceIdSegmentValues: {\n        appId: opts.appId,\n        environmentId: opts.environmentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemEnvironmentAriStaticOpts);\n    return new _EcosystemEnvironmentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, ecosystemEnvironmentAriStaticOpts);\n    return new _EcosystemEnvironmentAri(opts);\n  }\n  getVariables() {\n    return {\n      appId: this.appId,\n      environmentId: this.environmentId\n    };\n  }\n};\n\n// src/ecosystem/extension/types.ts\nvar EcosystemExtensionAriResourceOwner = \"ecosystem\", EcosystemExtensionAriResourceType = \"extension\";\n\n// src/ecosystem/extension/manifest.ts\nvar ecosystemExtensionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: EcosystemExtensionAriResourceOwner,\n  resourceType: EcosystemExtensionAriResourceType,\n  resourceIdSlug: \"{appId}/{environmentId}/{groupId}/{extensionKey}\",\n  resourceIdSegmentFormats: {\n    appId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    environmentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    groupId: /([0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}|static)/,\n    // eslint-disable-line no-useless-escape\n    extensionKey: /[a-zA-Z0-9-._]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/ecosystem/extension/index.ts\nvar EcosystemExtensionAri = class _EcosystemExtensionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._appId = opts.resourceIdSegmentValues.appId, this._environmentId = opts.resourceIdSegmentValues.environmentId, this._groupId = opts.resourceIdSegmentValues.groupId, this._extensionKey = opts.resourceIdSegmentValues.extensionKey;\n  }\n  get appId() {\n    return this._appId;\n  }\n  get environmentId() {\n    return this._environmentId;\n  }\n  get groupId() {\n    return this._groupId;\n  }\n  get extensionKey() {\n    return this._extensionKey;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: ecosystemExtensionAriStaticOpts.qualifier,\n      platformQualifier: ecosystemExtensionAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: ecosystemExtensionAriStaticOpts.resourceOwner,\n      resourceType: ecosystemExtensionAriStaticOpts.resourceType,\n      resourceId: `${opts.appId}/${opts.environmentId}/${opts.groupId}/${opts.extensionKey}`,\n      resourceIdSegmentValues: {\n        appId: opts.appId,\n        environmentId: opts.environmentId,\n        groupId: opts.groupId,\n        extensionKey: opts.extensionKey\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemExtensionAriStaticOpts);\n    return new _EcosystemExtensionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, ecosystemExtensionAriStaticOpts);\n    return new _EcosystemExtensionAri(opts);\n  }\n  getVariables() {\n    return {\n      appId: this.appId,\n      environmentId: this.environmentId,\n      groupId: this.groupId,\n      extensionKey: this.extensionKey\n    };\n  }\n};\n\n// src/ecosystem/extension-group/types.ts\nvar EcosystemExtensionGroupAriResourceOwner = \"ecosystem\", EcosystemExtensionGroupAriResourceType = \"extension-group\";\n\n// src/ecosystem/extension-group/manifest.ts\nvar ecosystemExtensionGroupAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: EcosystemExtensionGroupAriResourceOwner,\n  resourceType: EcosystemExtensionGroupAriResourceType,\n  resourceIdSlug: \"{appId}/{environmentId}/{groupId}\",\n  resourceIdSegmentFormats: {\n    appId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    environmentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    groupId: /([0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}|static)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/ecosystem/extension-group/index.ts\nvar EcosystemExtensionGroupAri = class _EcosystemExtensionGroupAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._appId = opts.resourceIdSegmentValues.appId, this._environmentId = opts.resourceIdSegmentValues.environmentId, this._groupId = opts.resourceIdSegmentValues.groupId;\n  }\n  get appId() {\n    return this._appId;\n  }\n  get environmentId() {\n    return this._environmentId;\n  }\n  get groupId() {\n    return this._groupId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: ecosystemExtensionGroupAriStaticOpts.qualifier,\n      platformQualifier: ecosystemExtensionGroupAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: ecosystemExtensionGroupAriStaticOpts.resourceOwner,\n      resourceType: ecosystemExtensionGroupAriStaticOpts.resourceType,\n      resourceId: `${opts.appId}/${opts.environmentId}/${opts.groupId}`,\n      resourceIdSegmentValues: {\n        appId: opts.appId,\n        environmentId: opts.environmentId,\n        groupId: opts.groupId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemExtensionGroupAriStaticOpts);\n    return new _EcosystemExtensionGroupAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, ecosystemExtensionGroupAriStaticOpts);\n    return new _EcosystemExtensionGroupAri(opts);\n  }\n  getVariables() {\n    return {\n      appId: this.appId,\n      environmentId: this.environmentId,\n      groupId: this.groupId\n    };\n  }\n};\n\n// src/ecosystem/installation/types.ts\nvar EcosystemInstallationAriResourceOwner = \"ecosystem\", EcosystemInstallationAriResourceType = \"installation\";\n\n// src/ecosystem/installation/manifest.ts\nvar ecosystemInstallationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: EcosystemInstallationAriResourceOwner,\n  resourceType: EcosystemInstallationAriResourceType,\n  resourceIdSlug: \"{installationId}\",\n  resourceIdSegmentFormats: {\n    installationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/ecosystem/installation/index.ts\nvar EcosystemInstallationAri = class _EcosystemInstallationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._installationId = opts.resourceIdSegmentValues.installationId;\n  }\n  get installationId() {\n    return this._installationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: ecosystemInstallationAriStaticOpts.qualifier,\n      platformQualifier: ecosystemInstallationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: ecosystemInstallationAriStaticOpts.resourceOwner,\n      resourceType: ecosystemInstallationAriStaticOpts.resourceType,\n      resourceId: `${opts.installationId}`,\n      resourceIdSegmentValues: {\n        installationId: opts.installationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, ecosystemInstallationAriStaticOpts);\n    return new _EcosystemInstallationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, ecosystemInstallationAriStaticOpts);\n    return new _EcosystemInstallationAri(opts);\n  }\n  getVariables() {\n    return {\n      installationId: this.installationId\n    };\n  }\n};\n\n// src/elements/custom-emoji-metadata/types.ts\nvar ElementsCustomEmojiMetadataAriResourceOwner = \"elements\", ElementsCustomEmojiMetadataAriResourceType = \"custom-emoji-metadata\";\n\n// src/elements/custom-emoji-metadata/manifest.ts\nvar elementsCustomEmojiMetadataAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: ElementsCustomEmojiMetadataAriResourceOwner,\n  resourceType: ElementsCustomEmojiMetadataAriResourceType,\n  resourceIdSlug: \"{customEmojiMetadataId}\",\n  resourceIdSegmentFormats: {\n    customEmojiMetadataId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/elements/custom-emoji-metadata/index.ts\nvar ElementsCustomEmojiMetadataAri = class _ElementsCustomEmojiMetadataAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._customEmojiMetadataId = opts.resourceIdSegmentValues.customEmojiMetadataId;\n  }\n  get customEmojiMetadataId() {\n    return this._customEmojiMetadataId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: elementsCustomEmojiMetadataAriStaticOpts.qualifier,\n      platformQualifier: elementsCustomEmojiMetadataAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: elementsCustomEmojiMetadataAriStaticOpts.resourceOwner,\n      resourceType: elementsCustomEmojiMetadataAriStaticOpts.resourceType,\n      resourceId: `${opts.customEmojiMetadataId}`,\n      resourceIdSegmentValues: {\n        customEmojiMetadataId: opts.customEmojiMetadataId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, elementsCustomEmojiMetadataAriStaticOpts);\n    return new _ElementsCustomEmojiMetadataAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, elementsCustomEmojiMetadataAriStaticOpts);\n    return new _ElementsCustomEmojiMetadataAri(opts);\n  }\n  getVariables() {\n    return {\n      customEmojiMetadataId: this.customEmojiMetadataId\n    };\n  }\n};\n\n// src/elements/workspace/types.ts\nvar ElementsWorkspaceAriResourceOwner = \"elements\", ElementsWorkspaceAriResourceType = \"workspace\";\n\n// src/elements/workspace/manifest.ts\nvar elementsWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: ElementsWorkspaceAriResourceOwner,\n  resourceType: ElementsWorkspaceAriResourceType,\n  resourceIdSlug: \"{workspaceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/elements/workspace/index.ts\nvar ElementsWorkspaceAri = class _ElementsWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: elementsWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: elementsWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: elementsWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: elementsWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, elementsWorkspaceAriStaticOpts);\n    return new _ElementsWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, elementsWorkspaceAriStaticOpts);\n    return new _ElementsWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId\n    };\n  }\n};\n\n// src/exus-external/user/types.ts\nvar ExusExternalUserAriResourceOwner = \"exus-external\", ExusExternalUserAriResourceType = \"user\";\n\n// src/exus-external/user/manifest.ts\nvar exusExternalUserAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: ExusExternalUserAriResourceOwner,\n  resourceType: ExusExternalUserAriResourceType,\n  resourceIdSlug: \"{thirdPartySource}/{thirdPartyUserId}\",\n  resourceIdSegmentFormats: {\n    thirdPartySource: /[a-z0-9-]+/,\n    // eslint-disable-line no-useless-escape\n    thirdPartyUserId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/exus-external/user/index.ts\nvar ExusExternalUserAri = class _ExusExternalUserAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._thirdPartySource = opts.resourceIdSegmentValues.thirdPartySource, this._thirdPartyUserId = opts.resourceIdSegmentValues.thirdPartyUserId;\n  }\n  get thirdPartySource() {\n    return this._thirdPartySource;\n  }\n  get thirdPartyUserId() {\n    return this._thirdPartyUserId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: exusExternalUserAriStaticOpts.qualifier,\n      platformQualifier: exusExternalUserAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: exusExternalUserAriStaticOpts.resourceOwner,\n      resourceType: exusExternalUserAriStaticOpts.resourceType,\n      resourceId: `${opts.thirdPartySource}/${opts.thirdPartyUserId}`,\n      resourceIdSegmentValues: {\n        thirdPartySource: opts.thirdPartySource,\n        thirdPartyUserId: opts.thirdPartyUserId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, exusExternalUserAriStaticOpts);\n    return new _ExusExternalUserAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, exusExternalUserAriStaticOpts);\n    return new _ExusExternalUserAri(opts);\n  }\n  getVariables() {\n    return {\n      thirdPartySource: this.thirdPartySource,\n      thirdPartyUserId: this.thirdPartyUserId\n    };\n  }\n};\n\n// src/figma/file/types.ts\nvar FigmaFileAriResourceOwner = \"figma\", FigmaFileAriResourceType = \"file\";\n\n// src/figma/file/manifest.ts\nvar figmaFileAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: FigmaFileAriResourceOwner,\n  resourceType: FigmaFileAriResourceType,\n  resourceIdSlug: \"{fileId}\",\n  resourceIdSegmentFormats: {\n    fileId: /[A-z0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/figma/file/index.ts\nvar FigmaFileAri = class _FigmaFileAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._fileId = opts.resourceIdSegmentValues.fileId;\n  }\n  get fileId() {\n    return this._fileId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: figmaFileAriStaticOpts.qualifier,\n      platformQualifier: figmaFileAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: figmaFileAriStaticOpts.resourceOwner,\n      resourceType: figmaFileAriStaticOpts.resourceType,\n      resourceId: `${opts.fileId}`,\n      resourceIdSegmentValues: {\n        fileId: opts.fileId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, figmaFileAriStaticOpts);\n    return new _FigmaFileAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, figmaFileAriStaticOpts);\n    return new _FigmaFileAri(opts);\n  }\n  getVariables() {\n    return {\n      fileId: this.fileId\n    };\n  }\n};\n\n// src/google/document/types.ts\nvar GoogleDocumentAriResourceOwner = \"google\", GoogleDocumentAriResourceType = \"document\";\n\n// src/google/document/manifest.ts\nvar googleDocumentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GoogleDocumentAriResourceOwner,\n  resourceType: GoogleDocumentAriResourceType,\n  resourceIdSlug: \"{docId}\",\n  resourceIdSegmentFormats: {\n    docId: /[a-zA-Z0-9_-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/google/document/index.ts\nvar GoogleDocumentAri = class _GoogleDocumentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._docId = opts.resourceIdSegmentValues.docId;\n  }\n  get docId() {\n    return this._docId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: googleDocumentAriStaticOpts.qualifier,\n      platformQualifier: googleDocumentAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: googleDocumentAriStaticOpts.resourceOwner,\n      resourceType: googleDocumentAriStaticOpts.resourceType,\n      resourceId: `${opts.docId}`,\n      resourceIdSegmentValues: {\n        docId: opts.docId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, googleDocumentAriStaticOpts);\n    return new _GoogleDocumentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, googleDocumentAriStaticOpts);\n    return new _GoogleDocumentAri(opts);\n  }\n  getVariables() {\n    return {\n      docId: this.docId\n    };\n  }\n};\n\n// src/google/form/types.ts\nvar GoogleFormAriResourceOwner = \"google\", GoogleFormAriResourceType = \"form\";\n\n// src/google/form/manifest.ts\nvar googleFormAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GoogleFormAriResourceOwner,\n  resourceType: GoogleFormAriResourceType,\n  resourceIdSlug: \"{docId}\",\n  resourceIdSegmentFormats: {\n    docId: /[a-zA-Z0-9_-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/google/form/index.ts\nvar GoogleFormAri = class _GoogleFormAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._docId = opts.resourceIdSegmentValues.docId;\n  }\n  get docId() {\n    return this._docId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: googleFormAriStaticOpts.qualifier,\n      platformQualifier: googleFormAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: googleFormAriStaticOpts.resourceOwner,\n      resourceType: googleFormAriStaticOpts.resourceType,\n      resourceId: `${opts.docId}`,\n      resourceIdSegmentValues: {\n        docId: opts.docId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, googleFormAriStaticOpts);\n    return new _GoogleFormAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, googleFormAriStaticOpts);\n    return new _GoogleFormAri(opts);\n  }\n  getVariables() {\n    return {\n      docId: this.docId\n    };\n  }\n};\n\n// src/google/presentation/types.ts\nvar GooglePresentationAriResourceOwner = \"google\", GooglePresentationAriResourceType = \"presentation\";\n\n// src/google/presentation/manifest.ts\nvar googlePresentationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GooglePresentationAriResourceOwner,\n  resourceType: GooglePresentationAriResourceType,\n  resourceIdSlug: \"{docId}\",\n  resourceIdSegmentFormats: {\n    docId: /[a-zA-Z0-9_-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/google/presentation/index.ts\nvar GooglePresentationAri = class _GooglePresentationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._docId = opts.resourceIdSegmentValues.docId;\n  }\n  get docId() {\n    return this._docId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: googlePresentationAriStaticOpts.qualifier,\n      platformQualifier: googlePresentationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: googlePresentationAriStaticOpts.resourceOwner,\n      resourceType: googlePresentationAriStaticOpts.resourceType,\n      resourceId: `${opts.docId}`,\n      resourceIdSegmentValues: {\n        docId: opts.docId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, googlePresentationAriStaticOpts);\n    return new _GooglePresentationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, googlePresentationAriStaticOpts);\n    return new _GooglePresentationAri(opts);\n  }\n  getVariables() {\n    return {\n      docId: this.docId\n    };\n  }\n};\n\n// src/google/spreadsheet/types.ts\nvar GoogleSpreadsheetAriResourceOwner = \"google\", GoogleSpreadsheetAriResourceType = \"spreadsheet\";\n\n// src/google/spreadsheet/manifest.ts\nvar googleSpreadsheetAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GoogleSpreadsheetAriResourceOwner,\n  resourceType: GoogleSpreadsheetAriResourceType,\n  resourceIdSlug: \"{docId}\",\n  resourceIdSegmentFormats: {\n    docId: /[a-zA-Z0-9_-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/google/spreadsheet/index.ts\nvar GoogleSpreadsheetAri = class _GoogleSpreadsheetAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._docId = opts.resourceIdSegmentValues.docId;\n  }\n  get docId() {\n    return this._docId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: googleSpreadsheetAriStaticOpts.qualifier,\n      platformQualifier: googleSpreadsheetAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: googleSpreadsheetAriStaticOpts.resourceOwner,\n      resourceType: googleSpreadsheetAriStaticOpts.resourceType,\n      resourceId: `${opts.docId}`,\n      resourceIdSegmentValues: {\n        docId: opts.docId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, googleSpreadsheetAriStaticOpts);\n    return new _GoogleSpreadsheetAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, googleSpreadsheetAriStaticOpts);\n    return new _GoogleSpreadsheetAri(opts);\n  }\n  getVariables() {\n    return {\n      docId: this.docId\n    };\n  }\n};\n\n// src/graph/branch/types.ts\nvar GraphBranchAriResourceOwner = \"graph\", GraphBranchAriResourceType = \"branch\";\n\n// src/graph/branch/manifest.ts\nvar graphBranchAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphBranchAriResourceOwner,\n  resourceType: GraphBranchAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{branchId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    branchId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/branch/index.ts\nvar GraphBranchAri = class _GraphBranchAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._branchId = opts.resourceIdSegmentValues.branchId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get branchId() {\n    return this._branchId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphBranchAriStaticOpts.qualifier,\n      platformQualifier: graphBranchAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphBranchAriStaticOpts.resourceOwner,\n      resourceType: graphBranchAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.branchId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        branchId: opts.branchId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphBranchAriStaticOpts);\n    return new _GraphBranchAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphBranchAriStaticOpts);\n    return new _GraphBranchAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      branchId: this.branchId\n    };\n  }\n};\n\n// src/graph/branch-history/types.ts\nvar GraphBranchHistoryAriResourceOwner = \"graph\", GraphBranchHistoryAriResourceType = \"branch-history\";\n\n// src/graph/branch-history/manifest.ts\nvar graphBranchHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphBranchHistoryAriResourceOwner,\n  resourceType: GraphBranchHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{branchId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    branchId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/branch-history/index.ts\nvar GraphBranchHistoryAri = class _GraphBranchHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._branchId = opts.resourceIdSegmentValues.branchId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get branchId() {\n    return this._branchId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphBranchHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphBranchHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphBranchHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphBranchHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.branchId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        branchId: opts.branchId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphBranchHistoryAriStaticOpts);\n    return new _GraphBranchHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphBranchHistoryAriStaticOpts);\n    return new _GraphBranchHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      branchId: this.branchId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/build/types.ts\nvar GraphBuildAriResourceOwner = \"graph\", GraphBuildAriResourceType = \"build\";\n\n// src/graph/build/manifest.ts\nvar graphBuildAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphBuildAriResourceOwner,\n  resourceType: GraphBuildAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{buildId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    buildId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/build/index.ts\nvar GraphBuildAri = class _GraphBuildAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._buildId = opts.resourceIdSegmentValues.buildId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get buildId() {\n    return this._buildId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphBuildAriStaticOpts.qualifier,\n      platformQualifier: graphBuildAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphBuildAriStaticOpts.resourceOwner,\n      resourceType: graphBuildAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.buildId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        buildId: opts.buildId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphBuildAriStaticOpts);\n    return new _GraphBuildAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphBuildAriStaticOpts);\n    return new _GraphBuildAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      buildId: this.buildId\n    };\n  }\n};\n\n// src/graph/build-history/types.ts\nvar GraphBuildHistoryAriResourceOwner = \"graph\", GraphBuildHistoryAriResourceType = \"build-history\";\n\n// src/graph/build-history/manifest.ts\nvar graphBuildHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphBuildHistoryAriResourceOwner,\n  resourceType: GraphBuildHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{buildId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    buildId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/build-history/index.ts\nvar GraphBuildHistoryAri = class _GraphBuildHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._buildId = opts.resourceIdSegmentValues.buildId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get buildId() {\n    return this._buildId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphBuildHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphBuildHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphBuildHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphBuildHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.buildId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        buildId: opts.buildId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphBuildHistoryAriStaticOpts);\n    return new _GraphBuildHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphBuildHistoryAriStaticOpts);\n    return new _GraphBuildHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      buildId: this.buildId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/commit/types.ts\nvar GraphCommitAriResourceOwner = \"graph\", GraphCommitAriResourceType = \"commit\";\n\n// src/graph/commit/manifest.ts\nvar graphCommitAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphCommitAriResourceOwner,\n  resourceType: GraphCommitAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{commitId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    commitId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/commit/index.ts\nvar GraphCommitAri = class _GraphCommitAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._commitId = opts.resourceIdSegmentValues.commitId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get commitId() {\n    return this._commitId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphCommitAriStaticOpts.qualifier,\n      platformQualifier: graphCommitAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphCommitAriStaticOpts.resourceOwner,\n      resourceType: graphCommitAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.commitId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        commitId: opts.commitId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphCommitAriStaticOpts);\n    return new _GraphCommitAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphCommitAriStaticOpts);\n    return new _GraphCommitAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      commitId: this.commitId\n    };\n  }\n};\n\n// src/graph/content/types.ts\nvar GraphContentAriResourceOwner = \"graph\", GraphContentAriResourceType = \"content\";\n\n// src/graph/content/manifest.ts\nvar graphContentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphContentAriResourceOwner,\n  resourceType: GraphContentAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{contentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    contentId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/content/index.ts\nvar GraphContentAri = class _GraphContentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._contentId = opts.resourceIdSegmentValues.contentId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get contentId() {\n    return this._contentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphContentAriStaticOpts.qualifier,\n      platformQualifier: graphContentAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphContentAriStaticOpts.resourceOwner,\n      resourceType: graphContentAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.contentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        contentId: opts.contentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphContentAriStaticOpts);\n    return new _GraphContentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphContentAriStaticOpts);\n    return new _GraphContentAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      contentId: this.contentId\n    };\n  }\n};\n\n// src/graph/deployment/types.ts\nvar GraphDeploymentAriResourceOwner = \"graph\", GraphDeploymentAriResourceType = \"deployment\";\n\n// src/graph/deployment/manifest.ts\nvar graphDeploymentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphDeploymentAriResourceOwner,\n  resourceType: GraphDeploymentAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{deploymentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    deploymentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/deployment/index.ts\nvar GraphDeploymentAri = class _GraphDeploymentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get deploymentId() {\n    return this._deploymentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphDeploymentAriStaticOpts.qualifier,\n      platformQualifier: graphDeploymentAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphDeploymentAriStaticOpts.resourceOwner,\n      resourceType: graphDeploymentAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.deploymentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        deploymentId: opts.deploymentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDeploymentAriStaticOpts);\n    return new _GraphDeploymentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphDeploymentAriStaticOpts);\n    return new _GraphDeploymentAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      deploymentId: this.deploymentId\n    };\n  }\n};\n\n// src/graph/deployment-history/types.ts\nvar GraphDeploymentHistoryAriResourceOwner = \"graph\", GraphDeploymentHistoryAriResourceType = \"deployment-history\";\n\n// src/graph/deployment-history/manifest.ts\nvar graphDeploymentHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphDeploymentHistoryAriResourceOwner,\n  resourceType: GraphDeploymentHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{deploymentId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    deploymentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/deployment-history/index.ts\nvar GraphDeploymentHistoryAri = class _GraphDeploymentHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get deploymentId() {\n    return this._deploymentId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphDeploymentHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphDeploymentHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphDeploymentHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphDeploymentHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.deploymentId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        deploymentId: opts.deploymentId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDeploymentHistoryAriStaticOpts);\n    return new _GraphDeploymentHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphDeploymentHistoryAriStaticOpts);\n    return new _GraphDeploymentHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      deploymentId: this.deploymentId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/design/types.ts\nvar GraphDesignAriResourceOwner = \"graph\", GraphDesignAriResourceType = \"design\";\n\n// src/graph/design/manifest.ts\nvar graphDesignAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphDesignAriResourceOwner,\n  resourceType: GraphDesignAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{designId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    designId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/design/index.ts\nvar GraphDesignAri = class _GraphDesignAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._designId = opts.resourceIdSegmentValues.designId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get designId() {\n    return this._designId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphDesignAriStaticOpts.qualifier,\n      platformQualifier: graphDesignAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphDesignAriStaticOpts.resourceOwner,\n      resourceType: graphDesignAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.designId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        designId: opts.designId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDesignAriStaticOpts);\n    return new _GraphDesignAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphDesignAriStaticOpts);\n    return new _GraphDesignAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      designId: this.designId\n    };\n  }\n};\n\n// src/graph/design-history/types.ts\nvar GraphDesignHistoryAriResourceOwner = \"graph\", GraphDesignHistoryAriResourceType = \"design-history\";\n\n// src/graph/design-history/manifest.ts\nvar graphDesignHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphDesignHistoryAriResourceOwner,\n  resourceType: GraphDesignHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{designId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    designId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/design-history/index.ts\nvar GraphDesignHistoryAri = class _GraphDesignHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._designId = opts.resourceIdSegmentValues.designId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get designId() {\n    return this._designId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphDesignHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphDesignHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphDesignHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphDesignHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.designId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        designId: opts.designId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDesignHistoryAriStaticOpts);\n    return new _GraphDesignHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphDesignHistoryAriStaticOpts);\n    return new _GraphDesignHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      designId: this.designId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/devops-component/types.ts\nvar GraphDevopsComponentAriResourceOwner = \"graph\", GraphDevopsComponentAriResourceType = \"devops-component\";\n\n// src/graph/devops-component/manifest.ts\nvar graphDevopsComponentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphDevopsComponentAriResourceOwner,\n  resourceType: GraphDevopsComponentAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{devopsComponentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    devopsComponentId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/devops-component/index.ts\nvar GraphDevopsComponentAri = class _GraphDevopsComponentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._devopsComponentId = opts.resourceIdSegmentValues.devopsComponentId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get devopsComponentId() {\n    return this._devopsComponentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphDevopsComponentAriStaticOpts.qualifier,\n      platformQualifier: graphDevopsComponentAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphDevopsComponentAriStaticOpts.resourceOwner,\n      resourceType: graphDevopsComponentAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.devopsComponentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        devopsComponentId: opts.devopsComponentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDevopsComponentAriStaticOpts);\n    return new _GraphDevopsComponentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphDevopsComponentAriStaticOpts);\n    return new _GraphDevopsComponentAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      devopsComponentId: this.devopsComponentId\n    };\n  }\n};\n\n// src/graph/document/types.ts\nvar GraphDocumentAriResourceOwner = \"graph\", GraphDocumentAriResourceType = \"document\";\n\n// src/graph/document/manifest.ts\nvar graphDocumentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphDocumentAriResourceOwner,\n  resourceType: GraphDocumentAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{documentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/document/index.ts\nvar GraphDocumentAri = class _GraphDocumentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._documentId = opts.resourceIdSegmentValues.documentId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get documentId() {\n    return this._documentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphDocumentAriStaticOpts.qualifier,\n      platformQualifier: graphDocumentAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphDocumentAriStaticOpts.resourceOwner,\n      resourceType: graphDocumentAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.documentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        documentId: opts.documentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDocumentAriStaticOpts);\n    return new _GraphDocumentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphDocumentAriStaticOpts);\n    return new _GraphDocumentAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      documentId: this.documentId\n    };\n  }\n};\n\n// src/graph/document-history/types.ts\nvar GraphDocumentHistoryAriResourceOwner = \"graph\", GraphDocumentHistoryAriResourceType = \"document-history\";\n\n// src/graph/document-history/manifest.ts\nvar graphDocumentHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphDocumentHistoryAriResourceOwner,\n  resourceType: GraphDocumentHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{documentId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/document-history/index.ts\nvar GraphDocumentHistoryAri = class _GraphDocumentHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._documentId = opts.resourceIdSegmentValues.documentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get documentId() {\n    return this._documentId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphDocumentHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphDocumentHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphDocumentHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphDocumentHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.documentId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        documentId: opts.documentId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphDocumentHistoryAriStaticOpts);\n    return new _GraphDocumentHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphDocumentHistoryAriStaticOpts);\n    return new _GraphDocumentHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      documentId: this.documentId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/employee/types.ts\nvar GraphEmployeeAriResourceOwner = \"graph\", GraphEmployeeAriResourceType = \"employee\";\n\n// src/graph/employee/manifest.ts\nvar graphEmployeeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphEmployeeAriResourceOwner,\n  resourceType: GraphEmployeeAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{employeeId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    employeeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/employee/index.ts\nvar GraphEmployeeAri = class _GraphEmployeeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._employeeId = opts.resourceIdSegmentValues.employeeId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get employeeId() {\n    return this._employeeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphEmployeeAriStaticOpts.qualifier,\n      platformQualifier: graphEmployeeAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphEmployeeAriStaticOpts.resourceOwner,\n      resourceType: graphEmployeeAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.employeeId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        employeeId: opts.employeeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphEmployeeAriStaticOpts);\n    return new _GraphEmployeeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphEmployeeAriStaticOpts);\n    return new _GraphEmployeeAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      employeeId: this.employeeId\n    };\n  }\n};\n\n// src/graph/employee-history/types.ts\nvar GraphEmployeeHistoryAriResourceOwner = \"graph\", GraphEmployeeHistoryAriResourceType = \"employee-history\";\n\n// src/graph/employee-history/manifest.ts\nvar graphEmployeeHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphEmployeeHistoryAriResourceOwner,\n  resourceType: GraphEmployeeHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{employeeId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    employeeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/employee-history/index.ts\nvar GraphEmployeeHistoryAri = class _GraphEmployeeHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._employeeId = opts.resourceIdSegmentValues.employeeId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get employeeId() {\n    return this._employeeId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphEmployeeHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphEmployeeHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphEmployeeHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphEmployeeHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.employeeId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        employeeId: opts.employeeId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphEmployeeHistoryAriStaticOpts);\n    return new _GraphEmployeeHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphEmployeeHistoryAriStaticOpts);\n    return new _GraphEmployeeHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      employeeId: this.employeeId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/feature-flag/types.ts\nvar GraphFeatureFlagAriResourceOwner = \"graph\", GraphFeatureFlagAriResourceType = \"feature-flag\";\n\n// src/graph/feature-flag/manifest.ts\nvar graphFeatureFlagAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphFeatureFlagAriResourceOwner,\n  resourceType: GraphFeatureFlagAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{featureFlagId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    featureFlagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/feature-flag/index.ts\nvar GraphFeatureFlagAri = class _GraphFeatureFlagAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._featureFlagId = opts.resourceIdSegmentValues.featureFlagId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get featureFlagId() {\n    return this._featureFlagId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphFeatureFlagAriStaticOpts.qualifier,\n      platformQualifier: graphFeatureFlagAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphFeatureFlagAriStaticOpts.resourceOwner,\n      resourceType: graphFeatureFlagAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.featureFlagId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        featureFlagId: opts.featureFlagId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphFeatureFlagAriStaticOpts);\n    return new _GraphFeatureFlagAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphFeatureFlagAriStaticOpts);\n    return new _GraphFeatureFlagAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      featureFlagId: this.featureFlagId\n    };\n  }\n};\n\n// src/graph/feature-flag-history/types.ts\nvar GraphFeatureFlagHistoryAriResourceOwner = \"graph\", GraphFeatureFlagHistoryAriResourceType = \"feature-flag-history\";\n\n// src/graph/feature-flag-history/manifest.ts\nvar graphFeatureFlagHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphFeatureFlagHistoryAriResourceOwner,\n  resourceType: GraphFeatureFlagHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{featureFlagId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    featureFlagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/feature-flag-history/index.ts\nvar GraphFeatureFlagHistoryAri = class _GraphFeatureFlagHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._featureFlagId = opts.resourceIdSegmentValues.featureFlagId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get featureFlagId() {\n    return this._featureFlagId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphFeatureFlagHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphFeatureFlagHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphFeatureFlagHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphFeatureFlagHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.featureFlagId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        featureFlagId: opts.featureFlagId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphFeatureFlagHistoryAriStaticOpts);\n    return new _GraphFeatureFlagHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphFeatureFlagHistoryAriStaticOpts);\n    return new _GraphFeatureFlagHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      featureFlagId: this.featureFlagId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/incident/types.ts\nvar GraphIncidentAriResourceOwner = \"graph\", GraphIncidentAriResourceType = \"incident\";\n\n// src/graph/incident/manifest.ts\nvar graphIncidentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphIncidentAriResourceOwner,\n  resourceType: GraphIncidentAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{incidentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/incident/index.ts\nvar GraphIncidentAri = class _GraphIncidentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._incidentId = opts.resourceIdSegmentValues.incidentId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get incidentId() {\n    return this._incidentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphIncidentAriStaticOpts.qualifier,\n      platformQualifier: graphIncidentAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphIncidentAriStaticOpts.resourceOwner,\n      resourceType: graphIncidentAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.incidentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        incidentId: opts.incidentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphIncidentAriStaticOpts);\n    return new _GraphIncidentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphIncidentAriStaticOpts);\n    return new _GraphIncidentAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      incidentId: this.incidentId\n    };\n  }\n};\n\n// src/graph/incident-history/types.ts\nvar GraphIncidentHistoryAriResourceOwner = \"graph\", GraphIncidentHistoryAriResourceType = \"incident-history\";\n\n// src/graph/incident-history/manifest.ts\nvar graphIncidentHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphIncidentHistoryAriResourceOwner,\n  resourceType: GraphIncidentHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{incidentId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/incident-history/index.ts\nvar GraphIncidentHistoryAri = class _GraphIncidentHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._incidentId = opts.resourceIdSegmentValues.incidentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get incidentId() {\n    return this._incidentId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphIncidentHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphIncidentHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphIncidentHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphIncidentHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.incidentId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        incidentId: opts.incidentId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphIncidentHistoryAriStaticOpts);\n    return new _GraphIncidentHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphIncidentHistoryAriStaticOpts);\n    return new _GraphIncidentHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      incidentId: this.incidentId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/jira-project-and-devops-tool-relationship/types.ts\nvar GraphJiraProjectAndDevopsToolRelationshipAriResourceOwner = \"graph\", GraphJiraProjectAndDevopsToolRelationshipAriResourceType = \"jira-project-and-devops-tool-relationship\";\n\n// src/graph/jira-project-and-devops-tool-relationship/manifest.ts\nvar graphJiraProjectAndDevopsToolRelationshipAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphJiraProjectAndDevopsToolRelationshipAriResourceOwner,\n  resourceType: GraphJiraProjectAndDevopsToolRelationshipAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{relationshipId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/jira-project-and-devops-tool-relationship/index.ts\nvar GraphJiraProjectAndDevopsToolRelationshipAri = class _GraphJiraProjectAndDevopsToolRelationshipAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get relationshipId() {\n    return this._relationshipId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphJiraProjectAndDevopsToolRelationshipAriStaticOpts.qualifier,\n      platformQualifier: graphJiraProjectAndDevopsToolRelationshipAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphJiraProjectAndDevopsToolRelationshipAriStaticOpts.resourceOwner,\n      resourceType: graphJiraProjectAndDevopsToolRelationshipAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        relationshipId: opts.relationshipId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphJiraProjectAndDevopsToolRelationshipAriStaticOpts);\n    return new _GraphJiraProjectAndDevopsToolRelationshipAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphJiraProjectAndDevopsToolRelationshipAriStaticOpts);\n    return new _GraphJiraProjectAndDevopsToolRelationshipAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      relationshipId: this.relationshipId\n    };\n  }\n};\n\n// src/graph/jira-project-and-documentation-space-relationship/types.ts\nvar GraphJiraProjectAndDocumentationSpaceRelationshipAriResourceOwner = \"graph\", GraphJiraProjectAndDocumentationSpaceRelationshipAriResourceType = \"jira-project-and-documentation-space-relationship\";\n\n// src/graph/jira-project-and-documentation-space-relationship/manifest.ts\nvar graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphJiraProjectAndDocumentationSpaceRelationshipAriResourceOwner,\n  resourceType: GraphJiraProjectAndDocumentationSpaceRelationshipAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{relationshipId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/jira-project-and-documentation-space-relationship/index.ts\nvar GraphJiraProjectAndDocumentationSpaceRelationshipAri = class _GraphJiraProjectAndDocumentationSpaceRelationshipAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get relationshipId() {\n    return this._relationshipId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts.qualifier,\n      platformQualifier: graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts.resourceOwner,\n      resourceType: graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        relationshipId: opts.relationshipId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts);\n    return new _GraphJiraProjectAndDocumentationSpaceRelationshipAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts);\n    return new _GraphJiraProjectAndDocumentationSpaceRelationshipAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      relationshipId: this.relationshipId\n    };\n  }\n};\n\n// src/graph/jira-project-and-operations-team-relationship/types.ts\nvar GraphJiraProjectAndOperationsTeamRelationshipAriResourceOwner = \"graph\", GraphJiraProjectAndOperationsTeamRelationshipAriResourceType = \"jira-project-and-operations-team-relationship\";\n\n// src/graph/jira-project-and-operations-team-relationship/manifest.ts\nvar graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphJiraProjectAndOperationsTeamRelationshipAriResourceOwner,\n  resourceType: GraphJiraProjectAndOperationsTeamRelationshipAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{relationshipId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/jira-project-and-operations-team-relationship/index.ts\nvar GraphJiraProjectAndOperationsTeamRelationshipAri = class _GraphJiraProjectAndOperationsTeamRelationshipAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get relationshipId() {\n    return this._relationshipId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts.qualifier,\n      platformQualifier: graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts.resourceOwner,\n      resourceType: graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        relationshipId: opts.relationshipId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts);\n    return new _GraphJiraProjectAndOperationsTeamRelationshipAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts);\n    return new _GraphJiraProjectAndOperationsTeamRelationshipAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      relationshipId: this.relationshipId\n    };\n  }\n};\n\n// src/graph/jira-project-and-vcs-repository-relationship/types.ts\nvar GraphJiraProjectAndVcsRepositoryRelationshipAriResourceOwner = \"graph\", GraphJiraProjectAndVcsRepositoryRelationshipAriResourceType = \"jira-project-and-vcs-repository-relationship\";\n\n// src/graph/jira-project-and-vcs-repository-relationship/manifest.ts\nvar graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphJiraProjectAndVcsRepositoryRelationshipAriResourceOwner,\n  resourceType: GraphJiraProjectAndVcsRepositoryRelationshipAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{relationshipId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/jira-project-and-vcs-repository-relationship/index.ts\nvar GraphJiraProjectAndVcsRepositoryRelationshipAri = class _GraphJiraProjectAndVcsRepositoryRelationshipAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get relationshipId() {\n    return this._relationshipId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts.qualifier,\n      platformQualifier: graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts.resourceOwner,\n      resourceType: graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        relationshipId: opts.relationshipId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts);\n    return new _GraphJiraProjectAndVcsRepositoryRelationshipAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts);\n    return new _GraphJiraProjectAndVcsRepositoryRelationshipAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      relationshipId: this.relationshipId\n    };\n  }\n};\n\n// src/graph/jira-project-and-vcs-repository-relationship-temp-migration/types.ts\nvar GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAriResourceOwner = \"graph\", GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAriResourceType = \"jira-project-and-vcs-repository-relationship-temp-migration\";\n\n// src/graph/jira-project-and-vcs-repository-relationship-temp-migration/manifest.ts\nvar graphJiraProjectAndVcsRepositoryRelationshipTempMigrationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAriResourceOwner,\n  resourceType: GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAriResourceType,\n  resourceIdSlug: \"{siteId}/{projectId}/{activationId}/{repositoryId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    projectId: /[0-9]+/,\n    // eslint-disable-line no-useless-escape\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    repositoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/jira-project-and-vcs-repository-relationship-temp-migration/index.ts\nvar GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAri = class _GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId, this._projectId = opts.resourceIdSegmentValues.projectId, this._activationId = opts.resourceIdSegmentValues.activationId, this._repositoryId = opts.resourceIdSegmentValues.repositoryId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get projectId() {\n    return this._projectId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get repositoryId() {\n    return this._repositoryId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphJiraProjectAndVcsRepositoryRelationshipTempMigrationAriStaticOpts.qualifier,\n      platformQualifier: graphJiraProjectAndVcsRepositoryRelationshipTempMigrationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphJiraProjectAndVcsRepositoryRelationshipTempMigrationAriStaticOpts.resourceOwner,\n      resourceType: graphJiraProjectAndVcsRepositoryRelationshipTempMigrationAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}/${opts.projectId}/${opts.activationId}/${opts.repositoryId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId,\n        projectId: opts.projectId,\n        activationId: opts.activationId,\n        repositoryId: opts.repositoryId\n      }\n    }, ariOpts = AriParser.fromOpts(\n      derivedOpts,\n      graphJiraProjectAndVcsRepositoryRelationshipTempMigrationAriStaticOpts\n    );\n    return new _GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphJiraProjectAndVcsRepositoryRelationshipTempMigrationAriStaticOpts);\n    return new _GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      projectId: this.projectId,\n      activationId: this.activationId,\n      repositoryId: this.repositoryId\n    };\n  }\n};\n\n// src/graph/operations-workspace/types.ts\nvar GraphOperationsWorkspaceAriResourceOwner = \"graph\", GraphOperationsWorkspaceAriResourceType = \"operations-workspace\";\n\n// src/graph/operations-workspace/manifest.ts\nvar graphOperationsWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphOperationsWorkspaceAriResourceOwner,\n  resourceType: GraphOperationsWorkspaceAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{providerAppId}/{operationsWorkspaceId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    providerAppId: /[a-zA-Z0-9-._]+/,\n    // eslint-disable-line no-useless-escape\n    operationsWorkspaceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/operations-workspace/index.ts\nvar GraphOperationsWorkspaceAri = class _GraphOperationsWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._operationsWorkspaceId = opts.resourceIdSegmentValues.operationsWorkspaceId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get providerAppId() {\n    return this._providerAppId;\n  }\n  get operationsWorkspaceId() {\n    return this._operationsWorkspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphOperationsWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: graphOperationsWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphOperationsWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: graphOperationsWorkspaceAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.operationsWorkspaceId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        providerAppId: opts.providerAppId,\n        operationsWorkspaceId: opts.operationsWorkspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphOperationsWorkspaceAriStaticOpts);\n    return new _GraphOperationsWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphOperationsWorkspaceAriStaticOpts);\n    return new _GraphOperationsWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      providerAppId: this.providerAppId,\n      operationsWorkspaceId: this.operationsWorkspaceId\n    };\n  }\n};\n\n// src/graph/post-incident-review/types.ts\nvar GraphPostIncidentReviewAriResourceOwner = \"graph\", GraphPostIncidentReviewAriResourceType = \"post-incident-review\";\n\n// src/graph/post-incident-review/manifest.ts\nvar graphPostIncidentReviewAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphPostIncidentReviewAriResourceOwner,\n  resourceType: GraphPostIncidentReviewAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{postIncidentReviewId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    postIncidentReviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/post-incident-review/index.ts\nvar GraphPostIncidentReviewAri = class _GraphPostIncidentReviewAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewId = opts.resourceIdSegmentValues.postIncidentReviewId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get postIncidentReviewId() {\n    return this._postIncidentReviewId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphPostIncidentReviewAriStaticOpts.qualifier,\n      platformQualifier: graphPostIncidentReviewAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphPostIncidentReviewAriStaticOpts.resourceOwner,\n      resourceType: graphPostIncidentReviewAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        postIncidentReviewId: opts.postIncidentReviewId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphPostIncidentReviewAriStaticOpts);\n    return new _GraphPostIncidentReviewAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphPostIncidentReviewAriStaticOpts);\n    return new _GraphPostIncidentReviewAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      postIncidentReviewId: this.postIncidentReviewId\n    };\n  }\n};\n\n// src/graph/post-incident-review-history/types.ts\nvar GraphPostIncidentReviewHistoryAriResourceOwner = \"graph\", GraphPostIncidentReviewHistoryAriResourceType = \"post-incident-review-history\";\n\n// src/graph/post-incident-review-history/manifest.ts\nvar graphPostIncidentReviewHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphPostIncidentReviewHistoryAriResourceOwner,\n  resourceType: GraphPostIncidentReviewHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{postIncidentReviewId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    postIncidentReviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/post-incident-review-history/index.ts\nvar GraphPostIncidentReviewHistoryAri = class _GraphPostIncidentReviewHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewId = opts.resourceIdSegmentValues.postIncidentReviewId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get postIncidentReviewId() {\n    return this._postIncidentReviewId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphPostIncidentReviewHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphPostIncidentReviewHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphPostIncidentReviewHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphPostIncidentReviewHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        postIncidentReviewId: opts.postIncidentReviewId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphPostIncidentReviewHistoryAriStaticOpts);\n    return new _GraphPostIncidentReviewHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphPostIncidentReviewHistoryAriStaticOpts);\n    return new _GraphPostIncidentReviewHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      postIncidentReviewId: this.postIncidentReviewId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/project/types.ts\nvar GraphProjectAriResourceOwner = \"graph\", GraphProjectAriResourceType = \"project\";\n\n// src/graph/project/manifest.ts\nvar graphProjectAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphProjectAriResourceOwner,\n  resourceType: GraphProjectAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{projectId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    projectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/project/index.ts\nvar GraphProjectAri = class _GraphProjectAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get projectId() {\n    return this._projectId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphProjectAriStaticOpts.qualifier,\n      platformQualifier: graphProjectAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphProjectAriStaticOpts.resourceOwner,\n      resourceType: graphProjectAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.projectId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        projectId: opts.projectId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphProjectAriStaticOpts);\n    return new _GraphProjectAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphProjectAriStaticOpts);\n    return new _GraphProjectAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      projectId: this.projectId\n    };\n  }\n};\n\n// src/graph/pull-request/types.ts\nvar GraphPullRequestAriResourceOwner = \"graph\", GraphPullRequestAriResourceType = \"pull-request\";\n\n// src/graph/pull-request/manifest.ts\nvar graphPullRequestAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphPullRequestAriResourceOwner,\n  resourceType: GraphPullRequestAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{pullRequestId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    pullRequestId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/pull-request/index.ts\nvar GraphPullRequestAri = class _GraphPullRequestAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get pullRequestId() {\n    return this._pullRequestId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphPullRequestAriStaticOpts.qualifier,\n      platformQualifier: graphPullRequestAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphPullRequestAriStaticOpts.resourceOwner,\n      resourceType: graphPullRequestAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.pullRequestId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        pullRequestId: opts.pullRequestId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphPullRequestAriStaticOpts);\n    return new _GraphPullRequestAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphPullRequestAriStaticOpts);\n    return new _GraphPullRequestAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      pullRequestId: this.pullRequestId\n    };\n  }\n};\n\n// src/graph/pull-request-history/types.ts\nvar GraphPullRequestHistoryAriResourceOwner = \"graph\", GraphPullRequestHistoryAriResourceType = \"pull-request-history\";\n\n// src/graph/pull-request-history/manifest.ts\nvar graphPullRequestHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphPullRequestHistoryAriResourceOwner,\n  resourceType: GraphPullRequestHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{pullRequestId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    pullRequestId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/pull-request-history/index.ts\nvar GraphPullRequestHistoryAri = class _GraphPullRequestHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get pullRequestId() {\n    return this._pullRequestId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphPullRequestHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphPullRequestHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphPullRequestHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphPullRequestHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.pullRequestId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        pullRequestId: opts.pullRequestId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphPullRequestHistoryAriStaticOpts);\n    return new _GraphPullRequestHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphPullRequestHistoryAriStaticOpts);\n    return new _GraphPullRequestHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      pullRequestId: this.pullRequestId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/remote-link/types.ts\nvar GraphRemoteLinkAriResourceOwner = \"graph\", GraphRemoteLinkAriResourceType = \"remote-link\";\n\n// src/graph/remote-link/manifest.ts\nvar graphRemoteLinkAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphRemoteLinkAriResourceOwner,\n  resourceType: GraphRemoteLinkAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{remoteLinkId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    remoteLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/remote-link/index.ts\nvar GraphRemoteLinkAri = class _GraphRemoteLinkAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get remoteLinkId() {\n    return this._remoteLinkId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphRemoteLinkAriStaticOpts.qualifier,\n      platformQualifier: graphRemoteLinkAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphRemoteLinkAriStaticOpts.resourceOwner,\n      resourceType: graphRemoteLinkAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.remoteLinkId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        remoteLinkId: opts.remoteLinkId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphRemoteLinkAriStaticOpts);\n    return new _GraphRemoteLinkAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphRemoteLinkAriStaticOpts);\n    return new _GraphRemoteLinkAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      remoteLinkId: this.remoteLinkId\n    };\n  }\n};\n\n// src/graph/remote-link-history/types.ts\nvar GraphRemoteLinkHistoryAriResourceOwner = \"graph\", GraphRemoteLinkHistoryAriResourceType = \"remote-link-history\";\n\n// src/graph/remote-link-history/manifest.ts\nvar graphRemoteLinkHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphRemoteLinkHistoryAriResourceOwner,\n  resourceType: GraphRemoteLinkHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{remoteLinkId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    remoteLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/remote-link-history/index.ts\nvar GraphRemoteLinkHistoryAri = class _GraphRemoteLinkHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get remoteLinkId() {\n    return this._remoteLinkId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphRemoteLinkHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphRemoteLinkHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphRemoteLinkHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphRemoteLinkHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.remoteLinkId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        remoteLinkId: opts.remoteLinkId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphRemoteLinkHistoryAriStaticOpts);\n    return new _GraphRemoteLinkHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphRemoteLinkHistoryAriStaticOpts);\n    return new _GraphRemoteLinkHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      remoteLinkId: this.remoteLinkId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/repository/types.ts\nvar GraphRepositoryAriResourceOwner = \"graph\", GraphRepositoryAriResourceType = \"repository\";\n\n// src/graph/repository/manifest.ts\nvar graphRepositoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphRepositoryAriResourceOwner,\n  resourceType: GraphRepositoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{repositoryId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    repositoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/repository/index.ts\nvar GraphRepositoryAri = class _GraphRepositoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._repositoryId = opts.resourceIdSegmentValues.repositoryId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get repositoryId() {\n    return this._repositoryId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphRepositoryAriStaticOpts.qualifier,\n      platformQualifier: graphRepositoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphRepositoryAriStaticOpts.resourceOwner,\n      resourceType: graphRepositoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.repositoryId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        repositoryId: opts.repositoryId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphRepositoryAriStaticOpts);\n    return new _GraphRepositoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphRepositoryAriStaticOpts);\n    return new _GraphRepositoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      repositoryId: this.repositoryId\n    };\n  }\n};\n\n// src/graph/security-container/types.ts\nvar GraphSecurityContainerAriResourceOwner = \"graph\", GraphSecurityContainerAriResourceType = \"security-container\";\n\n// src/graph/security-container/manifest.ts\nvar graphSecurityContainerAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphSecurityContainerAriResourceOwner,\n  resourceType: GraphSecurityContainerAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{providerAppId}/{securityContainerId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    providerAppId: /[a-zA-Z0-9-._]+/,\n    // eslint-disable-line no-useless-escape\n    securityContainerId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/security-container/index.ts\nvar GraphSecurityContainerAri = class _GraphSecurityContainerAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._securityContainerId = opts.resourceIdSegmentValues.securityContainerId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get providerAppId() {\n    return this._providerAppId;\n  }\n  get securityContainerId() {\n    return this._securityContainerId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphSecurityContainerAriStaticOpts.qualifier,\n      platformQualifier: graphSecurityContainerAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphSecurityContainerAriStaticOpts.resourceOwner,\n      resourceType: graphSecurityContainerAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.securityContainerId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        providerAppId: opts.providerAppId,\n        securityContainerId: opts.securityContainerId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphSecurityContainerAriStaticOpts);\n    return new _GraphSecurityContainerAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphSecurityContainerAriStaticOpts);\n    return new _GraphSecurityContainerAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      providerAppId: this.providerAppId,\n      securityContainerId: this.securityContainerId\n    };\n  }\n};\n\n// src/graph/security-workspace/types.ts\nvar GraphSecurityWorkspaceAriResourceOwner = \"graph\", GraphSecurityWorkspaceAriResourceType = \"security-workspace\";\n\n// src/graph/security-workspace/manifest.ts\nvar graphSecurityWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphSecurityWorkspaceAriResourceOwner,\n  resourceType: GraphSecurityWorkspaceAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{providerAppId}/{securityWorkspaceId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    providerAppId: /[a-zA-Z0-9-._]+/,\n    // eslint-disable-line no-useless-escape\n    securityWorkspaceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/security-workspace/index.ts\nvar GraphSecurityWorkspaceAri = class _GraphSecurityWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._securityWorkspaceId = opts.resourceIdSegmentValues.securityWorkspaceId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get providerAppId() {\n    return this._providerAppId;\n  }\n  get securityWorkspaceId() {\n    return this._securityWorkspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphSecurityWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: graphSecurityWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphSecurityWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: graphSecurityWorkspaceAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.securityWorkspaceId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        providerAppId: opts.providerAppId,\n        securityWorkspaceId: opts.securityWorkspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphSecurityWorkspaceAriStaticOpts);\n    return new _GraphSecurityWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphSecurityWorkspaceAriStaticOpts);\n    return new _GraphSecurityWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      providerAppId: this.providerAppId,\n      securityWorkspaceId: this.securityWorkspaceId\n    };\n  }\n};\n\n// src/graph/service/types.ts\nvar GraphServiceAriResourceOwner = \"graph\", GraphServiceAriResourceType = \"service\";\n\n// src/graph/service/manifest.ts\nvar graphServiceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphServiceAriResourceOwner,\n  resourceType: GraphServiceAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{serviceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    serviceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/service/index.ts\nvar GraphServiceAri = class _GraphServiceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._serviceId = opts.resourceIdSegmentValues.serviceId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get serviceId() {\n    return this._serviceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphServiceAriStaticOpts.qualifier,\n      platformQualifier: graphServiceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphServiceAriStaticOpts.resourceOwner,\n      resourceType: graphServiceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.serviceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        serviceId: opts.serviceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphServiceAriStaticOpts);\n    return new _GraphServiceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphServiceAriStaticOpts);\n    return new _GraphServiceAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      serviceId: this.serviceId\n    };\n  }\n};\n\n// src/graph/service-and-jira-project-relationship/types.ts\nvar GraphServiceAndJiraProjectRelationshipAriResourceOwner = \"graph\", GraphServiceAndJiraProjectRelationshipAriResourceType = \"service-and-jira-project-relationship\";\n\n// src/graph/service-and-jira-project-relationship/manifest.ts\nvar graphServiceAndJiraProjectRelationshipAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphServiceAndJiraProjectRelationshipAriResourceOwner,\n  resourceType: GraphServiceAndJiraProjectRelationshipAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{relationshipId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/service-and-jira-project-relationship/index.ts\nvar GraphServiceAndJiraProjectRelationshipAri = class _GraphServiceAndJiraProjectRelationshipAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get relationshipId() {\n    return this._relationshipId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphServiceAndJiraProjectRelationshipAriStaticOpts.qualifier,\n      platformQualifier: graphServiceAndJiraProjectRelationshipAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphServiceAndJiraProjectRelationshipAriStaticOpts.resourceOwner,\n      resourceType: graphServiceAndJiraProjectRelationshipAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        relationshipId: opts.relationshipId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphServiceAndJiraProjectRelationshipAriStaticOpts);\n    return new _GraphServiceAndJiraProjectRelationshipAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphServiceAndJiraProjectRelationshipAriStaticOpts);\n    return new _GraphServiceAndJiraProjectRelationshipAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      relationshipId: this.relationshipId\n    };\n  }\n};\n\n// src/graph/service-and-operations-team-relationship/types.ts\nvar GraphServiceAndOperationsTeamRelationshipAriResourceOwner = \"graph\", GraphServiceAndOperationsTeamRelationshipAriResourceType = \"service-and-operations-team-relationship\";\n\n// src/graph/service-and-operations-team-relationship/manifest.ts\nvar graphServiceAndOperationsTeamRelationshipAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphServiceAndOperationsTeamRelationshipAriResourceOwner,\n  resourceType: GraphServiceAndOperationsTeamRelationshipAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{relationshipId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/service-and-operations-team-relationship/index.ts\nvar GraphServiceAndOperationsTeamRelationshipAri = class _GraphServiceAndOperationsTeamRelationshipAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get relationshipId() {\n    return this._relationshipId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphServiceAndOperationsTeamRelationshipAriStaticOpts.qualifier,\n      platformQualifier: graphServiceAndOperationsTeamRelationshipAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphServiceAndOperationsTeamRelationshipAriStaticOpts.resourceOwner,\n      resourceType: graphServiceAndOperationsTeamRelationshipAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        relationshipId: opts.relationshipId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphServiceAndOperationsTeamRelationshipAriStaticOpts);\n    return new _GraphServiceAndOperationsTeamRelationshipAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphServiceAndOperationsTeamRelationshipAriStaticOpts);\n    return new _GraphServiceAndOperationsTeamRelationshipAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      relationshipId: this.relationshipId\n    };\n  }\n};\n\n// src/graph/service-and-vcs-repository-relationship/types.ts\nvar GraphServiceAndVcsRepositoryRelationshipAriResourceOwner = \"graph\", GraphServiceAndVcsRepositoryRelationshipAriResourceType = \"service-and-vcs-repository-relationship\";\n\n// src/graph/service-and-vcs-repository-relationship/manifest.ts\nvar graphServiceAndVcsRepositoryRelationshipAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphServiceAndVcsRepositoryRelationshipAriResourceOwner,\n  resourceType: GraphServiceAndVcsRepositoryRelationshipAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{relationshipId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/service-and-vcs-repository-relationship/index.ts\nvar GraphServiceAndVcsRepositoryRelationshipAri = class _GraphServiceAndVcsRepositoryRelationshipAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get relationshipId() {\n    return this._relationshipId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphServiceAndVcsRepositoryRelationshipAriStaticOpts.qualifier,\n      platformQualifier: graphServiceAndVcsRepositoryRelationshipAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphServiceAndVcsRepositoryRelationshipAriStaticOpts.resourceOwner,\n      resourceType: graphServiceAndVcsRepositoryRelationshipAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        relationshipId: opts.relationshipId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphServiceAndVcsRepositoryRelationshipAriStaticOpts);\n    return new _GraphServiceAndVcsRepositoryRelationshipAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphServiceAndVcsRepositoryRelationshipAriStaticOpts);\n    return new _GraphServiceAndVcsRepositoryRelationshipAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      relationshipId: this.relationshipId\n    };\n  }\n};\n\n// src/graph/service-relationship/types.ts\nvar GraphServiceRelationshipAriResourceOwner = \"graph\", GraphServiceRelationshipAriResourceType = \"service-relationship\";\n\n// src/graph/service-relationship/manifest.ts\nvar graphServiceRelationshipAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphServiceRelationshipAriResourceOwner,\n  resourceType: GraphServiceRelationshipAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{relationshipId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    relationshipId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/service-relationship/index.ts\nvar GraphServiceRelationshipAri = class _GraphServiceRelationshipAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._relationshipId = opts.resourceIdSegmentValues.relationshipId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get relationshipId() {\n    return this._relationshipId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphServiceRelationshipAriStaticOpts.qualifier,\n      platformQualifier: graphServiceRelationshipAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphServiceRelationshipAriStaticOpts.resourceOwner,\n      resourceType: graphServiceRelationshipAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.relationshipId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        relationshipId: opts.relationshipId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphServiceRelationshipAriStaticOpts);\n    return new _GraphServiceRelationshipAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphServiceRelationshipAriStaticOpts);\n    return new _GraphServiceRelationshipAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      relationshipId: this.relationshipId\n    };\n  }\n};\n\n// src/graph/video/types.ts\nvar GraphVideoAriResourceOwner = \"graph\", GraphVideoAriResourceType = \"video\";\n\n// src/graph/video/manifest.ts\nvar graphVideoAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphVideoAriResourceOwner,\n  resourceType: GraphVideoAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{entityUUID}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    entityUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/video/index.ts\nvar GraphVideoAri = class _GraphVideoAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._entityUUID = opts.resourceIdSegmentValues.entityUUID;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get entityUUID() {\n    return this._entityUUID;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphVideoAriStaticOpts.qualifier,\n      platformQualifier: graphVideoAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphVideoAriStaticOpts.resourceOwner,\n      resourceType: graphVideoAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.entityUUID}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        entityUUID: opts.entityUUID\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphVideoAriStaticOpts);\n    return new _GraphVideoAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphVideoAriStaticOpts);\n    return new _GraphVideoAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      entityUUID: this.entityUUID\n    };\n  }\n};\n\n// src/graph/video-history/types.ts\nvar GraphVideoHistoryAriResourceOwner = \"graph\", GraphVideoHistoryAriResourceType = \"video-history\";\n\n// src/graph/video-history/manifest.ts\nvar graphVideoHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphVideoHistoryAriResourceOwner,\n  resourceType: GraphVideoHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{entityUUID}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    entityUUID: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/video-history/index.ts\nvar GraphVideoHistoryAri = class _GraphVideoHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._entityUUID = opts.resourceIdSegmentValues.entityUUID, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get entityUUID() {\n    return this._entityUUID;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphVideoHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphVideoHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphVideoHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphVideoHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.entityUUID}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        entityUUID: opts.entityUUID,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphVideoHistoryAriStaticOpts);\n    return new _GraphVideoHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphVideoHistoryAriStaticOpts);\n    return new _GraphVideoHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      entityUUID: this.entityUUID,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/vulnerability/types.ts\nvar GraphVulnerabilityAriResourceOwner = \"graph\", GraphVulnerabilityAriResourceType = \"vulnerability\";\n\n// src/graph/vulnerability/manifest.ts\nvar graphVulnerabilityAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphVulnerabilityAriResourceOwner,\n  resourceType: GraphVulnerabilityAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{vulnerabilityId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    vulnerabilityId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/vulnerability/index.ts\nvar GraphVulnerabilityAri = class _GraphVulnerabilityAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._vulnerabilityId = opts.resourceIdSegmentValues.vulnerabilityId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get vulnerabilityId() {\n    return this._vulnerabilityId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphVulnerabilityAriStaticOpts.qualifier,\n      platformQualifier: graphVulnerabilityAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphVulnerabilityAriStaticOpts.resourceOwner,\n      resourceType: graphVulnerabilityAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.vulnerabilityId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        vulnerabilityId: opts.vulnerabilityId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphVulnerabilityAriStaticOpts);\n    return new _GraphVulnerabilityAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphVulnerabilityAriStaticOpts);\n    return new _GraphVulnerabilityAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      vulnerabilityId: this.vulnerabilityId\n    };\n  }\n};\n\n// src/graph/vulnerability-history/types.ts\nvar GraphVulnerabilityHistoryAriResourceOwner = \"graph\", GraphVulnerabilityHistoryAriResourceType = \"vulnerability-history\";\n\n// src/graph/vulnerability-history/manifest.ts\nvar graphVulnerabilityHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphVulnerabilityHistoryAriResourceOwner,\n  resourceType: GraphVulnerabilityHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{vulnerabilityId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    vulnerabilityId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/vulnerability-history/index.ts\nvar GraphVulnerabilityHistoryAri = class _GraphVulnerabilityHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._vulnerabilityId = opts.resourceIdSegmentValues.vulnerabilityId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get vulnerabilityId() {\n    return this._vulnerabilityId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphVulnerabilityHistoryAriStaticOpts.qualifier,\n      platformQualifier: graphVulnerabilityHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphVulnerabilityHistoryAriStaticOpts.resourceOwner,\n      resourceType: graphVulnerabilityHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.vulnerabilityId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        vulnerabilityId: opts.vulnerabilityId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphVulnerabilityHistoryAriStaticOpts);\n    return new _GraphVulnerabilityHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphVulnerabilityHistoryAriStaticOpts);\n    return new _GraphVulnerabilityHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      vulnerabilityId: this.vulnerabilityId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/graph/workspace/types.ts\nvar GraphWorkspaceAriResourceOwner = \"graph\", GraphWorkspaceAriResourceType = \"workspace\";\n\n// src/graph/workspace/manifest.ts\nvar graphWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: GraphWorkspaceAriResourceOwner,\n  resourceType: GraphWorkspaceAriResourceType,\n  resourceIdSlug: \"{workspaceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/graph/workspace/index.ts\nvar GraphWorkspaceAri = class _GraphWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: graphWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: graphWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: graphWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: graphWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, graphWorkspaceAriStaticOpts);\n    return new _GraphWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, graphWorkspaceAriStaticOpts);\n    return new _GraphWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId\n    };\n  }\n};\n\n// src/help/article/types.ts\nvar HelpArticleAriResourceOwner = \"help\", HelpArticleAriResourceType = \"article\";\n\n// src/help/article/manifest.ts\nvar helpArticleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: HelpArticleAriResourceOwner,\n  resourceType: HelpArticleAriResourceType,\n  resourceIdSlug: \"{activationId}/{helpObjectId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    helpObjectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/help/article/index.ts\nvar HelpArticleAri = class _HelpArticleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpObjectId = opts.resourceIdSegmentValues.helpObjectId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get helpObjectId() {\n    return this._helpObjectId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: helpArticleAriStaticOpts.qualifier,\n      platformQualifier: helpArticleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: helpArticleAriStaticOpts.resourceOwner,\n      resourceType: helpArticleAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.helpObjectId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        helpObjectId: opts.helpObjectId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, helpArticleAriStaticOpts);\n    return new _HelpArticleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, helpArticleAriStaticOpts);\n    return new _HelpArticleAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      helpObjectId: this.helpObjectId\n    };\n  }\n};\n\n// src/help/channel/types.ts\nvar HelpChannelAriResourceOwner = \"help\", HelpChannelAriResourceType = \"channel\";\n\n// src/help/channel/manifest.ts\nvar helpChannelAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: HelpChannelAriResourceOwner,\n  resourceType: HelpChannelAriResourceType,\n  resourceIdSlug: \"{activationId}/{helpObjectId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    helpObjectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/help/channel/index.ts\nvar HelpChannelAri = class _HelpChannelAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpObjectId = opts.resourceIdSegmentValues.helpObjectId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get helpObjectId() {\n    return this._helpObjectId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: helpChannelAriStaticOpts.qualifier,\n      platformQualifier: helpChannelAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: helpChannelAriStaticOpts.resourceOwner,\n      resourceType: helpChannelAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.helpObjectId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        helpObjectId: opts.helpObjectId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, helpChannelAriStaticOpts);\n    return new _HelpChannelAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, helpChannelAriStaticOpts);\n    return new _HelpChannelAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      helpObjectId: this.helpObjectId\n    };\n  }\n};\n\n// src/help/help-center/types.ts\nvar HelpHelpCenterAriResourceOwner = \"help\", HelpHelpCenterAriResourceType = \"help-center\";\n\n// src/help/help-center/manifest.ts\nvar helpHelpCenterAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: HelpHelpCenterAriResourceOwner,\n  resourceType: HelpHelpCenterAriResourceType,\n  resourceIdSlug: \"{activationId}/{helpCenterId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    helpCenterId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/help/help-center/index.ts\nvar HelpHelpCenterAri = class _HelpHelpCenterAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpCenterId = opts.resourceIdSegmentValues.helpCenterId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get helpCenterId() {\n    return this._helpCenterId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: helpHelpCenterAriStaticOpts.qualifier,\n      platformQualifier: helpHelpCenterAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: helpHelpCenterAriStaticOpts.resourceOwner,\n      resourceType: helpHelpCenterAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.helpCenterId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        helpCenterId: opts.helpCenterId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, helpHelpCenterAriStaticOpts);\n    return new _HelpHelpCenterAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, helpHelpCenterAriStaticOpts);\n    return new _HelpHelpCenterAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      helpCenterId: this.helpCenterId\n    };\n  }\n};\n\n// src/help/help-desk/types.ts\nvar HelpHelpDeskAriResourceOwner = \"help\", HelpHelpDeskAriResourceType = \"help-desk\";\n\n// src/help/help-desk/manifest.ts\nvar helpHelpDeskAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: HelpHelpDeskAriResourceOwner,\n  resourceType: HelpHelpDeskAriResourceType,\n  resourceIdSlug: \"{activationId}/{helpDeskId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    helpDeskId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/help/help-desk/index.ts\nvar HelpHelpDeskAri = class _HelpHelpDeskAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpDeskId = opts.resourceIdSegmentValues.helpDeskId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get helpDeskId() {\n    return this._helpDeskId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: helpHelpDeskAriStaticOpts.qualifier,\n      platformQualifier: helpHelpDeskAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: helpHelpDeskAriStaticOpts.resourceOwner,\n      resourceType: helpHelpDeskAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.helpDeskId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        helpDeskId: opts.helpDeskId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, helpHelpDeskAriStaticOpts);\n    return new _HelpHelpDeskAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, helpHelpDeskAriStaticOpts);\n    return new _HelpHelpDeskAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      helpDeskId: this.helpDeskId\n    };\n  }\n};\n\n// src/help/layout/types.ts\nvar HelpLayoutAriResourceOwner = \"help\", HelpLayoutAriResourceType = \"layout\";\n\n// src/help/layout/manifest.ts\nvar helpLayoutAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: HelpLayoutAriResourceOwner,\n  resourceType: HelpLayoutAriResourceType,\n  resourceIdSlug: \"{activationId}/{layoutId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    layoutId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/help/layout/index.ts\nvar HelpLayoutAri = class _HelpLayoutAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._layoutId = opts.resourceIdSegmentValues.layoutId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get layoutId() {\n    return this._layoutId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: helpLayoutAriStaticOpts.qualifier,\n      platformQualifier: helpLayoutAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: helpLayoutAriStaticOpts.resourceOwner,\n      resourceType: helpLayoutAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.layoutId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        layoutId: opts.layoutId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, helpLayoutAriStaticOpts);\n    return new _HelpLayoutAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, helpLayoutAriStaticOpts);\n    return new _HelpLayoutAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      layoutId: this.layoutId\n    };\n  }\n};\n\n// src/help/portal/types.ts\nvar HelpPortalAriResourceOwner = \"help\", HelpPortalAriResourceType = \"portal\";\n\n// src/help/portal/manifest.ts\nvar helpPortalAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: HelpPortalAriResourceOwner,\n  resourceType: HelpPortalAriResourceType,\n  resourceIdSlug: \"{activationId}/{helpObjectId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    helpObjectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/help/portal/index.ts\nvar HelpPortalAri = class _HelpPortalAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpObjectId = opts.resourceIdSegmentValues.helpObjectId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get helpObjectId() {\n    return this._helpObjectId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: helpPortalAriStaticOpts.qualifier,\n      platformQualifier: helpPortalAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: helpPortalAriStaticOpts.resourceOwner,\n      resourceType: helpPortalAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.helpObjectId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        helpObjectId: opts.helpObjectId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, helpPortalAriStaticOpts);\n    return new _HelpPortalAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, helpPortalAriStaticOpts);\n    return new _HelpPortalAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      helpObjectId: this.helpObjectId\n    };\n  }\n};\n\n// src/help/request-form/types.ts\nvar HelpRequestFormAriResourceOwner = \"help\", HelpRequestFormAriResourceType = \"request-form\";\n\n// src/help/request-form/manifest.ts\nvar helpRequestFormAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: HelpRequestFormAriResourceOwner,\n  resourceType: HelpRequestFormAriResourceType,\n  resourceIdSlug: \"{activationId}/{helpObjectId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    helpObjectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/help/request-form/index.ts\nvar HelpRequestFormAri = class _HelpRequestFormAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._helpObjectId = opts.resourceIdSegmentValues.helpObjectId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get helpObjectId() {\n    return this._helpObjectId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: helpRequestFormAriStaticOpts.qualifier,\n      platformQualifier: helpRequestFormAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: helpRequestFormAriStaticOpts.resourceOwner,\n      resourceType: helpRequestFormAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.helpObjectId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        helpObjectId: opts.helpObjectId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, helpRequestFormAriStaticOpts);\n    return new _HelpRequestFormAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, helpRequestFormAriStaticOpts);\n    return new _HelpRequestFormAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      helpObjectId: this.helpObjectId\n    };\n  }\n};\n\n// src/identity/app/types.ts\nvar IdentityAppAriResourceOwner = \"identity\", IdentityAppAriResourceType = \"app\";\n\n// src/identity/app/manifest.ts\nvar identityAppAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityAppAriResourceOwner,\n  resourceType: IdentityAppAriResourceType,\n  resourceIdSlug: \"{platform}/{appId}\",\n  resourceIdSegmentFormats: {\n    platform: /(android|ios|macos)/,\n    // eslint-disable-line no-useless-escape\n    appId: /(([a-zA-Z]+)\\.)+([a-zA-Z]+)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/app/index.ts\nvar IdentityAppAri = class _IdentityAppAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._platform = opts.resourceIdSegmentValues.platform, this._appId = opts.resourceIdSegmentValues.appId;\n  }\n  get platform() {\n    return this._platform;\n  }\n  get appId() {\n    return this._appId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityAppAriStaticOpts.qualifier,\n      platformQualifier: identityAppAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityAppAriStaticOpts.resourceOwner,\n      resourceType: identityAppAriStaticOpts.resourceType,\n      resourceId: `${opts.platform}/${opts.appId}`,\n      resourceIdSegmentValues: {\n        platform: opts.platform,\n        appId: opts.appId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityAppAriStaticOpts);\n    return new _IdentityAppAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityAppAriStaticOpts);\n    return new _IdentityAppAri(opts);\n  }\n  getVariables() {\n    return {\n      platform: this.platform,\n      appId: this.appId\n    };\n  }\n};\n\n// src/identity/auth-policy/types.ts\nvar IdentityAuthPolicyAriResourceOwner = \"identity\", IdentityAuthPolicyAriResourceType = \"auth-policy\";\n\n// src/identity/auth-policy/manifest.ts\nvar identityAuthPolicyAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityAuthPolicyAriResourceOwner,\n  resourceType: IdentityAuthPolicyAriResourceType,\n  resourceIdSlug: \"{authPolicyId}\",\n  resourceIdSegmentFormats: {\n    authPolicyId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/auth-policy/index.ts\nvar IdentityAuthPolicyAri = class _IdentityAuthPolicyAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._authPolicyId = opts.resourceIdSegmentValues.authPolicyId;\n  }\n  get authPolicyId() {\n    return this._authPolicyId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityAuthPolicyAriStaticOpts.qualifier,\n      platformQualifier: identityAuthPolicyAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityAuthPolicyAriStaticOpts.resourceOwner,\n      resourceType: identityAuthPolicyAriStaticOpts.resourceType,\n      resourceId: `${opts.authPolicyId}`,\n      resourceIdSegmentValues: {\n        authPolicyId: opts.authPolicyId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityAuthPolicyAriStaticOpts);\n    return new _IdentityAuthPolicyAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityAuthPolicyAriStaticOpts);\n    return new _IdentityAuthPolicyAri(opts);\n  }\n  getVariables() {\n    return {\n      authPolicyId: this.authPolicyId\n    };\n  }\n};\n\n// src/identity/customer-directory/types.ts\nvar IdentityCustomerDirectoryAriResourceOwner = \"identity\", IdentityCustomerDirectoryAriResourceType = \"customer-directory\";\n\n// src/identity/customer-directory/manifest.ts\nvar identityCustomerDirectoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityCustomerDirectoryAriResourceOwner,\n  resourceType: IdentityCustomerDirectoryAriResourceType,\n  resourceIdSlug: \"{customerDirectoryId}\",\n  resourceIdSegmentFormats: {\n    customerDirectoryId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/customer-directory/index.ts\nvar IdentityCustomerDirectoryAri = class _IdentityCustomerDirectoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._customerDirectoryId = opts.resourceIdSegmentValues.customerDirectoryId;\n  }\n  get customerDirectoryId() {\n    return this._customerDirectoryId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityCustomerDirectoryAriStaticOpts.qualifier,\n      platformQualifier: identityCustomerDirectoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityCustomerDirectoryAriStaticOpts.resourceOwner,\n      resourceType: identityCustomerDirectoryAriStaticOpts.resourceType,\n      resourceId: `${opts.customerDirectoryId}`,\n      resourceIdSegmentValues: {\n        customerDirectoryId: opts.customerDirectoryId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityCustomerDirectoryAriStaticOpts);\n    return new _IdentityCustomerDirectoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityCustomerDirectoryAriStaticOpts);\n    return new _IdentityCustomerDirectoryAri(opts);\n  }\n  getVariables() {\n    return {\n      customerDirectoryId: this.customerDirectoryId\n    };\n  }\n};\n\n// src/identity/customer-organization/types.ts\nvar IdentityCustomerOrganizationAriResourceOwner = \"identity\", IdentityCustomerOrganizationAriResourceType = \"customer-organization\";\n\n// src/identity/customer-organization/manifest.ts\nvar identityCustomerOrganizationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityCustomerOrganizationAriResourceOwner,\n  resourceType: IdentityCustomerOrganizationAriResourceType,\n  resourceIdSlug: \"{customerOrganizationId}\",\n  resourceIdSegmentFormats: {\n    customerOrganizationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/customer-organization/index.ts\nvar IdentityCustomerOrganizationAri = class _IdentityCustomerOrganizationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._customerOrganizationId = opts.resourceIdSegmentValues.customerOrganizationId;\n  }\n  get customerOrganizationId() {\n    return this._customerOrganizationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityCustomerOrganizationAriStaticOpts.qualifier,\n      platformQualifier: identityCustomerOrganizationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityCustomerOrganizationAriStaticOpts.resourceOwner,\n      resourceType: identityCustomerOrganizationAriStaticOpts.resourceType,\n      resourceId: `${opts.customerOrganizationId}`,\n      resourceIdSegmentValues: {\n        customerOrganizationId: opts.customerOrganizationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityCustomerOrganizationAriStaticOpts);\n    return new _IdentityCustomerOrganizationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityCustomerOrganizationAriStaticOpts);\n    return new _IdentityCustomerOrganizationAri(opts);\n  }\n  getVariables() {\n    return {\n      customerOrganizationId: this.customerOrganizationId\n    };\n  }\n};\n\n// src/identity/directory/types.ts\nvar IdentityDirectoryAriResourceOwner = \"identity\", IdentityDirectoryAriResourceType = \"directory\";\n\n// src/identity/directory/manifest.ts\nvar identityDirectoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityDirectoryAriResourceOwner,\n  resourceType: IdentityDirectoryAriResourceType,\n  resourceIdSlug: \"{directoryId}\",\n  resourceIdSegmentFormats: {\n    directoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/directory/index.ts\nvar IdentityDirectoryAri = class _IdentityDirectoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._directoryId = opts.resourceIdSegmentValues.directoryId;\n  }\n  get directoryId() {\n    return this._directoryId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityDirectoryAriStaticOpts.qualifier,\n      platformQualifier: identityDirectoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityDirectoryAriStaticOpts.resourceOwner,\n      resourceType: identityDirectoryAriStaticOpts.resourceType,\n      resourceId: `${opts.directoryId}`,\n      resourceIdSegmentValues: {\n        directoryId: opts.directoryId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityDirectoryAriStaticOpts);\n    return new _IdentityDirectoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityDirectoryAriStaticOpts);\n    return new _IdentityDirectoryAri(opts);\n  }\n  getVariables() {\n    return {\n      directoryId: this.directoryId\n    };\n  }\n};\n\n// src/identity/domain/types.ts\nvar IdentityDomainAriResourceOwner = \"identity\", IdentityDomainAriResourceType = \"domain\";\n\n// src/identity/domain/manifest.ts\nvar identityDomainAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityDomainAriResourceOwner,\n  resourceType: IdentityDomainAriResourceType,\n  resourceIdSlug: \"{base64Domain}\",\n  resourceIdSegmentFormats: {\n    base64Domain: /[a-zA-Z0-9=]+={0,1}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/domain/index.ts\nvar IdentityDomainAri = class _IdentityDomainAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._base64Domain = opts.resourceIdSegmentValues.base64Domain;\n  }\n  get base64Domain() {\n    return this._base64Domain;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityDomainAriStaticOpts.qualifier,\n      platformQualifier: identityDomainAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityDomainAriStaticOpts.resourceOwner,\n      resourceType: identityDomainAriStaticOpts.resourceType,\n      resourceId: `${opts.base64Domain}`,\n      resourceIdSegmentValues: {\n        base64Domain: opts.base64Domain\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityDomainAriStaticOpts);\n    return new _IdentityDomainAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityDomainAriStaticOpts);\n    return new _IdentityDomainAri(opts);\n  }\n  getVariables() {\n    return {\n      base64Domain: this.base64Domain\n    };\n  }\n};\n\n// src/identity/group/types.ts\nvar IdentityGroupAriResourceOwner = \"identity\", IdentityGroupAriResourceType = \"group\";\n\n// src/identity/group/manifest.ts\nvar identityGroupAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityGroupAriResourceOwner,\n  resourceType: IdentityGroupAriResourceType,\n  resourceIdSlug: \"{groupId}\",\n  resourceIdSegmentFormats: {\n    groupId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/group/index.ts\nvar IdentityGroupAri = class _IdentityGroupAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._groupId = opts.resourceIdSegmentValues.groupId;\n  }\n  get groupId() {\n    return this._groupId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityGroupAriStaticOpts.qualifier,\n      platformQualifier: identityGroupAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityGroupAriStaticOpts.resourceOwner,\n      resourceType: identityGroupAriStaticOpts.resourceType,\n      resourceId: `${opts.groupId}`,\n      resourceIdSegmentValues: {\n        groupId: opts.groupId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityGroupAriStaticOpts);\n    return new _IdentityGroupAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityGroupAriStaticOpts);\n    return new _IdentityGroupAri(opts);\n  }\n  getVariables() {\n    return {\n      groupId: this.groupId\n    };\n  }\n};\n\n// src/identity/oauthClient/types.ts\nvar IdentityOauthClientAriResourceOwner = \"identity\", IdentityOauthClientAriResourceType = \"oauthClient\";\n\n// src/identity/oauthClient/manifest.ts\nvar identityOauthClientAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityOauthClientAriResourceOwner,\n  resourceType: IdentityOauthClientAriResourceType,\n  resourceIdSlug: \"{clientId}\",\n  resourceIdSegmentFormats: {\n    clientId: /[0-9a-zA-Z-_]{5,50}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/oauthClient/index.ts\nvar IdentityOauthClientAri = class _IdentityOauthClientAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._clientId = opts.resourceIdSegmentValues.clientId;\n  }\n  get clientId() {\n    return this._clientId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityOauthClientAriStaticOpts.qualifier,\n      platformQualifier: identityOauthClientAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityOauthClientAriStaticOpts.resourceOwner,\n      resourceType: identityOauthClientAriStaticOpts.resourceType,\n      resourceId: `${opts.clientId}`,\n      resourceIdSegmentValues: {\n        clientId: opts.clientId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityOauthClientAriStaticOpts);\n    return new _IdentityOauthClientAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityOauthClientAriStaticOpts);\n    return new _IdentityOauthClientAri(opts);\n  }\n  getVariables() {\n    return {\n      clientId: this.clientId\n    };\n  }\n};\n\n// src/identity/role/types.ts\nvar IdentityRoleAriResourceOwner = \"identity\", IdentityRoleAriResourceType = \"role\";\n\n// src/identity/role/manifest.ts\nvar identityRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]*$\"),\n  resourceOwner: IdentityRoleAriResourceOwner,\n  resourceType: IdentityRoleAriResourceType,\n  resourceIdSlug: \"{roleId}\",\n  resourceIdSegmentFormats: {\n    roleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/role/index.ts\nvar IdentityRoleAri = class _IdentityRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._optionalSiteId = opts.cloudId || \"\", this._roleId = opts.resourceIdSegmentValues.roleId;\n  }\n  get optionalSiteId() {\n    return this._optionalSiteId;\n  }\n  get roleId() {\n    return this._roleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityRoleAriStaticOpts.qualifier,\n      platformQualifier: identityRoleAriStaticOpts.platformQualifier,\n      cloudId: opts.optionalSiteId,\n      resourceOwner: identityRoleAriStaticOpts.resourceOwner,\n      resourceType: identityRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.roleId}`,\n      resourceIdSegmentValues: {\n        roleId: opts.roleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityRoleAriStaticOpts);\n    return new _IdentityRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityRoleAriStaticOpts);\n    return new _IdentityRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      optionalSiteId: this.optionalSiteId,\n      roleId: this.roleId\n    };\n  }\n};\n\n// src/identity/site/types.ts\nvar IdentitySiteAriResourceOwner = \"identity\", IdentitySiteAriResourceType = \"site\";\n\n// src/identity/site/manifest.ts\nvar identitySiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentitySiteAriResourceOwner,\n  resourceType: IdentitySiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/site/index.ts\nvar IdentitySiteAri = class _IdentitySiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identitySiteAriStaticOpts.qualifier,\n      platformQualifier: identitySiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identitySiteAriStaticOpts.resourceOwner,\n      resourceType: identitySiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identitySiteAriStaticOpts);\n    return new _IdentitySiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identitySiteAriStaticOpts);\n    return new _IdentitySiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/identity/team/types.ts\nvar IdentityTeamAriResourceOwner = \"identity\", IdentityTeamAriResourceType = \"team\";\n\n// src/identity/team/manifest.ts\nvar identityTeamAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityTeamAriResourceOwner,\n  resourceType: IdentityTeamAriResourceType,\n  resourceIdSlug: \"{teamId}\",\n  resourceIdSegmentFormats: {\n    teamId: /[a-zA-Z0-9.\\-_~]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/team/index.ts\nvar IdentityTeamAri = class _IdentityTeamAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._teamId = opts.resourceIdSegmentValues.teamId;\n  }\n  get teamId() {\n    return this._teamId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityTeamAriStaticOpts.qualifier,\n      platformQualifier: identityTeamAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityTeamAriStaticOpts.resourceOwner,\n      resourceType: identityTeamAriStaticOpts.resourceType,\n      resourceId: `${opts.teamId}`,\n      resourceIdSegmentValues: {\n        teamId: opts.teamId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityTeamAriStaticOpts);\n    return new _IdentityTeamAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityTeamAriStaticOpts);\n    return new _IdentityTeamAri(opts);\n  }\n  getVariables() {\n    return {\n      teamId: this.teamId\n    };\n  }\n};\n\n// src/identity/team-member/types.ts\nvar IdentityTeamMemberAriResourceOwner = \"identity\", IdentityTeamMemberAriResourceType = \"team-member\";\n\n// src/identity/team-member/manifest.ts\nvar identityTeamMemberAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityTeamMemberAriResourceOwner,\n  resourceType: IdentityTeamMemberAriResourceType,\n  resourceIdSlug: \"{teamId}/{userId}\",\n  resourceIdSegmentFormats: {\n    teamId: /[a-zA-Z0-9.\\-_~]+/,\n    // eslint-disable-line no-useless-escape\n    userId: /[a-zA-Z0-9_\\-\\:]{1,128}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/team-member/index.ts\nvar IdentityTeamMemberAri = class _IdentityTeamMemberAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._teamId = opts.resourceIdSegmentValues.teamId, this._userId = opts.resourceIdSegmentValues.userId;\n  }\n  get teamId() {\n    return this._teamId;\n  }\n  get userId() {\n    return this._userId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityTeamMemberAriStaticOpts.qualifier,\n      platformQualifier: identityTeamMemberAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityTeamMemberAriStaticOpts.resourceOwner,\n      resourceType: identityTeamMemberAriStaticOpts.resourceType,\n      resourceId: `${opts.teamId}/${opts.userId}`,\n      resourceIdSegmentValues: {\n        teamId: opts.teamId,\n        userId: opts.userId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityTeamMemberAriStaticOpts);\n    return new _IdentityTeamMemberAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityTeamMemberAriStaticOpts);\n    return new _IdentityTeamMemberAri(opts);\n  }\n  getVariables() {\n    return {\n      teamId: this.teamId,\n      userId: this.userId\n    };\n  }\n};\n\n// src/identity/third-party-group/types.ts\nvar IdentityThirdPartyGroupAriResourceOwner = \"identity\", IdentityThirdPartyGroupAriResourceType = \"third-party-group\";\n\n// src/identity/third-party-group/manifest.ts\nvar identityThirdPartyGroupAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityThirdPartyGroupAriResourceOwner,\n  resourceType: IdentityThirdPartyGroupAriResourceType,\n  resourceIdSlug: \"{directoryId}/{groupId}\",\n  resourceIdSegmentFormats: {\n    directoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    groupId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/third-party-group/index.ts\nvar IdentityThirdPartyGroupAri = class _IdentityThirdPartyGroupAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._directoryId = opts.resourceIdSegmentValues.directoryId, this._groupId = opts.resourceIdSegmentValues.groupId;\n  }\n  get directoryId() {\n    return this._directoryId;\n  }\n  get groupId() {\n    return this._groupId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityThirdPartyGroupAriStaticOpts.qualifier,\n      platformQualifier: identityThirdPartyGroupAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityThirdPartyGroupAriStaticOpts.resourceOwner,\n      resourceType: identityThirdPartyGroupAriStaticOpts.resourceType,\n      resourceId: `${opts.directoryId}/${opts.groupId}`,\n      resourceIdSegmentValues: {\n        directoryId: opts.directoryId,\n        groupId: opts.groupId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityThirdPartyGroupAriStaticOpts);\n    return new _IdentityThirdPartyGroupAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityThirdPartyGroupAriStaticOpts);\n    return new _IdentityThirdPartyGroupAri(opts);\n  }\n  getVariables() {\n    return {\n      directoryId: this.directoryId,\n      groupId: this.groupId\n    };\n  }\n};\n\n// src/identity/third-party-user/types.ts\nvar IdentityThirdPartyUserAriResourceOwner = \"identity\", IdentityThirdPartyUserAriResourceType = \"third-party-user\";\n\n// src/identity/third-party-user/manifest.ts\nvar identityThirdPartyUserAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityThirdPartyUserAriResourceOwner,\n  resourceType: IdentityThirdPartyUserAriResourceType,\n  resourceIdSlug: \"{directoryId}/{userId}\",\n  resourceIdSegmentFormats: {\n    directoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    userId: /[a-zA-Z0-9_\\-\\:]{1,128}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/third-party-user/index.ts\nvar IdentityThirdPartyUserAri = class _IdentityThirdPartyUserAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._directoryId = opts.resourceIdSegmentValues.directoryId, this._userId = opts.resourceIdSegmentValues.userId;\n  }\n  get directoryId() {\n    return this._directoryId;\n  }\n  get userId() {\n    return this._userId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityThirdPartyUserAriStaticOpts.qualifier,\n      platformQualifier: identityThirdPartyUserAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityThirdPartyUserAriStaticOpts.resourceOwner,\n      resourceType: identityThirdPartyUserAriStaticOpts.resourceType,\n      resourceId: `${opts.directoryId}/${opts.userId}`,\n      resourceIdSegmentValues: {\n        directoryId: opts.directoryId,\n        userId: opts.userId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityThirdPartyUserAriStaticOpts);\n    return new _IdentityThirdPartyUserAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityThirdPartyUserAriStaticOpts);\n    return new _IdentityThirdPartyUserAri(opts);\n  }\n  getVariables() {\n    return {\n      directoryId: this.directoryId,\n      userId: this.userId\n    };\n  }\n};\n\n// src/identity/user/types.ts\nvar IdentityUserAriResourceOwner = \"identity\", IdentityUserAriResourceType = \"user\";\n\n// src/identity/user/manifest.ts\nvar identityUserAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityUserAriResourceOwner,\n  resourceType: IdentityUserAriResourceType,\n  resourceIdSlug: \"{userId}\",\n  resourceIdSegmentFormats: {\n    userId: /[a-zA-Z0-9_\\-\\:]{1,128}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/user/index.ts\nvar IdentityUserAri = class _IdentityUserAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._userId = opts.resourceIdSegmentValues.userId;\n  }\n  get userId() {\n    return this._userId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityUserAriStaticOpts.qualifier,\n      platformQualifier: identityUserAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityUserAriStaticOpts.resourceOwner,\n      resourceType: identityUserAriStaticOpts.resourceType,\n      resourceId: `${opts.userId}`,\n      resourceIdSegmentValues: {\n        userId: opts.userId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityUserAriStaticOpts);\n    return new _IdentityUserAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityUserAriStaticOpts);\n    return new _IdentityUserAri(opts);\n  }\n  getVariables() {\n    return {\n      userId: this.userId\n    };\n  }\n};\n\n// src/identity/userbase/types.ts\nvar IdentityUserbaseAriResourceOwner = \"identity\", IdentityUserbaseAriResourceType = \"userbase\";\n\n// src/identity/userbase/manifest.ts\nvar identityUserbaseAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityUserbaseAriResourceOwner,\n  resourceType: IdentityUserbaseAriResourceType,\n  resourceIdSlug: \"{userbaseId}\",\n  resourceIdSegmentFormats: {\n    userbaseId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/userbase/index.ts\nvar IdentityUserbaseAri = class _IdentityUserbaseAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._userbaseId = opts.resourceIdSegmentValues.userbaseId;\n  }\n  get userbaseId() {\n    return this._userbaseId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityUserbaseAriStaticOpts.qualifier,\n      platformQualifier: identityUserbaseAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityUserbaseAriStaticOpts.resourceOwner,\n      resourceType: identityUserbaseAriStaticOpts.resourceType,\n      resourceId: `${opts.userbaseId}`,\n      resourceIdSegmentValues: {\n        userbaseId: opts.userbaseId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityUserbaseAriStaticOpts);\n    return new _IdentityUserbaseAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityUserbaseAriStaticOpts);\n    return new _IdentityUserbaseAri(opts);\n  }\n  getVariables() {\n    return {\n      userbaseId: this.userbaseId\n    };\n  }\n};\n\n// src/identity/userGrant/types.ts\nvar IdentityUserGrantAriResourceOwner = \"identity\", IdentityUserGrantAriResourceType = \"userGrant\";\n\n// src/identity/userGrant/manifest.ts\nvar identityUserGrantAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: IdentityUserGrantAriResourceOwner,\n  resourceType: IdentityUserGrantAriResourceType,\n  resourceIdSlug: \"{userId}-{clientId}\",\n  resourceIdSegmentFormats: {\n    userId: /[a-zA-Z0-9_\\-\\:]{1,128}/,\n    // eslint-disable-line no-useless-escape\n    clientId: /[0-9a-zA-Z-_]{5,50}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/identity/userGrant/index.ts\nvar IdentityUserGrantAri = class _IdentityUserGrantAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._userId = opts.resourceIdSegmentValues.userId, this._clientId = opts.resourceIdSegmentValues.clientId;\n  }\n  get userId() {\n    return this._userId;\n  }\n  get clientId() {\n    return this._clientId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: identityUserGrantAriStaticOpts.qualifier,\n      platformQualifier: identityUserGrantAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: identityUserGrantAriStaticOpts.resourceOwner,\n      resourceType: identityUserGrantAriStaticOpts.resourceType,\n      resourceId: `${opts.userId}-${opts.clientId}`,\n      resourceIdSegmentValues: {\n        userId: opts.userId,\n        clientId: opts.clientId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, identityUserGrantAriStaticOpts);\n    return new _IdentityUserGrantAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, identityUserGrantAriStaticOpts);\n    return new _IdentityUserGrantAri(opts);\n  }\n  getVariables() {\n    return {\n      userId: this.userId,\n      clientId: this.clientId\n    };\n  }\n};\n\n// src/jira/announcement-banner/types.ts\nvar JiraAnnouncementBannerAriResourceOwner = \"jira\", JiraAnnouncementBannerAriResourceType = \"announcement-banner\";\n\n// src/jira/announcement-banner/manifest.ts\nvar jiraAnnouncementBannerAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraAnnouncementBannerAriResourceOwner,\n  resourceType: JiraAnnouncementBannerAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{announcementBannerHashId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    announcementBannerHashId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/announcement-banner/index.ts\nvar JiraAnnouncementBannerAri = class _JiraAnnouncementBannerAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._announcementBannerHashId = opts.resourceIdSegmentValues.announcementBannerHashId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get announcementBannerHashId() {\n    return this._announcementBannerHashId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraAnnouncementBannerAriStaticOpts.qualifier,\n      platformQualifier: jiraAnnouncementBannerAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraAnnouncementBannerAriStaticOpts.resourceOwner,\n      resourceType: jiraAnnouncementBannerAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.announcementBannerHashId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        announcementBannerHashId: opts.announcementBannerHashId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAnnouncementBannerAriStaticOpts);\n    return new _JiraAnnouncementBannerAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraAnnouncementBannerAriStaticOpts);\n    return new _JiraAnnouncementBannerAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      announcementBannerHashId: this.announcementBannerHashId\n    };\n  }\n};\n\n// src/jira/available-fields/types.ts\nvar JiraAvailableFieldsAriResourceOwner = \"jira\", JiraAvailableFieldsAriResourceType = \"available-fields\";\n\n// src/jira/available-fields/manifest.ts\nvar jiraAvailableFieldsAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraAvailableFieldsAriResourceOwner,\n  resourceType: JiraAvailableFieldsAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{projectId}/{issueTypeId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    projectId: /[0-9]+/,\n    // eslint-disable-line no-useless-escape\n    issueTypeId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/available-fields/index.ts\nvar JiraAvailableFieldsAri = class _JiraAvailableFieldsAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId, this._issueTypeId = opts.resourceIdSegmentValues.issueTypeId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get projectId() {\n    return this._projectId;\n  }\n  get issueTypeId() {\n    return this._issueTypeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraAvailableFieldsAriStaticOpts.qualifier,\n      platformQualifier: jiraAvailableFieldsAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraAvailableFieldsAriStaticOpts.resourceOwner,\n      resourceType: jiraAvailableFieldsAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.projectId}/${opts.issueTypeId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        projectId: opts.projectId,\n        issueTypeId: opts.issueTypeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAvailableFieldsAriStaticOpts);\n    return new _JiraAvailableFieldsAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraAvailableFieldsAriStaticOpts);\n    return new _JiraAvailableFieldsAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      projectId: this.projectId,\n      issueTypeId: this.issueTypeId\n    };\n  }\n};\n\n// src/jira/branch/types.ts\nvar JiraBranchAriResourceOwner = \"jira\", JiraBranchAriResourceType = \"branch\";\n\n// src/jira/branch/manifest.ts\nvar jiraBranchAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraBranchAriResourceOwner,\n  resourceType: JiraBranchAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{branchId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    branchId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/branch/index.ts\nvar JiraBranchAri = class _JiraBranchAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._branchId = opts.resourceIdSegmentValues.branchId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get branchId() {\n    return this._branchId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraBranchAriStaticOpts.qualifier,\n      platformQualifier: jiraBranchAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraBranchAriStaticOpts.resourceOwner,\n      resourceType: jiraBranchAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.branchId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        branchId: opts.branchId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBranchAriStaticOpts);\n    return new _JiraBranchAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraBranchAriStaticOpts);\n    return new _JiraBranchAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      branchId: this.branchId\n    };\n  }\n};\n\n// src/jira/branch-history/types.ts\nvar JiraBranchHistoryAriResourceOwner = \"jira\", JiraBranchHistoryAriResourceType = \"branch-history\";\n\n// src/jira/branch-history/manifest.ts\nvar jiraBranchHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraBranchHistoryAriResourceOwner,\n  resourceType: JiraBranchHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{branchId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    branchId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/branch-history/index.ts\nvar JiraBranchHistoryAri = class _JiraBranchHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._branchId = opts.resourceIdSegmentValues.branchId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get branchId() {\n    return this._branchId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraBranchHistoryAriStaticOpts.qualifier,\n      platformQualifier: jiraBranchHistoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraBranchHistoryAriStaticOpts.resourceOwner,\n      resourceType: jiraBranchHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.branchId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        branchId: opts.branchId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBranchHistoryAriStaticOpts);\n    return new _JiraBranchHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraBranchHistoryAriStaticOpts);\n    return new _JiraBranchHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      branchId: this.branchId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/jira/build/types.ts\nvar JiraBuildAriResourceOwner = \"jira\", JiraBuildAriResourceType = \"build\";\n\n// src/jira/build/manifest.ts\nvar jiraBuildAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraBuildAriResourceOwner,\n  resourceType: JiraBuildAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{buildId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    buildId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/build/index.ts\nvar JiraBuildAri = class _JiraBuildAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._buildId = opts.resourceIdSegmentValues.buildId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get buildId() {\n    return this._buildId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraBuildAriStaticOpts.qualifier,\n      platformQualifier: jiraBuildAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraBuildAriStaticOpts.resourceOwner,\n      resourceType: jiraBuildAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.buildId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        buildId: opts.buildId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBuildAriStaticOpts);\n    return new _JiraBuildAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraBuildAriStaticOpts);\n    return new _JiraBuildAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      buildId: this.buildId\n    };\n  }\n};\n\n// src/jira/build-history/types.ts\nvar JiraBuildHistoryAriResourceOwner = \"jira\", JiraBuildHistoryAriResourceType = \"build-history\";\n\n// src/jira/build-history/manifest.ts\nvar jiraBuildHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraBuildHistoryAriResourceOwner,\n  resourceType: JiraBuildHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{buildId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    buildId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/build-history/index.ts\nvar JiraBuildHistoryAri = class _JiraBuildHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._buildId = opts.resourceIdSegmentValues.buildId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get buildId() {\n    return this._buildId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraBuildHistoryAriStaticOpts.qualifier,\n      platformQualifier: jiraBuildHistoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraBuildHistoryAriStaticOpts.resourceOwner,\n      resourceType: jiraBuildHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.buildId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        buildId: opts.buildId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBuildHistoryAriStaticOpts);\n    return new _JiraBuildHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraBuildHistoryAriStaticOpts);\n    return new _JiraBuildHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      buildId: this.buildId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/jira/bulk-operation-task/types.ts\nvar JiraBulkOperationTaskAriResourceOwner = \"jira\", JiraBulkOperationTaskAriResourceType = \"bulk-operation-task\";\n\n// src/jira/bulk-operation-task/manifest.ts\nvar jiraBulkOperationTaskAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraBulkOperationTaskAriResourceOwner,\n  resourceType: JiraBulkOperationTaskAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{taskId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    taskId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/bulk-operation-task/index.ts\nvar JiraBulkOperationTaskAri = class _JiraBulkOperationTaskAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._taskId = opts.resourceIdSegmentValues.taskId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get taskId() {\n    return this._taskId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraBulkOperationTaskAriStaticOpts.qualifier,\n      platformQualifier: jiraBulkOperationTaskAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraBulkOperationTaskAriStaticOpts.resourceOwner,\n      resourceType: jiraBulkOperationTaskAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.taskId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        taskId: opts.taskId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraBulkOperationTaskAriStaticOpts);\n    return new _JiraBulkOperationTaskAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraBulkOperationTaskAriStaticOpts);\n    return new _JiraBulkOperationTaskAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      taskId: this.taskId\n    };\n  }\n};\n\n// src/jira/comment/types.ts\nvar JiraCommentAriResourceOwner = \"jira\", JiraCommentAriResourceType = \"comment\";\n\n// src/jira/comment/manifest.ts\nvar jiraCommentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraCommentAriResourceOwner,\n  resourceType: JiraCommentAriResourceType,\n  resourceIdSlug: \"{commentId}\",\n  resourceIdSegmentFormats: {\n    commentId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/comment/index.ts\nvar JiraCommentAri = class _JiraCommentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._commentId = opts.resourceIdSegmentValues.commentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get commentId() {\n    return this._commentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraCommentAriStaticOpts.qualifier,\n      platformQualifier: jiraCommentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraCommentAriStaticOpts.resourceOwner,\n      resourceType: jiraCommentAriStaticOpts.resourceType,\n      resourceId: `${opts.commentId}`,\n      resourceIdSegmentValues: {\n        commentId: opts.commentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCommentAriStaticOpts);\n    return new _JiraCommentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraCommentAriStaticOpts);\n    return new _JiraCommentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      commentId: this.commentId\n    };\n  }\n};\n\n// src/jira/commit/types.ts\nvar JiraCommitAriResourceOwner = \"jira\", JiraCommitAriResourceType = \"commit\";\n\n// src/jira/commit/manifest.ts\nvar jiraCommitAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraCommitAriResourceOwner,\n  resourceType: JiraCommitAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{commitId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    commitId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/commit/index.ts\nvar JiraCommitAri = class _JiraCommitAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._commitId = opts.resourceIdSegmentValues.commitId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get commitId() {\n    return this._commitId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraCommitAriStaticOpts.qualifier,\n      platformQualifier: jiraCommitAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraCommitAriStaticOpts.resourceOwner,\n      resourceType: jiraCommitAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.commitId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        commitId: opts.commitId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCommitAriStaticOpts);\n    return new _JiraCommitAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraCommitAriStaticOpts);\n    return new _JiraCommitAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      commitId: this.commitId\n    };\n  }\n};\n\n// src/jira/component/types.ts\nvar JiraComponentAriResourceOwner = \"jira\", JiraComponentAriResourceType = \"component\";\n\n// src/jira/component/manifest.ts\nvar jiraComponentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraComponentAriResourceOwner,\n  resourceType: JiraComponentAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{componentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    componentId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/component/index.ts\nvar JiraComponentAri = class _JiraComponentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._componentId = opts.resourceIdSegmentValues.componentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get componentId() {\n    return this._componentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraComponentAriStaticOpts.qualifier,\n      platformQualifier: jiraComponentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraComponentAriStaticOpts.resourceOwner,\n      resourceType: jiraComponentAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.componentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        componentId: opts.componentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraComponentAriStaticOpts);\n    return new _JiraComponentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraComponentAriStaticOpts);\n    return new _JiraComponentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      componentId: this.componentId\n    };\n  }\n};\n\n// src/jira/connect-app/types.ts\nvar JiraConnectAppAriResourceOwner = \"jira\", JiraConnectAppAriResourceType = \"connect-app\";\n\n// src/jira/connect-app/manifest.ts\nvar jiraConnectAppAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraConnectAppAriResourceOwner,\n  resourceType: JiraConnectAppAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{appKey}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    appKey: /[a-zA-Z0-9-._]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/connect-app/index.ts\nvar JiraConnectAppAri = class _JiraConnectAppAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._appKey = opts.resourceIdSegmentValues.appKey;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get appKey() {\n    return this._appKey;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraConnectAppAriStaticOpts.qualifier,\n      platformQualifier: jiraConnectAppAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraConnectAppAriStaticOpts.resourceOwner,\n      resourceType: jiraConnectAppAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.appKey}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        appKey: opts.appKey\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraConnectAppAriStaticOpts);\n    return new _JiraConnectAppAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraConnectAppAriStaticOpts);\n    return new _JiraConnectAppAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      appKey: this.appKey\n    };\n  }\n};\n\n// src/jira/dashboard/types.ts\nvar JiraDashboardAriResourceOwner = \"jira\", JiraDashboardAriResourceType = \"dashboard\";\n\n// src/jira/dashboard/manifest.ts\nvar jiraDashboardAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraDashboardAriResourceOwner,\n  resourceType: JiraDashboardAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{dashboardId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    dashboardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/dashboard/index.ts\nvar JiraDashboardAri = class _JiraDashboardAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._dashboardId = opts.resourceIdSegmentValues.dashboardId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get dashboardId() {\n    return this._dashboardId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraDashboardAriStaticOpts.qualifier,\n      platformQualifier: jiraDashboardAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraDashboardAriStaticOpts.resourceOwner,\n      resourceType: jiraDashboardAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.dashboardId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        dashboardId: opts.dashboardId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDashboardAriStaticOpts);\n    return new _JiraDashboardAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraDashboardAriStaticOpts);\n    return new _JiraDashboardAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      dashboardId: this.dashboardId\n    };\n  }\n};\n\n// src/jira/deployment/types.ts\nvar JiraDeploymentAriResourceOwner = \"jira\", JiraDeploymentAriResourceType = \"deployment\";\n\n// src/jira/deployment/manifest.ts\nvar jiraDeploymentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraDeploymentAriResourceOwner,\n  resourceType: JiraDeploymentAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{deploymentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    deploymentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/deployment/index.ts\nvar JiraDeploymentAri = class _JiraDeploymentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get deploymentId() {\n    return this._deploymentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraDeploymentAriStaticOpts.qualifier,\n      platformQualifier: jiraDeploymentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraDeploymentAriStaticOpts.resourceOwner,\n      resourceType: jiraDeploymentAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.deploymentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        deploymentId: opts.deploymentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDeploymentAriStaticOpts);\n    return new _JiraDeploymentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraDeploymentAriStaticOpts);\n    return new _JiraDeploymentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      deploymentId: this.deploymentId\n    };\n  }\n};\n\n// src/jira/deployment-history/types.ts\nvar JiraDeploymentHistoryAriResourceOwner = \"jira\", JiraDeploymentHistoryAriResourceType = \"deployment-history\";\n\n// src/jira/deployment-history/manifest.ts\nvar jiraDeploymentHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraDeploymentHistoryAriResourceOwner,\n  resourceType: JiraDeploymentHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{deploymentId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    deploymentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/deployment-history/index.ts\nvar JiraDeploymentHistoryAri = class _JiraDeploymentHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get deploymentId() {\n    return this._deploymentId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraDeploymentHistoryAriStaticOpts.qualifier,\n      platformQualifier: jiraDeploymentHistoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraDeploymentHistoryAriStaticOpts.resourceOwner,\n      resourceType: jiraDeploymentHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.deploymentId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        deploymentId: opts.deploymentId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDeploymentHistoryAriStaticOpts);\n    return new _JiraDeploymentHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraDeploymentHistoryAriStaticOpts);\n    return new _JiraDeploymentHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      deploymentId: this.deploymentId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/jira/design/types.ts\nvar JiraDesignAriResourceOwner = \"jira\", JiraDesignAriResourceType = \"design\";\n\n// src/jira/design/manifest.ts\nvar jiraDesignAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraDesignAriResourceOwner,\n  resourceType: JiraDesignAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{designId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    designId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/design/index.ts\nvar JiraDesignAri = class _JiraDesignAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._designId = opts.resourceIdSegmentValues.designId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get designId() {\n    return this._designId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraDesignAriStaticOpts.qualifier,\n      platformQualifier: jiraDesignAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraDesignAriStaticOpts.resourceOwner,\n      resourceType: jiraDesignAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.designId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        designId: opts.designId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDesignAriStaticOpts);\n    return new _JiraDesignAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraDesignAriStaticOpts);\n    return new _JiraDesignAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      designId: this.designId\n    };\n  }\n};\n\n// src/jira/design-history/types.ts\nvar JiraDesignHistoryAriResourceOwner = \"jira\", JiraDesignHistoryAriResourceType = \"design-history\";\n\n// src/jira/design-history/manifest.ts\nvar jiraDesignHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraDesignHistoryAriResourceOwner,\n  resourceType: JiraDesignHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{designId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    designId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/design-history/index.ts\nvar JiraDesignHistoryAri = class _JiraDesignHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._designId = opts.resourceIdSegmentValues.designId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get designId() {\n    return this._designId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraDesignHistoryAriStaticOpts.qualifier,\n      platformQualifier: jiraDesignHistoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraDesignHistoryAriStaticOpts.resourceOwner,\n      resourceType: jiraDesignHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.designId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        designId: opts.designId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDesignHistoryAriStaticOpts);\n    return new _JiraDesignHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraDesignHistoryAriStaticOpts);\n    return new _JiraDesignHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      designId: this.designId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/jira/devops-component/types.ts\nvar JiraDevopsComponentAriResourceOwner = \"jira\", JiraDevopsComponentAriResourceType = \"devops-component\";\n\n// src/jira/devops-component/manifest.ts\nvar jiraDevopsComponentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraDevopsComponentAriResourceOwner,\n  resourceType: JiraDevopsComponentAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{devopsComponentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    devopsComponentId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/devops-component/index.ts\nvar JiraDevopsComponentAri = class _JiraDevopsComponentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._devopsComponentId = opts.resourceIdSegmentValues.devopsComponentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get devopsComponentId() {\n    return this._devopsComponentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraDevopsComponentAriStaticOpts.qualifier,\n      platformQualifier: jiraDevopsComponentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraDevopsComponentAriStaticOpts.resourceOwner,\n      resourceType: jiraDevopsComponentAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.devopsComponentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        devopsComponentId: opts.devopsComponentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDevopsComponentAriStaticOpts);\n    return new _JiraDevopsComponentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraDevopsComponentAriStaticOpts);\n    return new _JiraDevopsComponentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      devopsComponentId: this.devopsComponentId\n    };\n  }\n};\n\n// src/jira/document/types.ts\nvar JiraDocumentAriResourceOwner = \"jira\", JiraDocumentAriResourceType = \"document\";\n\n// src/jira/document/manifest.ts\nvar jiraDocumentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraDocumentAriResourceOwner,\n  resourceType: JiraDocumentAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{documentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/document/index.ts\nvar JiraDocumentAri = class _JiraDocumentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._documentId = opts.resourceIdSegmentValues.documentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get documentId() {\n    return this._documentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraDocumentAriStaticOpts.qualifier,\n      platformQualifier: jiraDocumentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraDocumentAriStaticOpts.resourceOwner,\n      resourceType: jiraDocumentAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.documentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        documentId: opts.documentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDocumentAriStaticOpts);\n    return new _JiraDocumentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraDocumentAriStaticOpts);\n    return new _JiraDocumentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      documentId: this.documentId\n    };\n  }\n};\n\n// src/jira/document-history/types.ts\nvar JiraDocumentHistoryAriResourceOwner = \"jira\", JiraDocumentHistoryAriResourceType = \"document-history\";\n\n// src/jira/document-history/manifest.ts\nvar jiraDocumentHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraDocumentHistoryAriResourceOwner,\n  resourceType: JiraDocumentHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{documentId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    documentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/document-history/index.ts\nvar JiraDocumentHistoryAri = class _JiraDocumentHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._documentId = opts.resourceIdSegmentValues.documentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get documentId() {\n    return this._documentId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraDocumentHistoryAriStaticOpts.qualifier,\n      platformQualifier: jiraDocumentHistoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraDocumentHistoryAriStaticOpts.resourceOwner,\n      resourceType: jiraDocumentHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.documentId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        documentId: opts.documentId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraDocumentHistoryAriStaticOpts);\n    return new _JiraDocumentHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraDocumentHistoryAriStaticOpts);\n    return new _JiraDocumentHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      documentId: this.documentId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/jira/entitlement/types.ts\nvar JiraEntitlementAriResourceOwner = \"jira\", JiraEntitlementAriResourceType = \"entitlement\";\n\n// src/jira/entitlement/manifest.ts\nvar jiraEntitlementAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraEntitlementAriResourceOwner,\n  resourceType: JiraEntitlementAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{entitlementId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    entitlementId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/entitlement/index.ts\nvar JiraEntitlementAri = class _JiraEntitlementAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._entitlementId = opts.resourceIdSegmentValues.entitlementId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get entitlementId() {\n    return this._entitlementId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraEntitlementAriStaticOpts.qualifier,\n      platformQualifier: jiraEntitlementAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraEntitlementAriStaticOpts.resourceOwner,\n      resourceType: jiraEntitlementAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.entitlementId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        entitlementId: opts.entitlementId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraEntitlementAriStaticOpts);\n    return new _JiraEntitlementAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraEntitlementAriStaticOpts);\n    return new _JiraEntitlementAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      entitlementId: this.entitlementId\n    };\n  }\n};\n\n// src/jira/entity-property/types.ts\nvar JiraEntityPropertyAriResourceOwner = \"jira\", JiraEntityPropertyAriResourceType = \"entity-property\";\n\n// src/jira/entity-property/manifest.ts\nvar jiraEntityPropertyAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraEntityPropertyAriResourceOwner,\n  resourceType: JiraEntityPropertyAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{entityType}/{entityId}/{propertyKey}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    entityType: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    entityId: /[0-9]+/,\n    // eslint-disable-line no-useless-escape\n    propertyKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/entity-property/index.ts\nvar JiraEntityPropertyAri = class _JiraEntityPropertyAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._entityType = opts.resourceIdSegmentValues.entityType, this._entityId = opts.resourceIdSegmentValues.entityId, this._propertyKey = opts.resourceIdSegmentValues.propertyKey;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get entityType() {\n    return this._entityType;\n  }\n  get entityId() {\n    return this._entityId;\n  }\n  get propertyKey() {\n    return this._propertyKey;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraEntityPropertyAriStaticOpts.qualifier,\n      platformQualifier: jiraEntityPropertyAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraEntityPropertyAriStaticOpts.resourceOwner,\n      resourceType: jiraEntityPropertyAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.entityType}/${opts.entityId}/${opts.propertyKey}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        entityType: opts.entityType,\n        entityId: opts.entityId,\n        propertyKey: opts.propertyKey\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraEntityPropertyAriStaticOpts);\n    return new _JiraEntityPropertyAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraEntityPropertyAriStaticOpts);\n    return new _JiraEntityPropertyAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      entityType: this.entityType,\n      entityId: this.entityId,\n      propertyKey: this.propertyKey\n    };\n  }\n};\n\n// src/jira/favourite/types.ts\nvar JiraFavouriteAriResourceOwner = \"jira\", JiraFavouriteAriResourceType = \"favourite\";\n\n// src/jira/favourite/manifest.ts\nvar jiraFavouriteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraFavouriteAriResourceOwner,\n  resourceType: JiraFavouriteAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{favouriteId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    favouriteId: /[a-zA-Z0-9_\\|\\-\\:~]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/favourite/index.ts\nvar JiraFavouriteAri = class _JiraFavouriteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._favouriteId = opts.resourceIdSegmentValues.favouriteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get favouriteId() {\n    return this._favouriteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraFavouriteAriStaticOpts.qualifier,\n      platformQualifier: jiraFavouriteAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraFavouriteAriStaticOpts.resourceOwner,\n      resourceType: jiraFavouriteAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.favouriteId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        favouriteId: opts.favouriteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFavouriteAriStaticOpts);\n    return new _JiraFavouriteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraFavouriteAriStaticOpts);\n    return new _JiraFavouriteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      favouriteId: this.favouriteId\n    };\n  }\n};\n\n// src/jira/feature-flag/types.ts\nvar JiraFeatureFlagAriResourceOwner = \"jira\", JiraFeatureFlagAriResourceType = \"feature-flag\";\n\n// src/jira/feature-flag/manifest.ts\nvar jiraFeatureFlagAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraFeatureFlagAriResourceOwner,\n  resourceType: JiraFeatureFlagAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{featureFlagId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    featureFlagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/feature-flag/index.ts\nvar JiraFeatureFlagAri = class _JiraFeatureFlagAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._featureFlagId = opts.resourceIdSegmentValues.featureFlagId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get featureFlagId() {\n    return this._featureFlagId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraFeatureFlagAriStaticOpts.qualifier,\n      platformQualifier: jiraFeatureFlagAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraFeatureFlagAriStaticOpts.resourceOwner,\n      resourceType: jiraFeatureFlagAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.featureFlagId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        featureFlagId: opts.featureFlagId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFeatureFlagAriStaticOpts);\n    return new _JiraFeatureFlagAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraFeatureFlagAriStaticOpts);\n    return new _JiraFeatureFlagAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      featureFlagId: this.featureFlagId\n    };\n  }\n};\n\n// src/jira/feature-flag-history/types.ts\nvar JiraFeatureFlagHistoryAriResourceOwner = \"jira\", JiraFeatureFlagHistoryAriResourceType = \"feature-flag-history\";\n\n// src/jira/feature-flag-history/manifest.ts\nvar jiraFeatureFlagHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraFeatureFlagHistoryAriResourceOwner,\n  resourceType: JiraFeatureFlagHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{featureFlagId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    featureFlagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/feature-flag-history/index.ts\nvar JiraFeatureFlagHistoryAri = class _JiraFeatureFlagHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._featureFlagId = opts.resourceIdSegmentValues.featureFlagId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get featureFlagId() {\n    return this._featureFlagId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraFeatureFlagHistoryAriStaticOpts.qualifier,\n      platformQualifier: jiraFeatureFlagHistoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraFeatureFlagHistoryAriStaticOpts.resourceOwner,\n      resourceType: jiraFeatureFlagHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.featureFlagId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        featureFlagId: opts.featureFlagId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFeatureFlagHistoryAriStaticOpts);\n    return new _JiraFeatureFlagHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraFeatureFlagHistoryAriStaticOpts);\n    return new _JiraFeatureFlagHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      featureFlagId: this.featureFlagId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/jira/filter/types.ts\nvar JiraFilterAriResourceOwner = \"jira\", JiraFilterAriResourceType = \"filter\";\n\n// src/jira/filter/manifest.ts\nvar jiraFilterAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraFilterAriResourceOwner,\n  resourceType: JiraFilterAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{filterId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    filterId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/filter/index.ts\nvar JiraFilterAri = class _JiraFilterAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._filterId = opts.resourceIdSegmentValues.filterId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get filterId() {\n    return this._filterId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraFilterAriStaticOpts.qualifier,\n      platformQualifier: jiraFilterAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraFilterAriStaticOpts.resourceOwner,\n      resourceType: jiraFilterAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.filterId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        filterId: opts.filterId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFilterAriStaticOpts);\n    return new _JiraFilterAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraFilterAriStaticOpts);\n    return new _JiraFilterAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      filterId: this.filterId\n    };\n  }\n};\n\n// src/jira/filter-email-subscription/types.ts\nvar JiraFilterEmailSubscriptionAriResourceOwner = \"jira\", JiraFilterEmailSubscriptionAriResourceType = \"filter-email-subscription\";\n\n// src/jira/filter-email-subscription/manifest.ts\nvar jiraFilterEmailSubscriptionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraFilterEmailSubscriptionAriResourceOwner,\n  resourceType: JiraFilterEmailSubscriptionAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{filterEmailSubscriptionId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    filterEmailSubscriptionId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/filter-email-subscription/index.ts\nvar JiraFilterEmailSubscriptionAri = class _JiraFilterEmailSubscriptionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._filterEmailSubscriptionId = opts.resourceIdSegmentValues.filterEmailSubscriptionId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get filterEmailSubscriptionId() {\n    return this._filterEmailSubscriptionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraFilterEmailSubscriptionAriStaticOpts.qualifier,\n      platformQualifier: jiraFilterEmailSubscriptionAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraFilterEmailSubscriptionAriStaticOpts.resourceOwner,\n      resourceType: jiraFilterEmailSubscriptionAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.filterEmailSubscriptionId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        filterEmailSubscriptionId: opts.filterEmailSubscriptionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraFilterEmailSubscriptionAriStaticOpts);\n    return new _JiraFilterEmailSubscriptionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraFilterEmailSubscriptionAriStaticOpts);\n    return new _JiraFilterEmailSubscriptionAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      filterEmailSubscriptionId: this.filterEmailSubscriptionId\n    };\n  }\n};\n\n// src/jira/incident/types.ts\nvar JiraIncidentAriResourceOwner = \"jira\", JiraIncidentAriResourceType = \"incident\";\n\n// src/jira/incident/manifest.ts\nvar jiraIncidentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIncidentAriResourceOwner,\n  resourceType: JiraIncidentAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{incidentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/incident/index.ts\nvar JiraIncidentAri = class _JiraIncidentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._incidentId = opts.resourceIdSegmentValues.incidentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get incidentId() {\n    return this._incidentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIncidentAriStaticOpts.qualifier,\n      platformQualifier: jiraIncidentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIncidentAriStaticOpts.resourceOwner,\n      resourceType: jiraIncidentAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.incidentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        incidentId: opts.incidentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIncidentAriStaticOpts);\n    return new _JiraIncidentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIncidentAriStaticOpts);\n    return new _JiraIncidentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      incidentId: this.incidentId\n    };\n  }\n};\n\n// src/jira/incident-history/types.ts\nvar JiraIncidentHistoryAriResourceOwner = \"jira\", JiraIncidentHistoryAriResourceType = \"incident-history\";\n\n// src/jira/incident-history/manifest.ts\nvar jiraIncidentHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIncidentHistoryAriResourceOwner,\n  resourceType: JiraIncidentHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{incidentId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/incident-history/index.ts\nvar JiraIncidentHistoryAri = class _JiraIncidentHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._incidentId = opts.resourceIdSegmentValues.incidentId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get incidentId() {\n    return this._incidentId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIncidentHistoryAriStaticOpts.qualifier,\n      platformQualifier: jiraIncidentHistoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIncidentHistoryAriStaticOpts.resourceOwner,\n      resourceType: jiraIncidentHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.incidentId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        incidentId: opts.incidentId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIncidentHistoryAriStaticOpts);\n    return new _JiraIncidentHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIncidentHistoryAriStaticOpts);\n    return new _JiraIncidentHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      incidentId: this.incidentId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/jira/issue/types.ts\nvar JiraIssueAriResourceOwner = \"jira\", JiraIssueAriResourceType = \"issue\";\n\n// src/jira/issue/manifest.ts\nvar jiraIssueAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueAriResourceOwner,\n  resourceType: JiraIssueAriResourceType,\n  resourceIdSlug: \"{issueId}\",\n  resourceIdSegmentFormats: {\n    issueId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue/index.ts\nvar JiraIssueAri = class _JiraIssueAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._issueId = opts.resourceIdSegmentValues.issueId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get issueId() {\n    return this._issueId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueAriStaticOpts.resourceType,\n      resourceId: `${opts.issueId}`,\n      resourceIdSegmentValues: {\n        issueId: opts.issueId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueAriStaticOpts);\n    return new _JiraIssueAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueAriStaticOpts);\n    return new _JiraIssueAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      issueId: this.issueId\n    };\n  }\n};\n\n// src/jira/issue-attachment/types.ts\nvar JiraIssueAttachmentAriResourceOwner = \"jira\", JiraIssueAttachmentAriResourceType = \"issue-attachment\";\n\n// src/jira/issue-attachment/manifest.ts\nvar jiraIssueAttachmentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueAttachmentAriResourceOwner,\n  resourceType: JiraIssueAttachmentAriResourceType,\n  resourceIdSlug: \"{issueId}/{attachmentId}\",\n  resourceIdSegmentFormats: {\n    issueId: /[0-9]+/,\n    // eslint-disable-line no-useless-escape\n    attachmentId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-attachment/index.ts\nvar JiraIssueAttachmentAri = class _JiraIssueAttachmentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._issueId = opts.resourceIdSegmentValues.issueId, this._attachmentId = opts.resourceIdSegmentValues.attachmentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get issueId() {\n    return this._issueId;\n  }\n  get attachmentId() {\n    return this._attachmentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueAttachmentAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueAttachmentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueAttachmentAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueAttachmentAriStaticOpts.resourceType,\n      resourceId: `${opts.issueId}/${opts.attachmentId}`,\n      resourceIdSegmentValues: {\n        issueId: opts.issueId,\n        attachmentId: opts.attachmentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueAttachmentAriStaticOpts);\n    return new _JiraIssueAttachmentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueAttachmentAriStaticOpts);\n    return new _JiraIssueAttachmentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      issueId: this.issueId,\n      attachmentId: this.attachmentId\n    };\n  }\n};\n\n// src/jira/issue-comment/types.ts\nvar JiraIssueCommentAriResourceOwner = \"jira\", JiraIssueCommentAriResourceType = \"issue-comment\";\n\n// src/jira/issue-comment/manifest.ts\nvar jiraIssueCommentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueCommentAriResourceOwner,\n  resourceType: JiraIssueCommentAriResourceType,\n  resourceIdSlug: \"{issueId}/{commentId}\",\n  resourceIdSegmentFormats: {\n    issueId: /[0-9]+/,\n    // eslint-disable-line no-useless-escape\n    commentId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-comment/index.ts\nvar JiraIssueCommentAri = class _JiraIssueCommentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._issueId = opts.resourceIdSegmentValues.issueId, this._commentId = opts.resourceIdSegmentValues.commentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get issueId() {\n    return this._issueId;\n  }\n  get commentId() {\n    return this._commentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueCommentAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueCommentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueCommentAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueCommentAriStaticOpts.resourceType,\n      resourceId: `${opts.issueId}/${opts.commentId}`,\n      resourceIdSegmentValues: {\n        issueId: opts.issueId,\n        commentId: opts.commentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueCommentAriStaticOpts);\n    return new _JiraIssueCommentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueCommentAriStaticOpts);\n    return new _JiraIssueCommentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      issueId: this.issueId,\n      commentId: this.commentId\n    };\n  }\n};\n\n// src/jira/issue-field-metadata/types.ts\nvar JiraIssueFieldMetadataAriResourceOwner = \"jira\", JiraIssueFieldMetadataAriResourceType = \"issue-field-metadata\";\n\n// src/jira/issue-field-metadata/manifest.ts\nvar jiraIssueFieldMetadataAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueFieldMetadataAriResourceOwner,\n  resourceType: JiraIssueFieldMetadataAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{fieldId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    fieldId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-field-metadata/index.ts\nvar JiraIssueFieldMetadataAri = class _JiraIssueFieldMetadataAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._fieldId = opts.resourceIdSegmentValues.fieldId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get fieldId() {\n    return this._fieldId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueFieldMetadataAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueFieldMetadataAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueFieldMetadataAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueFieldMetadataAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.fieldId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        fieldId: opts.fieldId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueFieldMetadataAriStaticOpts);\n    return new _JiraIssueFieldMetadataAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueFieldMetadataAriStaticOpts);\n    return new _JiraIssueFieldMetadataAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      fieldId: this.fieldId\n    };\n  }\n};\n\n// src/jira/issue-field-option/types.ts\nvar JiraIssueFieldOptionAriResourceOwner = \"jira\", JiraIssueFieldOptionAriResourceType = \"issue-field-option\";\n\n// src/jira/issue-field-option/manifest.ts\nvar jiraIssueFieldOptionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueFieldOptionAriResourceOwner,\n  resourceType: JiraIssueFieldOptionAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{fieldId}/{optionId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    fieldId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    optionId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-field-option/index.ts\nvar JiraIssueFieldOptionAri = class _JiraIssueFieldOptionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._fieldId = opts.resourceIdSegmentValues.fieldId, this._optionId = opts.resourceIdSegmentValues.optionId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get fieldId() {\n    return this._fieldId;\n  }\n  get optionId() {\n    return this._optionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueFieldOptionAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueFieldOptionAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueFieldOptionAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueFieldOptionAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.fieldId}/${opts.optionId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        fieldId: opts.fieldId,\n        optionId: opts.optionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueFieldOptionAriStaticOpts);\n    return new _JiraIssueFieldOptionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueFieldOptionAriStaticOpts);\n    return new _JiraIssueFieldOptionAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      fieldId: this.fieldId,\n      optionId: this.optionId\n    };\n  }\n};\n\n// src/jira/issue-history/types.ts\nvar JiraIssueHistoryAriResourceOwner = \"jira\", JiraIssueHistoryAriResourceType = \"issue-history\";\n\n// src/jira/issue-history/manifest.ts\nvar jiraIssueHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueHistoryAriResourceOwner,\n  resourceType: JiraIssueHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{issueId}/{changeGroupId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    issueId: /[0-9]+/,\n    // eslint-disable-line no-useless-escape\n    changeGroupId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-history/index.ts\nvar JiraIssueHistoryAri = class _JiraIssueHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueId = opts.resourceIdSegmentValues.issueId, this._changeGroupId = opts.resourceIdSegmentValues.changeGroupId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get issueId() {\n    return this._issueId;\n  }\n  get changeGroupId() {\n    return this._changeGroupId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueHistoryAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueHistoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueHistoryAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.issueId}/${opts.changeGroupId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        issueId: opts.issueId,\n        changeGroupId: opts.changeGroupId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueHistoryAriStaticOpts);\n    return new _JiraIssueHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueHistoryAriStaticOpts);\n    return new _JiraIssueHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      issueId: this.issueId,\n      changeGroupId: this.changeGroupId\n    };\n  }\n};\n\n// src/jira/issue-link/types.ts\nvar JiraIssueLinkAriResourceOwner = \"jira\", JiraIssueLinkAriResourceType = \"issue-link\";\n\n// src/jira/issue-link/manifest.ts\nvar jiraIssueLinkAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueLinkAriResourceOwner,\n  resourceType: JiraIssueLinkAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{issueId}/{linkId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    issueId: /[0-9]+/,\n    // eslint-disable-line no-useless-escape\n    linkId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-link/index.ts\nvar JiraIssueLinkAri = class _JiraIssueLinkAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueId = opts.resourceIdSegmentValues.issueId, this._linkId = opts.resourceIdSegmentValues.linkId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get issueId() {\n    return this._issueId;\n  }\n  get linkId() {\n    return this._linkId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueLinkAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueLinkAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueLinkAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueLinkAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.issueId}/${opts.linkId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        issueId: opts.issueId,\n        linkId: opts.linkId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueLinkAriStaticOpts);\n    return new _JiraIssueLinkAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueLinkAriStaticOpts);\n    return new _JiraIssueLinkAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      issueId: this.issueId,\n      linkId: this.linkId\n    };\n  }\n};\n\n// src/jira/issue-link-type/types.ts\nvar JiraIssueLinkTypeAriResourceOwner = \"jira\", JiraIssueLinkTypeAriResourceType = \"issue-link-type\";\n\n// src/jira/issue-link-type/manifest.ts\nvar jiraIssueLinkTypeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueLinkTypeAriResourceOwner,\n  resourceType: JiraIssueLinkTypeAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{issueLinkTypeId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    issueLinkTypeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-link-type/index.ts\nvar JiraIssueLinkTypeAri = class _JiraIssueLinkTypeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueLinkTypeId = opts.resourceIdSegmentValues.issueLinkTypeId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get issueLinkTypeId() {\n    return this._issueLinkTypeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueLinkTypeAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueLinkTypeAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueLinkTypeAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueLinkTypeAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.issueLinkTypeId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        issueLinkTypeId: opts.issueLinkTypeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueLinkTypeAriStaticOpts);\n    return new _JiraIssueLinkTypeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueLinkTypeAriStaticOpts);\n    return new _JiraIssueLinkTypeAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      issueLinkTypeId: this.issueLinkTypeId\n    };\n  }\n};\n\n// src/jira/issue-remote-link/types.ts\nvar JiraIssueRemoteLinkAriResourceOwner = \"jira\", JiraIssueRemoteLinkAriResourceType = \"issue-remote-link\";\n\n// src/jira/issue-remote-link/manifest.ts\nvar jiraIssueRemoteLinkAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueRemoteLinkAriResourceOwner,\n  resourceType: JiraIssueRemoteLinkAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{issueId}/{linkId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    issueId: /[0-9]+/,\n    // eslint-disable-line no-useless-escape\n    linkId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-remote-link/index.ts\nvar JiraIssueRemoteLinkAri = class _JiraIssueRemoteLinkAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueId = opts.resourceIdSegmentValues.issueId, this._linkId = opts.resourceIdSegmentValues.linkId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get issueId() {\n    return this._issueId;\n  }\n  get linkId() {\n    return this._linkId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueRemoteLinkAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueRemoteLinkAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueRemoteLinkAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueRemoteLinkAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.issueId}/${opts.linkId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        issueId: opts.issueId,\n        linkId: opts.linkId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueRemoteLinkAriStaticOpts);\n    return new _JiraIssueRemoteLinkAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueRemoteLinkAriStaticOpts);\n    return new _JiraIssueRemoteLinkAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      issueId: this.issueId,\n      linkId: this.linkId\n    };\n  }\n};\n\n// src/jira/issue-search-view/types.ts\nvar JiraIssueSearchViewAriResourceOwner = \"jira\", JiraIssueSearchViewAriResourceType = \"issue-search-view\";\n\n// src/jira/issue-search-view/manifest.ts\nvar jiraIssueSearchViewAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueSearchViewAriResourceOwner,\n  resourceType: JiraIssueSearchViewAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{namespaceId}/{viewId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    namespaceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    viewId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-search-view/index.ts\nvar JiraIssueSearchViewAri = class _JiraIssueSearchViewAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._namespaceId = opts.resourceIdSegmentValues.namespaceId, this._viewId = opts.resourceIdSegmentValues.viewId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get namespaceId() {\n    return this._namespaceId;\n  }\n  get viewId() {\n    return this._viewId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueSearchViewAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueSearchViewAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueSearchViewAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueSearchViewAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.namespaceId}/${opts.viewId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        namespaceId: opts.namespaceId,\n        viewId: opts.viewId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueSearchViewAriStaticOpts);\n    return new _JiraIssueSearchViewAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueSearchViewAriStaticOpts);\n    return new _JiraIssueSearchViewAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      namespaceId: this.namespaceId,\n      viewId: this.viewId\n    };\n  }\n};\n\n// src/jira/issue-status/types.ts\nvar JiraIssueStatusAriResourceOwner = \"jira\", JiraIssueStatusAriResourceType = \"issue-status\";\n\n// src/jira/issue-status/manifest.ts\nvar jiraIssueStatusAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueStatusAriResourceOwner,\n  resourceType: JiraIssueStatusAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{issuestatusId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    issuestatusId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-status/index.ts\nvar JiraIssueStatusAri = class _JiraIssueStatusAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._issuestatusId = opts.resourceIdSegmentValues.issuestatusId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get issuestatusId() {\n    return this._issuestatusId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueStatusAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueStatusAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueStatusAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueStatusAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.issuestatusId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        issuestatusId: opts.issuestatusId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueStatusAriStaticOpts);\n    return new _JiraIssueStatusAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueStatusAriStaticOpts);\n    return new _JiraIssueStatusAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      issuestatusId: this.issuestatusId\n    };\n  }\n};\n\n// src/jira/issue-type/types.ts\nvar JiraIssueTypeAriResourceOwner = \"jira\", JiraIssueTypeAriResourceType = \"issue-type\";\n\n// src/jira/issue-type/manifest.ts\nvar jiraIssueTypeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueTypeAriResourceOwner,\n  resourceType: JiraIssueTypeAriResourceType,\n  resourceIdSlug: \"{issueTypeId}\",\n  resourceIdSegmentFormats: {\n    issueTypeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-type/index.ts\nvar JiraIssueTypeAri = class _JiraIssueTypeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._issueTypeId = opts.resourceIdSegmentValues.issueTypeId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get issueTypeId() {\n    return this._issueTypeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueTypeAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueTypeAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueTypeAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueTypeAriStaticOpts.resourceType,\n      resourceId: `${opts.issueTypeId}`,\n      resourceIdSegmentValues: {\n        issueTypeId: opts.issueTypeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueTypeAriStaticOpts);\n    return new _JiraIssueTypeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueTypeAriStaticOpts);\n    return new _JiraIssueTypeAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      issueTypeId: this.issueTypeId\n    };\n  }\n};\n\n// src/jira/issue-type-scheme/types.ts\nvar JiraIssueTypeSchemeAriResourceOwner = \"jira\", JiraIssueTypeSchemeAriResourceType = \"issue-type-scheme\";\n\n// src/jira/issue-type-scheme/manifest.ts\nvar jiraIssueTypeSchemeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueTypeSchemeAriResourceOwner,\n  resourceType: JiraIssueTypeSchemeAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{issueTypeSchemeId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    issueTypeSchemeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-type-scheme/index.ts\nvar JiraIssueTypeSchemeAri = class _JiraIssueTypeSchemeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueTypeSchemeId = opts.resourceIdSegmentValues.issueTypeSchemeId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get issueTypeSchemeId() {\n    return this._issueTypeSchemeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueTypeSchemeAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueTypeSchemeAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueTypeSchemeAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueTypeSchemeAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.issueTypeSchemeId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        issueTypeSchemeId: opts.issueTypeSchemeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueTypeSchemeAriStaticOpts);\n    return new _JiraIssueTypeSchemeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueTypeSchemeAriStaticOpts);\n    return new _JiraIssueTypeSchemeAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      issueTypeSchemeId: this.issueTypeSchemeId\n    };\n  }\n};\n\n// src/jira/issue-type-scheme-mapping/types.ts\nvar JiraIssueTypeSchemeMappingAriResourceOwner = \"jira\", JiraIssueTypeSchemeMappingAriResourceType = \"issue-type-scheme-mapping\";\n\n// src/jira/issue-type-scheme-mapping/manifest.ts\nvar jiraIssueTypeSchemeMappingAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueTypeSchemeMappingAriResourceOwner,\n  resourceType: JiraIssueTypeSchemeMappingAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{issueTypeSchemeId}/{issueTypeId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    issueTypeSchemeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    issueTypeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-type-scheme-mapping/index.ts\nvar JiraIssueTypeSchemeMappingAri = class _JiraIssueTypeSchemeMappingAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._issueTypeSchemeId = opts.resourceIdSegmentValues.issueTypeSchemeId, this._issueTypeId = opts.resourceIdSegmentValues.issueTypeId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get issueTypeSchemeId() {\n    return this._issueTypeSchemeId;\n  }\n  get issueTypeId() {\n    return this._issueTypeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueTypeSchemeMappingAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueTypeSchemeMappingAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueTypeSchemeMappingAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueTypeSchemeMappingAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.issueTypeSchemeId}/${opts.issueTypeId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        issueTypeSchemeId: opts.issueTypeSchemeId,\n        issueTypeId: opts.issueTypeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueTypeSchemeMappingAriStaticOpts);\n    return new _JiraIssueTypeSchemeMappingAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueTypeSchemeMappingAriStaticOpts);\n    return new _JiraIssueTypeSchemeMappingAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      issueTypeSchemeId: this.issueTypeSchemeId,\n      issueTypeId: this.issueTypeId\n    };\n  }\n};\n\n// src/jira/issue-worklog/types.ts\nvar JiraIssueWorklogAriResourceOwner = \"jira\", JiraIssueWorklogAriResourceType = \"issue-worklog\";\n\n// src/jira/issue-worklog/manifest.ts\nvar jiraIssueWorklogAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssueWorklogAriResourceOwner,\n  resourceType: JiraIssueWorklogAriResourceType,\n  resourceIdSlug: \"{issueId}/{worklogId}\",\n  resourceIdSegmentFormats: {\n    issueId: /[0-9]+/,\n    // eslint-disable-line no-useless-escape\n    worklogId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issue-worklog/index.ts\nvar JiraIssueWorklogAri = class _JiraIssueWorklogAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._issueId = opts.resourceIdSegmentValues.issueId, this._worklogId = opts.resourceIdSegmentValues.worklogId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get issueId() {\n    return this._issueId;\n  }\n  get worklogId() {\n    return this._worklogId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssueWorklogAriStaticOpts.qualifier,\n      platformQualifier: jiraIssueWorklogAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssueWorklogAriStaticOpts.resourceOwner,\n      resourceType: jiraIssueWorklogAriStaticOpts.resourceType,\n      resourceId: `${opts.issueId}/${opts.worklogId}`,\n      resourceIdSegmentValues: {\n        issueId: opts.issueId,\n        worklogId: opts.worklogId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssueWorklogAriStaticOpts);\n    return new _JiraIssueWorklogAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssueWorklogAriStaticOpts);\n    return new _JiraIssueWorklogAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      issueId: this.issueId,\n      worklogId: this.worklogId\n    };\n  }\n};\n\n// src/jira/issuefieldvalue/types.ts\nvar JiraIssuefieldvalueAriResourceOwner = \"jira\", JiraIssuefieldvalueAriResourceType = \"issuefieldvalue\";\n\n// src/jira/issuefieldvalue/manifest.ts\nvar jiraIssuefieldvalueAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraIssuefieldvalueAriResourceOwner,\n  resourceType: JiraIssuefieldvalueAriResourceType,\n  resourceIdSlug: \"{issueId}/{fieldId}\",\n  resourceIdSegmentFormats: {\n    issueId: /[0-9]+/,\n    // eslint-disable-line no-useless-escape\n    fieldId: /[a-zA-Z0-9_\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/issuefieldvalue/index.ts\nvar JiraIssuefieldvalueAri = class _JiraIssuefieldvalueAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._issueId = opts.resourceIdSegmentValues.issueId, this._fieldId = opts.resourceIdSegmentValues.fieldId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get issueId() {\n    return this._issueId;\n  }\n  get fieldId() {\n    return this._fieldId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraIssuefieldvalueAriStaticOpts.qualifier,\n      platformQualifier: jiraIssuefieldvalueAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraIssuefieldvalueAriStaticOpts.resourceOwner,\n      resourceType: jiraIssuefieldvalueAriStaticOpts.resourceType,\n      resourceId: `${opts.issueId}/${opts.fieldId}`,\n      resourceIdSegmentValues: {\n        issueId: opts.issueId,\n        fieldId: opts.fieldId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraIssuefieldvalueAriStaticOpts);\n    return new _JiraIssuefieldvalueAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraIssuefieldvalueAriStaticOpts);\n    return new _JiraIssuefieldvalueAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      issueId: this.issueId,\n      fieldId: this.fieldId\n    };\n  }\n};\n\n// src/jira/navigation-config/types.ts\nvar JiraNavigationConfigAriResourceOwner = \"jira\", JiraNavigationConfigAriResourceType = \"navigation-config\";\n\n// src/jira/navigation-config/manifest.ts\nvar jiraNavigationConfigAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraNavigationConfigAriResourceOwner,\n  resourceType: JiraNavigationConfigAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{userId}/{navKey}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    userId: /[a-zA-Z0-9_\\-\\:]{1,128}/,\n    // eslint-disable-line no-useless-escape\n    navKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/navigation-config/index.ts\nvar JiraNavigationConfigAri = class _JiraNavigationConfigAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._userId = opts.resourceIdSegmentValues.userId, this._navKey = opts.resourceIdSegmentValues.navKey;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get userId() {\n    return this._userId;\n  }\n  get navKey() {\n    return this._navKey;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraNavigationConfigAriStaticOpts.qualifier,\n      platformQualifier: jiraNavigationConfigAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraNavigationConfigAriStaticOpts.resourceOwner,\n      resourceType: jiraNavigationConfigAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.userId}/${opts.navKey}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        userId: opts.userId,\n        navKey: opts.navKey\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNavigationConfigAriStaticOpts);\n    return new _JiraNavigationConfigAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraNavigationConfigAriStaticOpts);\n    return new _JiraNavigationConfigAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      userId: this.userId,\n      navKey: this.navKey\n    };\n  }\n};\n\n// src/jira/navigation-item/types.ts\nvar JiraNavigationItemAriResourceOwner = \"jira\", JiraNavigationItemAriResourceType = \"navigation-item\";\n\n// src/jira/navigation-item/manifest.ts\nvar jiraNavigationItemAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraNavigationItemAriResourceOwner,\n  resourceType: JiraNavigationItemAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{scopeType}/{scopeId}/{itemId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    scopeType: /(?:project|board|global)/,\n    // eslint-disable-line no-useless-escape\n    scopeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    itemId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/navigation-item/index.ts\nvar JiraNavigationItemAri = class _JiraNavigationItemAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._scopeType = opts.resourceIdSegmentValues.scopeType, this._scopeId = opts.resourceIdSegmentValues.scopeId, this._itemId = opts.resourceIdSegmentValues.itemId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get scopeType() {\n    return this._scopeType;\n  }\n  get scopeId() {\n    return this._scopeId;\n  }\n  get itemId() {\n    return this._itemId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraNavigationItemAriStaticOpts.qualifier,\n      platformQualifier: jiraNavigationItemAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraNavigationItemAriStaticOpts.resourceOwner,\n      resourceType: jiraNavigationItemAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.scopeType}/${opts.scopeId}/${opts.itemId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        scopeType: opts.scopeType,\n        scopeId: opts.scopeId,\n        itemId: opts.itemId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNavigationItemAriStaticOpts);\n    return new _JiraNavigationItemAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraNavigationItemAriStaticOpts);\n    return new _JiraNavigationItemAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      scopeType: this.scopeType,\n      scopeId: this.scopeId,\n      itemId: this.itemId\n    };\n  }\n};\n\n// src/jira/notification-type/types.ts\nvar JiraNotificationTypeAriResourceOwner = \"jira\", JiraNotificationTypeAriResourceType = \"notification-type\";\n\n// src/jira/notification-type/manifest.ts\nvar jiraNotificationTypeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraNotificationTypeAriResourceOwner,\n  resourceType: JiraNotificationTypeAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{notificationTypeId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    notificationTypeId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/notification-type/index.ts\nvar JiraNotificationTypeAri = class _JiraNotificationTypeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._notificationTypeId = opts.resourceIdSegmentValues.notificationTypeId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get notificationTypeId() {\n    return this._notificationTypeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraNotificationTypeAriStaticOpts.qualifier,\n      platformQualifier: jiraNotificationTypeAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraNotificationTypeAriStaticOpts.resourceOwner,\n      resourceType: jiraNotificationTypeAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.notificationTypeId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        notificationTypeId: opts.notificationTypeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNotificationTypeAriStaticOpts);\n    return new _JiraNotificationTypeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraNotificationTypeAriStaticOpts);\n    return new _JiraNotificationTypeAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      notificationTypeId: this.notificationTypeId\n    };\n  }\n};\n\n// src/jira/notification-type-scheme/types.ts\nvar JiraNotificationTypeSchemeAriResourceOwner = \"jira\", JiraNotificationTypeSchemeAriResourceType = \"notification-type-scheme\";\n\n// src/jira/notification-type-scheme/manifest.ts\nvar jiraNotificationTypeSchemeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraNotificationTypeSchemeAriResourceOwner,\n  resourceType: JiraNotificationTypeSchemeAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{notificationTypeSchemeId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    notificationTypeSchemeId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/notification-type-scheme/index.ts\nvar JiraNotificationTypeSchemeAri = class _JiraNotificationTypeSchemeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._notificationTypeSchemeId = opts.resourceIdSegmentValues.notificationTypeSchemeId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get notificationTypeSchemeId() {\n    return this._notificationTypeSchemeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraNotificationTypeSchemeAriStaticOpts.qualifier,\n      platformQualifier: jiraNotificationTypeSchemeAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraNotificationTypeSchemeAriStaticOpts.resourceOwner,\n      resourceType: jiraNotificationTypeSchemeAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.notificationTypeSchemeId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        notificationTypeSchemeId: opts.notificationTypeSchemeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNotificationTypeSchemeAriStaticOpts);\n    return new _JiraNotificationTypeSchemeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraNotificationTypeSchemeAriStaticOpts);\n    return new _JiraNotificationTypeSchemeAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      notificationTypeSchemeId: this.notificationTypeSchemeId\n    };\n  }\n};\n\n// src/jira/notification-user-preference/types.ts\nvar JiraNotificationUserPreferenceAriResourceOwner = \"jira\", JiraNotificationUserPreferenceAriResourceType = \"notification-user-preference\";\n\n// src/jira/notification-user-preference/manifest.ts\nvar jiraNotificationUserPreferenceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraNotificationUserPreferenceAriResourceOwner,\n  resourceType: JiraNotificationUserPreferenceAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{notificationUserPreferenceId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    notificationUserPreferenceId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/notification-user-preference/index.ts\nvar JiraNotificationUserPreferenceAri = class _JiraNotificationUserPreferenceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._notificationUserPreferenceId = opts.resourceIdSegmentValues.notificationUserPreferenceId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get notificationUserPreferenceId() {\n    return this._notificationUserPreferenceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraNotificationUserPreferenceAriStaticOpts.qualifier,\n      platformQualifier: jiraNotificationUserPreferenceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraNotificationUserPreferenceAriStaticOpts.resourceOwner,\n      resourceType: jiraNotificationUserPreferenceAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.notificationUserPreferenceId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        notificationUserPreferenceId: opts.notificationUserPreferenceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraNotificationUserPreferenceAriStaticOpts);\n    return new _JiraNotificationUserPreferenceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraNotificationUserPreferenceAriStaticOpts);\n    return new _JiraNotificationUserPreferenceAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      notificationUserPreferenceId: this.notificationUserPreferenceId\n    };\n  }\n};\n\n// src/jira/operations-workspace/types.ts\nvar JiraOperationsWorkspaceAriResourceOwner = \"jira\", JiraOperationsWorkspaceAriResourceType = \"operations-workspace\";\n\n// src/jira/operations-workspace/manifest.ts\nvar jiraOperationsWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraOperationsWorkspaceAriResourceOwner,\n  resourceType: JiraOperationsWorkspaceAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{providerAppId}/{operationsWorkspaceId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    providerAppId: /[a-zA-Z0-9-._]+/,\n    // eslint-disable-line no-useless-escape\n    operationsWorkspaceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/operations-workspace/index.ts\nvar JiraOperationsWorkspaceAri = class _JiraOperationsWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._operationsWorkspaceId = opts.resourceIdSegmentValues.operationsWorkspaceId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get providerAppId() {\n    return this._providerAppId;\n  }\n  get operationsWorkspaceId() {\n    return this._operationsWorkspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraOperationsWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: jiraOperationsWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraOperationsWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: jiraOperationsWorkspaceAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.operationsWorkspaceId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        providerAppId: opts.providerAppId,\n        operationsWorkspaceId: opts.operationsWorkspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraOperationsWorkspaceAriStaticOpts);\n    return new _JiraOperationsWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraOperationsWorkspaceAriStaticOpts);\n    return new _JiraOperationsWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      providerAppId: this.providerAppId,\n      operationsWorkspaceId: this.operationsWorkspaceId\n    };\n  }\n};\n\n// src/jira/permission-scheme/types.ts\nvar JiraPermissionSchemeAriResourceOwner = \"jira\", JiraPermissionSchemeAriResourceType = \"permission-scheme\";\n\n// src/jira/permission-scheme/manifest.ts\nvar jiraPermissionSchemeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPermissionSchemeAriResourceOwner,\n  resourceType: JiraPermissionSchemeAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{schemeId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    schemeId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/permission-scheme/index.ts\nvar JiraPermissionSchemeAri = class _JiraPermissionSchemeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._schemeId = opts.resourceIdSegmentValues.schemeId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get schemeId() {\n    return this._schemeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPermissionSchemeAriStaticOpts.qualifier,\n      platformQualifier: jiraPermissionSchemeAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPermissionSchemeAriStaticOpts.resourceOwner,\n      resourceType: jiraPermissionSchemeAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.schemeId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        schemeId: opts.schemeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPermissionSchemeAriStaticOpts);\n    return new _JiraPermissionSchemeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPermissionSchemeAriStaticOpts);\n    return new _JiraPermissionSchemeAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      schemeId: this.schemeId\n    };\n  }\n};\n\n// src/jira/plan/types.ts\nvar JiraPlanAriResourceOwner = \"jira\", JiraPlanAriResourceType = \"plan\";\n\n// src/jira/plan/manifest.ts\nvar jiraPlanAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPlanAriResourceOwner,\n  resourceType: JiraPlanAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{planId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    planId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/plan/index.ts\nvar JiraPlanAri = class _JiraPlanAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._planId = opts.resourceIdSegmentValues.planId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get planId() {\n    return this._planId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPlanAriStaticOpts.qualifier,\n      platformQualifier: jiraPlanAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPlanAriStaticOpts.resourceOwner,\n      resourceType: jiraPlanAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.planId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        planId: opts.planId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanAriStaticOpts);\n    return new _JiraPlanAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPlanAriStaticOpts);\n    return new _JiraPlanAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      planId: this.planId\n    };\n  }\n};\n\n// src/jira/plan-cross-project-scenario-version/types.ts\nvar JiraPlanCrossProjectScenarioVersionAriResourceOwner = \"jira\", JiraPlanCrossProjectScenarioVersionAriResourceType = \"plan-cross-project-scenario-version\";\n\n// src/jira/plan-cross-project-scenario-version/manifest.ts\nvar jiraPlanCrossProjectScenarioVersionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPlanCrossProjectScenarioVersionAriResourceOwner,\n  resourceType: JiraPlanCrossProjectScenarioVersionAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{crossProjectScenarioVersionId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    crossProjectScenarioVersionId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/plan-cross-project-scenario-version/index.ts\nvar JiraPlanCrossProjectScenarioVersionAri = class _JiraPlanCrossProjectScenarioVersionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._crossProjectScenarioVersionId = opts.resourceIdSegmentValues.crossProjectScenarioVersionId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get crossProjectScenarioVersionId() {\n    return this._crossProjectScenarioVersionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPlanCrossProjectScenarioVersionAriStaticOpts.qualifier,\n      platformQualifier: jiraPlanCrossProjectScenarioVersionAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPlanCrossProjectScenarioVersionAriStaticOpts.resourceOwner,\n      resourceType: jiraPlanCrossProjectScenarioVersionAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.crossProjectScenarioVersionId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        crossProjectScenarioVersionId: opts.crossProjectScenarioVersionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanCrossProjectScenarioVersionAriStaticOpts);\n    return new _JiraPlanCrossProjectScenarioVersionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPlanCrossProjectScenarioVersionAriStaticOpts);\n    return new _JiraPlanCrossProjectScenarioVersionAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      crossProjectScenarioVersionId: this.crossProjectScenarioVersionId\n    };\n  }\n};\n\n// src/jira/plan-cross-project-version/types.ts\nvar JiraPlanCrossProjectVersionAriResourceOwner = \"jira\", JiraPlanCrossProjectVersionAriResourceType = \"plan-cross-project-version\";\n\n// src/jira/plan-cross-project-version/manifest.ts\nvar jiraPlanCrossProjectVersionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPlanCrossProjectVersionAriResourceOwner,\n  resourceType: JiraPlanCrossProjectVersionAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{crossProjectVersionId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    crossProjectVersionId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/plan-cross-project-version/index.ts\nvar JiraPlanCrossProjectVersionAri = class _JiraPlanCrossProjectVersionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._crossProjectVersionId = opts.resourceIdSegmentValues.crossProjectVersionId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get crossProjectVersionId() {\n    return this._crossProjectVersionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPlanCrossProjectVersionAriStaticOpts.qualifier,\n      platformQualifier: jiraPlanCrossProjectVersionAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPlanCrossProjectVersionAriStaticOpts.resourceOwner,\n      resourceType: jiraPlanCrossProjectVersionAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.crossProjectVersionId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        crossProjectVersionId: opts.crossProjectVersionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanCrossProjectVersionAriStaticOpts);\n    return new _JiraPlanCrossProjectVersionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPlanCrossProjectVersionAriStaticOpts);\n    return new _JiraPlanCrossProjectVersionAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      crossProjectVersionId: this.crossProjectVersionId\n    };\n  }\n};\n\n// src/jira/plan-scenario/types.ts\nvar JiraPlanScenarioAriResourceOwner = \"jira\", JiraPlanScenarioAriResourceType = \"plan-scenario\";\n\n// src/jira/plan-scenario/manifest.ts\nvar jiraPlanScenarioAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPlanScenarioAriResourceOwner,\n  resourceType: JiraPlanScenarioAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{planId}/scenario/{scenarioId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    planId: /[0-9]+/,\n    // eslint-disable-line no-useless-escape\n    scenarioId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/plan-scenario/index.ts\nvar JiraPlanScenarioAri = class _JiraPlanScenarioAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._planId = opts.resourceIdSegmentValues.planId, this._scenarioId = opts.resourceIdSegmentValues.scenarioId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get planId() {\n    return this._planId;\n  }\n  get scenarioId() {\n    return this._scenarioId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPlanScenarioAriStaticOpts.qualifier,\n      platformQualifier: jiraPlanScenarioAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPlanScenarioAriStaticOpts.resourceOwner,\n      resourceType: jiraPlanScenarioAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.planId}/scenario/${opts.scenarioId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        planId: opts.planId,\n        scenarioId: opts.scenarioId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioAriStaticOpts);\n    return new _JiraPlanScenarioAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioAriStaticOpts);\n    return new _JiraPlanScenarioAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      planId: this.planId,\n      scenarioId: this.scenarioId\n    };\n  }\n};\n\n// src/jira/plan-scenario-issue/types.ts\nvar JiraPlanScenarioIssueAriResourceOwner = \"jira\", JiraPlanScenarioIssueAriResourceType = \"plan-scenario-issue\";\n\n// src/jira/plan-scenario-issue/manifest.ts\nvar jiraPlanScenarioIssueAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPlanScenarioIssueAriResourceOwner,\n  resourceType: JiraPlanScenarioIssueAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{scenarioIssueId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    scenarioIssueId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/plan-scenario-issue/index.ts\nvar JiraPlanScenarioIssueAri = class _JiraPlanScenarioIssueAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._scenarioIssueId = opts.resourceIdSegmentValues.scenarioIssueId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get scenarioIssueId() {\n    return this._scenarioIssueId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPlanScenarioIssueAriStaticOpts.qualifier,\n      platformQualifier: jiraPlanScenarioIssueAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPlanScenarioIssueAriStaticOpts.resourceOwner,\n      resourceType: jiraPlanScenarioIssueAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.scenarioIssueId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        scenarioIssueId: opts.scenarioIssueId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioIssueAriStaticOpts);\n    return new _JiraPlanScenarioIssueAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioIssueAriStaticOpts);\n    return new _JiraPlanScenarioIssueAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      scenarioIssueId: this.scenarioIssueId\n    };\n  }\n};\n\n// src/jira/plan-scenario-issue-field/types.ts\nvar JiraPlanScenarioIssueFieldAriResourceOwner = \"jira\", JiraPlanScenarioIssueFieldAriResourceType = \"plan-scenario-issue-field\";\n\n// src/jira/plan-scenario-issue-field/manifest.ts\nvar jiraPlanScenarioIssueFieldAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPlanScenarioIssueFieldAriResourceOwner,\n  resourceType: JiraPlanScenarioIssueFieldAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{scenarioIssueId}/{fieldId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    scenarioIssueId: /[0-9]+/,\n    // eslint-disable-line no-useless-escape\n    fieldId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/plan-scenario-issue-field/index.ts\nvar JiraPlanScenarioIssueFieldAri = class _JiraPlanScenarioIssueFieldAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._scenarioIssueId = opts.resourceIdSegmentValues.scenarioIssueId, this._fieldId = opts.resourceIdSegmentValues.fieldId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get scenarioIssueId() {\n    return this._scenarioIssueId;\n  }\n  get fieldId() {\n    return this._fieldId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPlanScenarioIssueFieldAriStaticOpts.qualifier,\n      platformQualifier: jiraPlanScenarioIssueFieldAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPlanScenarioIssueFieldAriStaticOpts.resourceOwner,\n      resourceType: jiraPlanScenarioIssueFieldAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.scenarioIssueId}/${opts.fieldId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        scenarioIssueId: opts.scenarioIssueId,\n        fieldId: opts.fieldId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioIssueFieldAriStaticOpts);\n    return new _JiraPlanScenarioIssueFieldAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioIssueFieldAriStaticOpts);\n    return new _JiraPlanScenarioIssueFieldAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      scenarioIssueId: this.scenarioIssueId,\n      fieldId: this.fieldId\n    };\n  }\n};\n\n// src/jira/plan-scenario-version/types.ts\nvar JiraPlanScenarioVersionAriResourceOwner = \"jira\", JiraPlanScenarioVersionAriResourceType = \"plan-scenario-version\";\n\n// src/jira/plan-scenario-version/manifest.ts\nvar jiraPlanScenarioVersionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPlanScenarioVersionAriResourceOwner,\n  resourceType: JiraPlanScenarioVersionAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{scenarioVersionId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    scenarioVersionId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/plan-scenario-version/index.ts\nvar JiraPlanScenarioVersionAri = class _JiraPlanScenarioVersionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._scenarioVersionId = opts.resourceIdSegmentValues.scenarioVersionId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get scenarioVersionId() {\n    return this._scenarioVersionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPlanScenarioVersionAriStaticOpts.qualifier,\n      platformQualifier: jiraPlanScenarioVersionAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPlanScenarioVersionAriStaticOpts.resourceOwner,\n      resourceType: jiraPlanScenarioVersionAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.scenarioVersionId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        scenarioVersionId: opts.scenarioVersionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPlanScenarioVersionAriStaticOpts);\n    return new _JiraPlanScenarioVersionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPlanScenarioVersionAriStaticOpts);\n    return new _JiraPlanScenarioVersionAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      scenarioVersionId: this.scenarioVersionId\n    };\n  }\n};\n\n// src/jira/post-incident-review/types.ts\nvar JiraPostIncidentReviewAriResourceOwner = \"jira\", JiraPostIncidentReviewAriResourceType = \"post-incident-review\";\n\n// src/jira/post-incident-review/manifest.ts\nvar jiraPostIncidentReviewAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPostIncidentReviewAriResourceOwner,\n  resourceType: JiraPostIncidentReviewAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{postIncidentReviewId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    postIncidentReviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/post-incident-review/index.ts\nvar JiraPostIncidentReviewAri = class _JiraPostIncidentReviewAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewId = opts.resourceIdSegmentValues.postIncidentReviewId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get postIncidentReviewId() {\n    return this._postIncidentReviewId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPostIncidentReviewAriStaticOpts.qualifier,\n      platformQualifier: jiraPostIncidentReviewAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPostIncidentReviewAriStaticOpts.resourceOwner,\n      resourceType: jiraPostIncidentReviewAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        postIncidentReviewId: opts.postIncidentReviewId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPostIncidentReviewAriStaticOpts);\n    return new _JiraPostIncidentReviewAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPostIncidentReviewAriStaticOpts);\n    return new _JiraPostIncidentReviewAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      postIncidentReviewId: this.postIncidentReviewId\n    };\n  }\n};\n\n// src/jira/post-incident-review-history/types.ts\nvar JiraPostIncidentReviewHistoryAriResourceOwner = \"jira\", JiraPostIncidentReviewHistoryAriResourceType = \"post-incident-review-history\";\n\n// src/jira/post-incident-review-history/manifest.ts\nvar jiraPostIncidentReviewHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPostIncidentReviewHistoryAriResourceOwner,\n  resourceType: JiraPostIncidentReviewHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{postIncidentReviewId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    postIncidentReviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/post-incident-review-history/index.ts\nvar JiraPostIncidentReviewHistoryAri = class _JiraPostIncidentReviewHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewId = opts.resourceIdSegmentValues.postIncidentReviewId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get postIncidentReviewId() {\n    return this._postIncidentReviewId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPostIncidentReviewHistoryAriStaticOpts.qualifier,\n      platformQualifier: jiraPostIncidentReviewHistoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPostIncidentReviewHistoryAriStaticOpts.resourceOwner,\n      resourceType: jiraPostIncidentReviewHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        postIncidentReviewId: opts.postIncidentReviewId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPostIncidentReviewHistoryAriStaticOpts);\n    return new _JiraPostIncidentReviewHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPostIncidentReviewHistoryAriStaticOpts);\n    return new _JiraPostIncidentReviewHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      postIncidentReviewId: this.postIncidentReviewId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/jira/post-incident-review-link/types.ts\nvar JiraPostIncidentReviewLinkAriResourceOwner = \"jira\", JiraPostIncidentReviewLinkAriResourceType = \"post-incident-review-link\";\n\n// src/jira/post-incident-review-link/manifest.ts\nvar jiraPostIncidentReviewLinkAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPostIncidentReviewLinkAriResourceOwner,\n  resourceType: JiraPostIncidentReviewLinkAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{postIncidentReviewLinkId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    postIncidentReviewLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/post-incident-review-link/index.ts\nvar JiraPostIncidentReviewLinkAri = class _JiraPostIncidentReviewLinkAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._postIncidentReviewLinkId = opts.resourceIdSegmentValues.postIncidentReviewLinkId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get postIncidentReviewLinkId() {\n    return this._postIncidentReviewLinkId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPostIncidentReviewLinkAriStaticOpts.qualifier,\n      platformQualifier: jiraPostIncidentReviewLinkAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPostIncidentReviewLinkAriStaticOpts.resourceOwner,\n      resourceType: jiraPostIncidentReviewLinkAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.postIncidentReviewLinkId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        postIncidentReviewLinkId: opts.postIncidentReviewLinkId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPostIncidentReviewLinkAriStaticOpts);\n    return new _JiraPostIncidentReviewLinkAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPostIncidentReviewLinkAriStaticOpts);\n    return new _JiraPostIncidentReviewLinkAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      postIncidentReviewLinkId: this.postIncidentReviewLinkId\n    };\n  }\n};\n\n// src/jira/priority/types.ts\nvar JiraPriorityAriResourceOwner = \"jira\", JiraPriorityAriResourceType = \"priority\";\n\n// src/jira/priority/manifest.ts\nvar jiraPriorityAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPriorityAriResourceOwner,\n  resourceType: JiraPriorityAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{priorityId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    priorityId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/priority/index.ts\nvar JiraPriorityAri = class _JiraPriorityAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._priorityId = opts.resourceIdSegmentValues.priorityId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get priorityId() {\n    return this._priorityId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPriorityAriStaticOpts.qualifier,\n      platformQualifier: jiraPriorityAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPriorityAriStaticOpts.resourceOwner,\n      resourceType: jiraPriorityAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.priorityId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        priorityId: opts.priorityId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPriorityAriStaticOpts);\n    return new _JiraPriorityAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPriorityAriStaticOpts);\n    return new _JiraPriorityAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      priorityId: this.priorityId\n    };\n  }\n};\n\n// src/jira/product/types.ts\nvar JiraProductAriResourceOwner = \"jira\", JiraProductAriResourceType = \"product\";\n\n// src/jira/product/manifest.ts\nvar jiraProductAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraProductAriResourceOwner,\n  resourceType: JiraProductAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{productId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    productId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/product/index.ts\nvar JiraProductAri = class _JiraProductAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._productId = opts.resourceIdSegmentValues.productId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get productId() {\n    return this._productId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraProductAriStaticOpts.qualifier,\n      platformQualifier: jiraProductAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraProductAriStaticOpts.resourceOwner,\n      resourceType: jiraProductAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.productId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        productId: opts.productId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProductAriStaticOpts);\n    return new _JiraProductAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraProductAriStaticOpts);\n    return new _JiraProductAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      productId: this.productId\n    };\n  }\n};\n\n// src/jira/project/types.ts\nvar JiraProjectAriResourceOwner = \"jira\", JiraProjectAriResourceType = \"project\";\n\n// src/jira/project/manifest.ts\nvar jiraProjectAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraProjectAriResourceOwner,\n  resourceType: JiraProjectAriResourceType,\n  resourceIdSlug: \"{projectId}\",\n  resourceIdSegmentFormats: {\n    projectId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/project/index.ts\nvar JiraProjectAri = class _JiraProjectAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._projectId = opts.resourceIdSegmentValues.projectId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get projectId() {\n    return this._projectId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraProjectAriStaticOpts.qualifier,\n      platformQualifier: jiraProjectAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraProjectAriStaticOpts.resourceOwner,\n      resourceType: jiraProjectAriStaticOpts.resourceType,\n      resourceId: `${opts.projectId}`,\n      resourceIdSegmentValues: {\n        projectId: opts.projectId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectAriStaticOpts);\n    return new _JiraProjectAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraProjectAriStaticOpts);\n    return new _JiraProjectAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      projectId: this.projectId\n    };\n  }\n};\n\n// src/jira/project-category/types.ts\nvar JiraProjectCategoryAriResourceOwner = \"jira\", JiraProjectCategoryAriResourceType = \"project-category\";\n\n// src/jira/project-category/manifest.ts\nvar jiraProjectCategoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraProjectCategoryAriResourceOwner,\n  resourceType: JiraProjectCategoryAriResourceType,\n  resourceIdSlug: \"{projectCategoryId}\",\n  resourceIdSegmentFormats: {\n    projectCategoryId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/project-category/index.ts\nvar JiraProjectCategoryAri = class _JiraProjectCategoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._projectCategoryId = opts.resourceIdSegmentValues.projectCategoryId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get projectCategoryId() {\n    return this._projectCategoryId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraProjectCategoryAriStaticOpts.qualifier,\n      platformQualifier: jiraProjectCategoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraProjectCategoryAriStaticOpts.resourceOwner,\n      resourceType: jiraProjectCategoryAriStaticOpts.resourceType,\n      resourceId: `${opts.projectCategoryId}`,\n      resourceIdSegmentValues: {\n        projectCategoryId: opts.projectCategoryId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectCategoryAriStaticOpts);\n    return new _JiraProjectCategoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraProjectCategoryAriStaticOpts);\n    return new _JiraProjectCategoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      projectCategoryId: this.projectCategoryId\n    };\n  }\n};\n\n// src/jira/project-feature/types.ts\nvar JiraProjectFeatureAriResourceOwner = \"jira\", JiraProjectFeatureAriResourceType = \"project-feature\";\n\n// src/jira/project-feature/manifest.ts\nvar jiraProjectFeatureAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraProjectFeatureAriResourceOwner,\n  resourceType: JiraProjectFeatureAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{projectId}/featureKey/{featureKey}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    projectId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    featureKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/project-feature/index.ts\nvar JiraProjectFeatureAri = class _JiraProjectFeatureAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._projectId = opts.resourceIdSegmentValues.projectId, this._featureKey = opts.resourceIdSegmentValues.featureKey;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get projectId() {\n    return this._projectId;\n  }\n  get featureKey() {\n    return this._featureKey;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraProjectFeatureAriStaticOpts.qualifier,\n      platformQualifier: jiraProjectFeatureAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraProjectFeatureAriStaticOpts.resourceOwner,\n      resourceType: jiraProjectFeatureAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.projectId}/featureKey/${opts.featureKey}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        projectId: opts.projectId,\n        featureKey: opts.featureKey\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectFeatureAriStaticOpts);\n    return new _JiraProjectFeatureAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraProjectFeatureAriStaticOpts);\n    return new _JiraProjectFeatureAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      projectId: this.projectId,\n      featureKey: this.featureKey\n    };\n  }\n};\n\n// src/jira/project-overview/types.ts\nvar JiraProjectOverviewAriResourceOwner = \"jira\", JiraProjectOverviewAriResourceType = \"project-overview\";\n\n// src/jira/project-overview/manifest.ts\nvar jiraProjectOverviewAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraProjectOverviewAriResourceOwner,\n  resourceType: JiraProjectOverviewAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{overviewId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    overviewId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/project-overview/index.ts\nvar JiraProjectOverviewAri = class _JiraProjectOverviewAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._overviewId = opts.resourceIdSegmentValues.overviewId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get overviewId() {\n    return this._overviewId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraProjectOverviewAriStaticOpts.qualifier,\n      platformQualifier: jiraProjectOverviewAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraProjectOverviewAriStaticOpts.resourceOwner,\n      resourceType: jiraProjectOverviewAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.overviewId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        overviewId: opts.overviewId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectOverviewAriStaticOpts);\n    return new _JiraProjectOverviewAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraProjectOverviewAriStaticOpts);\n    return new _JiraProjectOverviewAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      overviewId: this.overviewId\n    };\n  }\n};\n\n// src/jira/project-role-actor/types.ts\nvar JiraProjectRoleActorAriResourceOwner = \"jira\", JiraProjectRoleActorAriResourceType = \"project-role-actor\";\n\n// src/jira/project-role-actor/manifest.ts\nvar jiraProjectRoleActorAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraProjectRoleActorAriResourceOwner,\n  resourceType: JiraProjectRoleActorAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{projectRoleActorId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    projectRoleActorId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/project-role-actor/index.ts\nvar JiraProjectRoleActorAri = class _JiraProjectRoleActorAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._projectRoleActorId = opts.resourceIdSegmentValues.projectRoleActorId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get projectRoleActorId() {\n    return this._projectRoleActorId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraProjectRoleActorAriStaticOpts.qualifier,\n      platformQualifier: jiraProjectRoleActorAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraProjectRoleActorAriStaticOpts.resourceOwner,\n      resourceType: jiraProjectRoleActorAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.projectRoleActorId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        projectRoleActorId: opts.projectRoleActorId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectRoleActorAriStaticOpts);\n    return new _JiraProjectRoleActorAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraProjectRoleActorAriStaticOpts);\n    return new _JiraProjectRoleActorAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      projectRoleActorId: this.projectRoleActorId\n    };\n  }\n};\n\n// src/jira/project-shortcut/types.ts\nvar JiraProjectShortcutAriResourceOwner = \"jira\", JiraProjectShortcutAriResourceType = \"project-shortcut\";\n\n// src/jira/project-shortcut/manifest.ts\nvar jiraProjectShortcutAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraProjectShortcutAriResourceOwner,\n  resourceType: JiraProjectShortcutAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{shortcutId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    shortcutId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/project-shortcut/index.ts\nvar JiraProjectShortcutAri = class _JiraProjectShortcutAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._shortcutId = opts.resourceIdSegmentValues.shortcutId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get shortcutId() {\n    return this._shortcutId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraProjectShortcutAriStaticOpts.qualifier,\n      platformQualifier: jiraProjectShortcutAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraProjectShortcutAriStaticOpts.resourceOwner,\n      resourceType: jiraProjectShortcutAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.shortcutId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        shortcutId: opts.shortcutId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectShortcutAriStaticOpts);\n    return new _JiraProjectShortcutAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraProjectShortcutAriStaticOpts);\n    return new _JiraProjectShortcutAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      shortcutId: this.shortcutId\n    };\n  }\n};\n\n// src/jira/project-type/types.ts\nvar JiraProjectTypeAriResourceOwner = \"jira\", JiraProjectTypeAriResourceType = \"project-type\";\n\n// src/jira/project-type/manifest.ts\nvar jiraProjectTypeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraProjectTypeAriResourceOwner,\n  resourceType: JiraProjectTypeAriResourceType,\n  resourceIdSlug: \"{projectTypeId}\",\n  resourceIdSegmentFormats: {\n    projectTypeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/project-type/index.ts\nvar JiraProjectTypeAri = class _JiraProjectTypeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._projectTypeId = opts.resourceIdSegmentValues.projectTypeId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get projectTypeId() {\n    return this._projectTypeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraProjectTypeAriStaticOpts.qualifier,\n      platformQualifier: jiraProjectTypeAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraProjectTypeAriStaticOpts.resourceOwner,\n      resourceType: jiraProjectTypeAriStaticOpts.resourceType,\n      resourceId: `${opts.projectTypeId}`,\n      resourceIdSegmentValues: {\n        projectTypeId: opts.projectTypeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraProjectTypeAriStaticOpts);\n    return new _JiraProjectTypeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraProjectTypeAriStaticOpts);\n    return new _JiraProjectTypeAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      projectTypeId: this.projectTypeId\n    };\n  }\n};\n\n// src/jira/pull-request/types.ts\nvar JiraPullRequestAriResourceOwner = \"jira\", JiraPullRequestAriResourceType = \"pull-request\";\n\n// src/jira/pull-request/manifest.ts\nvar jiraPullRequestAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPullRequestAriResourceOwner,\n  resourceType: JiraPullRequestAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{pullRequestId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    pullRequestId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/pull-request/index.ts\nvar JiraPullRequestAri = class _JiraPullRequestAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get pullRequestId() {\n    return this._pullRequestId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPullRequestAriStaticOpts.qualifier,\n      platformQualifier: jiraPullRequestAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPullRequestAriStaticOpts.resourceOwner,\n      resourceType: jiraPullRequestAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.pullRequestId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        pullRequestId: opts.pullRequestId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPullRequestAriStaticOpts);\n    return new _JiraPullRequestAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPullRequestAriStaticOpts);\n    return new _JiraPullRequestAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      pullRequestId: this.pullRequestId\n    };\n  }\n};\n\n// src/jira/pull-request-history/types.ts\nvar JiraPullRequestHistoryAriResourceOwner = \"jira\", JiraPullRequestHistoryAriResourceType = \"pull-request-history\";\n\n// src/jira/pull-request-history/manifest.ts\nvar jiraPullRequestHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraPullRequestHistoryAriResourceOwner,\n  resourceType: JiraPullRequestHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{pullRequestId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    pullRequestId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/pull-request-history/index.ts\nvar JiraPullRequestHistoryAri = class _JiraPullRequestHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._pullRequestId = opts.resourceIdSegmentValues.pullRequestId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get pullRequestId() {\n    return this._pullRequestId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraPullRequestHistoryAriStaticOpts.qualifier,\n      platformQualifier: jiraPullRequestHistoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraPullRequestHistoryAriStaticOpts.resourceOwner,\n      resourceType: jiraPullRequestHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.pullRequestId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        pullRequestId: opts.pullRequestId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraPullRequestHistoryAriStaticOpts);\n    return new _JiraPullRequestHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraPullRequestHistoryAriStaticOpts);\n    return new _JiraPullRequestHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      pullRequestId: this.pullRequestId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/jira/remote-link/types.ts\nvar JiraRemoteLinkAriResourceOwner = \"jira\", JiraRemoteLinkAriResourceType = \"remote-link\";\n\n// src/jira/remote-link/manifest.ts\nvar jiraRemoteLinkAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraRemoteLinkAriResourceOwner,\n  resourceType: JiraRemoteLinkAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{remoteLinkId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    remoteLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/remote-link/index.ts\nvar JiraRemoteLinkAri = class _JiraRemoteLinkAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get remoteLinkId() {\n    return this._remoteLinkId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraRemoteLinkAriStaticOpts.qualifier,\n      platformQualifier: jiraRemoteLinkAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraRemoteLinkAriStaticOpts.resourceOwner,\n      resourceType: jiraRemoteLinkAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.remoteLinkId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        remoteLinkId: opts.remoteLinkId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraRemoteLinkAriStaticOpts);\n    return new _JiraRemoteLinkAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraRemoteLinkAriStaticOpts);\n    return new _JiraRemoteLinkAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      remoteLinkId: this.remoteLinkId\n    };\n  }\n};\n\n// src/jira/remote-link-history/types.ts\nvar JiraRemoteLinkHistoryAriResourceOwner = \"jira\", JiraRemoteLinkHistoryAriResourceType = \"remote-link-history\";\n\n// src/jira/remote-link-history/manifest.ts\nvar jiraRemoteLinkHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraRemoteLinkHistoryAriResourceOwner,\n  resourceType: JiraRemoteLinkHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{remoteLinkId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    remoteLinkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/remote-link-history/index.ts\nvar JiraRemoteLinkHistoryAri = class _JiraRemoteLinkHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._remoteLinkId = opts.resourceIdSegmentValues.remoteLinkId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get remoteLinkId() {\n    return this._remoteLinkId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraRemoteLinkHistoryAriStaticOpts.qualifier,\n      platformQualifier: jiraRemoteLinkHistoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraRemoteLinkHistoryAriStaticOpts.resourceOwner,\n      resourceType: jiraRemoteLinkHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.remoteLinkId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        remoteLinkId: opts.remoteLinkId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraRemoteLinkHistoryAriStaticOpts);\n    return new _JiraRemoteLinkHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraRemoteLinkHistoryAriStaticOpts);\n    return new _JiraRemoteLinkHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      remoteLinkId: this.remoteLinkId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/jira/repository/types.ts\nvar JiraRepositoryAriResourceOwner = \"jira\", JiraRepositoryAriResourceType = \"repository\";\n\n// src/jira/repository/manifest.ts\nvar jiraRepositoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraRepositoryAriResourceOwner,\n  resourceType: JiraRepositoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{repositoryId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    repositoryId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/repository/index.ts\nvar JiraRepositoryAri = class _JiraRepositoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._repositoryId = opts.resourceIdSegmentValues.repositoryId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get repositoryId() {\n    return this._repositoryId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraRepositoryAriStaticOpts.qualifier,\n      platformQualifier: jiraRepositoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraRepositoryAriStaticOpts.resourceOwner,\n      resourceType: jiraRepositoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.repositoryId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        repositoryId: opts.repositoryId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraRepositoryAriStaticOpts);\n    return new _JiraRepositoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraRepositoryAriStaticOpts);\n    return new _JiraRepositoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      repositoryId: this.repositoryId\n    };\n  }\n};\n\n// src/jira/resolution/types.ts\nvar JiraResolutionAriResourceOwner = \"jira\", JiraResolutionAriResourceType = \"resolution\";\n\n// src/jira/resolution/manifest.ts\nvar jiraResolutionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraResolutionAriResourceOwner,\n  resourceType: JiraResolutionAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{resolutionId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    resolutionId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/resolution/index.ts\nvar JiraResolutionAri = class _JiraResolutionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._resolutionId = opts.resourceIdSegmentValues.resolutionId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get resolutionId() {\n    return this._resolutionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraResolutionAriStaticOpts.qualifier,\n      platformQualifier: jiraResolutionAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraResolutionAriStaticOpts.resourceOwner,\n      resourceType: jiraResolutionAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.resolutionId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        resolutionId: opts.resolutionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraResolutionAriStaticOpts);\n    return new _JiraResolutionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraResolutionAriStaticOpts);\n    return new _JiraResolutionAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      resolutionId: this.resolutionId\n    };\n  }\n};\n\n// src/jira/resource-usage-metric/types.ts\nvar JiraResourceUsageMetricAriResourceOwner = \"jira\", JiraResourceUsageMetricAriResourceType = \"resource-usage-metric\";\n\n// src/jira/resource-usage-metric/manifest.ts\nvar jiraResourceUsageMetricAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraResourceUsageMetricAriResourceOwner,\n  resourceType: JiraResourceUsageMetricAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{metricKey}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    metricKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/resource-usage-metric/index.ts\nvar JiraResourceUsageMetricAri = class _JiraResourceUsageMetricAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._metricKey = opts.resourceIdSegmentValues.metricKey;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get metricKey() {\n    return this._metricKey;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraResourceUsageMetricAriStaticOpts.qualifier,\n      platformQualifier: jiraResourceUsageMetricAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraResourceUsageMetricAriStaticOpts.resourceOwner,\n      resourceType: jiraResourceUsageMetricAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.metricKey}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        metricKey: opts.metricKey\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraResourceUsageMetricAriStaticOpts);\n    return new _JiraResourceUsageMetricAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraResourceUsageMetricAriStaticOpts);\n    return new _JiraResourceUsageMetricAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      metricKey: this.metricKey\n    };\n  }\n};\n\n// src/jira/resource-usage-recommendation/types.ts\nvar JiraResourceUsageRecommendationAriResourceOwner = \"jira\", JiraResourceUsageRecommendationAriResourceType = \"resource-usage-recommendation\";\n\n// src/jira/resource-usage-recommendation/manifest.ts\nvar jiraResourceUsageRecommendationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraResourceUsageRecommendationAriResourceOwner,\n  resourceType: JiraResourceUsageRecommendationAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{recommendationId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    recommendationId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/resource-usage-recommendation/index.ts\nvar JiraResourceUsageRecommendationAri = class _JiraResourceUsageRecommendationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._recommendationId = opts.resourceIdSegmentValues.recommendationId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get recommendationId() {\n    return this._recommendationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraResourceUsageRecommendationAriStaticOpts.qualifier,\n      platformQualifier: jiraResourceUsageRecommendationAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraResourceUsageRecommendationAriStaticOpts.resourceOwner,\n      resourceType: jiraResourceUsageRecommendationAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.recommendationId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        recommendationId: opts.recommendationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraResourceUsageRecommendationAriStaticOpts);\n    return new _JiraResourceUsageRecommendationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraResourceUsageRecommendationAriStaticOpts);\n    return new _JiraResourceUsageRecommendationAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      recommendationId: this.recommendationId\n    };\n  }\n};\n\n// src/jira/role/types.ts\nvar JiraRoleAriResourceOwner = \"jira\", JiraRoleAriResourceType = \"role\";\n\n// src/jira/role/manifest.ts\nvar jiraRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]*$\"),\n  resourceOwner: JiraRoleAriResourceOwner,\n  resourceType: JiraRoleAriResourceType,\n  resourceIdSlug: \"{jiraRoleType}/{jiraRoleTypeId}\",\n  resourceIdSegmentFormats: {\n    jiraRoleType: /(?:scope|product|projectrole-by-project|project-lead|principal-grant|project-role|application-access|jsm-customer-context-helpseeker-project-permission|jsm-customer-context-anonymous-project-permission|role-type-for-perms-pollinator-test)/,\n    // eslint-disable-line no-useless-escape\n    jiraRoleTypeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/role/index.ts\nvar JiraRoleAri = class _JiraRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._optionalSiteId = opts.cloudId || \"\", this._jiraRoleType = opts.resourceIdSegmentValues.jiraRoleType, this._jiraRoleTypeId = opts.resourceIdSegmentValues.jiraRoleTypeId;\n  }\n  get optionalSiteId() {\n    return this._optionalSiteId;\n  }\n  get jiraRoleType() {\n    return this._jiraRoleType;\n  }\n  get jiraRoleTypeId() {\n    return this._jiraRoleTypeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraRoleAriStaticOpts.qualifier,\n      platformQualifier: jiraRoleAriStaticOpts.platformQualifier,\n      cloudId: opts.optionalSiteId,\n      resourceOwner: jiraRoleAriStaticOpts.resourceOwner,\n      resourceType: jiraRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.jiraRoleType}/${opts.jiraRoleTypeId}`,\n      resourceIdSegmentValues: {\n        jiraRoleType: opts.jiraRoleType,\n        jiraRoleTypeId: opts.jiraRoleTypeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraRoleAriStaticOpts);\n    return new _JiraRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraRoleAriStaticOpts);\n    return new _JiraRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      optionalSiteId: this.optionalSiteId,\n      jiraRoleType: this.jiraRoleType,\n      jiraRoleTypeId: this.jiraRoleTypeId\n    };\n  }\n};\n\n// src/jira/screen-tab/types.ts\nvar JiraScreenTabAriResourceOwner = \"jira\", JiraScreenTabAriResourceType = \"screen-tab\";\n\n// src/jira/screen-tab/manifest.ts\nvar jiraScreenTabAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraScreenTabAriResourceOwner,\n  resourceType: JiraScreenTabAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{screenId}/{tabId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    screenId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    tabId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/screen-tab/index.ts\nvar JiraScreenTabAri = class _JiraScreenTabAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._screenId = opts.resourceIdSegmentValues.screenId, this._tabId = opts.resourceIdSegmentValues.tabId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get screenId() {\n    return this._screenId;\n  }\n  get tabId() {\n    return this._tabId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraScreenTabAriStaticOpts.qualifier,\n      platformQualifier: jiraScreenTabAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraScreenTabAriStaticOpts.resourceOwner,\n      resourceType: jiraScreenTabAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.screenId}/${opts.tabId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        screenId: opts.screenId,\n        tabId: opts.tabId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraScreenTabAriStaticOpts);\n    return new _JiraScreenTabAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraScreenTabAriStaticOpts);\n    return new _JiraScreenTabAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      screenId: this.screenId,\n      tabId: this.tabId\n    };\n  }\n};\n\n// src/jira/security-container/types.ts\nvar JiraSecurityContainerAriResourceOwner = \"jira\", JiraSecurityContainerAriResourceType = \"security-container\";\n\n// src/jira/security-container/manifest.ts\nvar jiraSecurityContainerAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSecurityContainerAriResourceOwner,\n  resourceType: JiraSecurityContainerAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{providerAppId}/{securityContainerId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    providerAppId: /[a-zA-Z0-9-._]+/,\n    // eslint-disable-line no-useless-escape\n    securityContainerId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/security-container/index.ts\nvar JiraSecurityContainerAri = class _JiraSecurityContainerAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._securityContainerId = opts.resourceIdSegmentValues.securityContainerId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get providerAppId() {\n    return this._providerAppId;\n  }\n  get securityContainerId() {\n    return this._securityContainerId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSecurityContainerAriStaticOpts.qualifier,\n      platformQualifier: jiraSecurityContainerAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSecurityContainerAriStaticOpts.resourceOwner,\n      resourceType: jiraSecurityContainerAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.securityContainerId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        providerAppId: opts.providerAppId,\n        securityContainerId: opts.securityContainerId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSecurityContainerAriStaticOpts);\n    return new _JiraSecurityContainerAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSecurityContainerAriStaticOpts);\n    return new _JiraSecurityContainerAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      providerAppId: this.providerAppId,\n      securityContainerId: this.securityContainerId\n    };\n  }\n};\n\n// src/jira/security-level/types.ts\nvar JiraSecurityLevelAriResourceOwner = \"jira\", JiraSecurityLevelAriResourceType = \"security-level\";\n\n// src/jira/security-level/manifest.ts\nvar jiraSecurityLevelAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSecurityLevelAriResourceOwner,\n  resourceType: JiraSecurityLevelAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{securityLevelId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    securityLevelId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/security-level/index.ts\nvar JiraSecurityLevelAri = class _JiraSecurityLevelAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._securityLevelId = opts.resourceIdSegmentValues.securityLevelId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get securityLevelId() {\n    return this._securityLevelId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSecurityLevelAriStaticOpts.qualifier,\n      platformQualifier: jiraSecurityLevelAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSecurityLevelAriStaticOpts.resourceOwner,\n      resourceType: jiraSecurityLevelAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.securityLevelId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        securityLevelId: opts.securityLevelId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSecurityLevelAriStaticOpts);\n    return new _JiraSecurityLevelAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSecurityLevelAriStaticOpts);\n    return new _JiraSecurityLevelAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      securityLevelId: this.securityLevelId\n    };\n  }\n};\n\n// src/jira/security-workspace/types.ts\nvar JiraSecurityWorkspaceAriResourceOwner = \"jira\", JiraSecurityWorkspaceAriResourceType = \"security-workspace\";\n\n// src/jira/security-workspace/manifest.ts\nvar jiraSecurityWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSecurityWorkspaceAriResourceOwner,\n  resourceType: JiraSecurityWorkspaceAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{providerAppId}/{securityWorkspaceId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    providerAppId: /[a-zA-Z0-9-._]+/,\n    // eslint-disable-line no-useless-escape\n    securityWorkspaceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/security-workspace/index.ts\nvar JiraSecurityWorkspaceAri = class _JiraSecurityWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._providerAppId = opts.resourceIdSegmentValues.providerAppId, this._securityWorkspaceId = opts.resourceIdSegmentValues.securityWorkspaceId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get providerAppId() {\n    return this._providerAppId;\n  }\n  get securityWorkspaceId() {\n    return this._securityWorkspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSecurityWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: jiraSecurityWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSecurityWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: jiraSecurityWorkspaceAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.providerAppId}/${opts.securityWorkspaceId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        providerAppId: opts.providerAppId,\n        securityWorkspaceId: opts.securityWorkspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSecurityWorkspaceAriStaticOpts);\n    return new _JiraSecurityWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSecurityWorkspaceAriStaticOpts);\n    return new _JiraSecurityWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      providerAppId: this.providerAppId,\n      securityWorkspaceId: this.securityWorkspaceId\n    };\n  }\n};\n\n// src/jira/site/types.ts\nvar JiraSiteAriResourceOwner = \"jira\", JiraSiteAriResourceType = \"site\";\n\n// src/jira/site/manifest.ts\nvar jiraSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraSiteAriResourceOwner,\n  resourceType: JiraSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/site/index.ts\nvar JiraSiteAri = class _JiraSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSiteAriStaticOpts.qualifier,\n      platformQualifier: jiraSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraSiteAriStaticOpts.resourceOwner,\n      resourceType: jiraSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSiteAriStaticOpts);\n    return new _JiraSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSiteAriStaticOpts);\n    return new _JiraSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/jira/sprint/types.ts\nvar JiraSprintAriResourceOwner = \"jira\", JiraSprintAriResourceType = \"sprint\";\n\n// src/jira/sprint/manifest.ts\nvar jiraSprintAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSprintAriResourceOwner,\n  resourceType: JiraSprintAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{sprintId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    sprintId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/sprint/index.ts\nvar JiraSprintAri = class _JiraSprintAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._sprintId = opts.resourceIdSegmentValues.sprintId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get sprintId() {\n    return this._sprintId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSprintAriStaticOpts.qualifier,\n      platformQualifier: jiraSprintAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSprintAriStaticOpts.resourceOwner,\n      resourceType: jiraSprintAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.sprintId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        sprintId: opts.sprintId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSprintAriStaticOpts);\n    return new _JiraSprintAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSprintAriStaticOpts);\n    return new _JiraSprintAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      sprintId: this.sprintId\n    };\n  }\n};\n\n// src/jira/user-broadcast-message/types.ts\nvar JiraUserBroadcastMessageAriResourceOwner = \"jira\", JiraUserBroadcastMessageAriResourceType = \"user-broadcast-message\";\n\n// src/jira/user-broadcast-message/manifest.ts\nvar jiraUserBroadcastMessageAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraUserBroadcastMessageAriResourceOwner,\n  resourceType: JiraUserBroadcastMessageAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{broadcastMessageId}/{userId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    broadcastMessageId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    userId: /[a-zA-Z0-9_\\-\\:]{1,128}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/user-broadcast-message/index.ts\nvar JiraUserBroadcastMessageAri = class _JiraUserBroadcastMessageAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._broadcastMessageId = opts.resourceIdSegmentValues.broadcastMessageId, this._userId = opts.resourceIdSegmentValues.userId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get broadcastMessageId() {\n    return this._broadcastMessageId;\n  }\n  get userId() {\n    return this._userId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraUserBroadcastMessageAriStaticOpts.qualifier,\n      platformQualifier: jiraUserBroadcastMessageAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraUserBroadcastMessageAriStaticOpts.resourceOwner,\n      resourceType: jiraUserBroadcastMessageAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.broadcastMessageId}/${opts.userId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        broadcastMessageId: opts.broadcastMessageId,\n        userId: opts.userId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraUserBroadcastMessageAriStaticOpts);\n    return new _JiraUserBroadcastMessageAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraUserBroadcastMessageAriStaticOpts);\n    return new _JiraUserBroadcastMessageAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      broadcastMessageId: this.broadcastMessageId,\n      userId: this.userId\n    };\n  }\n};\n\n// src/jira/version/types.ts\nvar JiraVersionAriResourceOwner = \"jira\", JiraVersionAriResourceType = \"version\";\n\n// src/jira/version/manifest.ts\nvar jiraVersionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraVersionAriResourceOwner,\n  resourceType: JiraVersionAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{versionId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    versionId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/version/index.ts\nvar JiraVersionAri = class _JiraVersionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._versionId = opts.resourceIdSegmentValues.versionId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get versionId() {\n    return this._versionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraVersionAriStaticOpts.qualifier,\n      platformQualifier: jiraVersionAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraVersionAriStaticOpts.resourceOwner,\n      resourceType: jiraVersionAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.versionId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        versionId: opts.versionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraVersionAriStaticOpts);\n    return new _JiraVersionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraVersionAriStaticOpts);\n    return new _JiraVersionAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      versionId: this.versionId\n    };\n  }\n};\n\n// src/jira/version-approver/types.ts\nvar JiraVersionApproverAriResourceOwner = \"jira\", JiraVersionApproverAriResourceType = \"version-approver\";\n\n// src/jira/version-approver/manifest.ts\nvar jiraVersionApproverAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraVersionApproverAriResourceOwner,\n  resourceType: JiraVersionApproverAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{versionId}/{approverId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    versionId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    approverId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/version-approver/index.ts\nvar JiraVersionApproverAri = class _JiraVersionApproverAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._versionId = opts.resourceIdSegmentValues.versionId, this._approverId = opts.resourceIdSegmentValues.approverId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get versionId() {\n    return this._versionId;\n  }\n  get approverId() {\n    return this._approverId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraVersionApproverAriStaticOpts.qualifier,\n      platformQualifier: jiraVersionApproverAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraVersionApproverAriStaticOpts.resourceOwner,\n      resourceType: jiraVersionApproverAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.versionId}/${opts.approverId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        versionId: opts.versionId,\n        approverId: opts.approverId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraVersionApproverAriStaticOpts);\n    return new _JiraVersionApproverAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraVersionApproverAriStaticOpts);\n    return new _JiraVersionApproverAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      versionId: this.versionId,\n      approverId: this.approverId\n    };\n  }\n};\n\n// src/jira/vulnerability/types.ts\nvar JiraVulnerabilityAriResourceOwner = \"jira\", JiraVulnerabilityAriResourceType = \"vulnerability\";\n\n// src/jira/vulnerability/manifest.ts\nvar jiraVulnerabilityAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraVulnerabilityAriResourceOwner,\n  resourceType: JiraVulnerabilityAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{vulnerabilityId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    vulnerabilityId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/vulnerability/index.ts\nvar JiraVulnerabilityAri = class _JiraVulnerabilityAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._vulnerabilityId = opts.resourceIdSegmentValues.vulnerabilityId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get vulnerabilityId() {\n    return this._vulnerabilityId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraVulnerabilityAriStaticOpts.qualifier,\n      platformQualifier: jiraVulnerabilityAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraVulnerabilityAriStaticOpts.resourceOwner,\n      resourceType: jiraVulnerabilityAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.vulnerabilityId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        vulnerabilityId: opts.vulnerabilityId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraVulnerabilityAriStaticOpts);\n    return new _JiraVulnerabilityAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraVulnerabilityAriStaticOpts);\n    return new _JiraVulnerabilityAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      vulnerabilityId: this.vulnerabilityId\n    };\n  }\n};\n\n// src/jira/vulnerability-history/types.ts\nvar JiraVulnerabilityHistoryAriResourceOwner = \"jira\", JiraVulnerabilityHistoryAriResourceType = \"vulnerability-history\";\n\n// src/jira/vulnerability-history/manifest.ts\nvar jiraVulnerabilityHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraVulnerabilityHistoryAriResourceOwner,\n  resourceType: JiraVulnerabilityHistoryAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{vulnerabilityId}/{updateSequenceNumber}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    vulnerabilityId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    updateSequenceNumber: /\\d+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/vulnerability-history/index.ts\nvar JiraVulnerabilityHistoryAri = class _JiraVulnerabilityHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._vulnerabilityId = opts.resourceIdSegmentValues.vulnerabilityId, this._updateSequenceNumber = opts.resourceIdSegmentValues.updateSequenceNumber;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get vulnerabilityId() {\n    return this._vulnerabilityId;\n  }\n  get updateSequenceNumber() {\n    return this._updateSequenceNumber;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraVulnerabilityHistoryAriStaticOpts.qualifier,\n      platformQualifier: jiraVulnerabilityHistoryAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraVulnerabilityHistoryAriStaticOpts.resourceOwner,\n      resourceType: jiraVulnerabilityHistoryAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.vulnerabilityId}/${opts.updateSequenceNumber}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        vulnerabilityId: opts.vulnerabilityId,\n        updateSequenceNumber: opts.updateSequenceNumber\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraVulnerabilityHistoryAriStaticOpts);\n    return new _JiraVulnerabilityHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraVulnerabilityHistoryAriStaticOpts);\n    return new _JiraVulnerabilityHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      vulnerabilityId: this.vulnerabilityId,\n      updateSequenceNumber: this.updateSequenceNumber\n    };\n  }\n};\n\n// src/jira/workflow/types.ts\nvar JiraWorkflowAriResourceOwner = \"jira\", JiraWorkflowAriResourceType = \"workflow\";\n\n// src/jira/workflow/manifest.ts\nvar jiraWorkflowAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraWorkflowAriResourceOwner,\n  resourceType: JiraWorkflowAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{workflowId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    workflowId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/workflow/index.ts\nvar JiraWorkflowAri = class _JiraWorkflowAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._workflowId = opts.resourceIdSegmentValues.workflowId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get workflowId() {\n    return this._workflowId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraWorkflowAriStaticOpts.qualifier,\n      platformQualifier: jiraWorkflowAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraWorkflowAriStaticOpts.resourceOwner,\n      resourceType: jiraWorkflowAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.workflowId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        workflowId: opts.workflowId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraWorkflowAriStaticOpts);\n    return new _JiraWorkflowAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraWorkflowAriStaticOpts);\n    return new _JiraWorkflowAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      workflowId: this.workflowId\n    };\n  }\n};\n\n// src/jira/workflow-scheme/types.ts\nvar JiraWorkflowSchemeAriResourceOwner = \"jira\", JiraWorkflowSchemeAriResourceType = \"workflow-scheme\";\n\n// src/jira/workflow-scheme/manifest.ts\nvar jiraWorkflowSchemeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraWorkflowSchemeAriResourceOwner,\n  resourceType: JiraWorkflowSchemeAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{workflowSchemeId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    workflowSchemeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/workflow-scheme/index.ts\nvar JiraWorkflowSchemeAri = class _JiraWorkflowSchemeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._workflowSchemeId = opts.resourceIdSegmentValues.workflowSchemeId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get workflowSchemeId() {\n    return this._workflowSchemeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraWorkflowSchemeAriStaticOpts.qualifier,\n      platformQualifier: jiraWorkflowSchemeAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraWorkflowSchemeAriStaticOpts.resourceOwner,\n      resourceType: jiraWorkflowSchemeAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.workflowSchemeId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        workflowSchemeId: opts.workflowSchemeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraWorkflowSchemeAriStaticOpts);\n    return new _JiraWorkflowSchemeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraWorkflowSchemeAriStaticOpts);\n    return new _JiraWorkflowSchemeAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      workflowSchemeId: this.workflowSchemeId\n    };\n  }\n};\n\n// src/jira/worklog/types.ts\nvar JiraWorklogAriResourceOwner = \"jira\", JiraWorklogAriResourceType = \"worklog\";\n\n// src/jira/worklog/manifest.ts\nvar jiraWorklogAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraWorklogAriResourceOwner,\n  resourceType: JiraWorklogAriResourceType,\n  resourceIdSlug: \"{worklogId}\",\n  resourceIdSegmentFormats: {\n    worklogId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/worklog/index.ts\nvar JiraWorklogAri = class _JiraWorklogAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._worklogId = opts.resourceIdSegmentValues.worklogId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get worklogId() {\n    return this._worklogId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraWorklogAriStaticOpts.qualifier,\n      platformQualifier: jiraWorklogAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraWorklogAriStaticOpts.resourceOwner,\n      resourceType: jiraWorklogAriStaticOpts.resourceType,\n      resourceId: `${opts.worklogId}`,\n      resourceIdSegmentValues: {\n        worklogId: opts.worklogId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraWorklogAriStaticOpts);\n    return new _JiraWorklogAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraWorklogAriStaticOpts);\n    return new _JiraWorklogAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      worklogId: this.worklogId\n    };\n  }\n};\n\n// src/jira/workspace/types.ts\nvar JiraWorkspaceAriResourceOwner = \"jira\", JiraWorkspaceAriResourceType = \"workspace\";\n\n// src/jira/workspace/manifest.ts\nvar jiraWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraWorkspaceAriResourceOwner,\n  resourceType: JiraWorkspaceAriResourceType,\n  resourceIdSlug: \"{activationId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira/workspace/index.ts\nvar JiraWorkspaceAri = class _JiraWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: jiraWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: jiraWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraWorkspaceAriStaticOpts);\n    return new _JiraWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraWorkspaceAriStaticOpts);\n    return new _JiraWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId\n    };\n  }\n};\n\n// src/jira-align/epic/types.ts\nvar JiraAlignEpicAriResourceOwner = \"jira-align\", JiraAlignEpicAriResourceType = \"epic\";\n\n// src/jira-align/epic/manifest.ts\nvar jiraAlignEpicAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$\"),\n  resourceOwner: JiraAlignEpicAriResourceOwner,\n  resourceType: JiraAlignEpicAriResourceType,\n  resourceIdSlug: \"{epicId}\",\n  resourceIdSegmentFormats: {\n    epicId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-align/epic/index.ts\nvar JiraAlignEpicAri = class _JiraAlignEpicAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._instanceId = opts.cloudId || \"\", this._epicId = opts.resourceIdSegmentValues.epicId;\n  }\n  get instanceId() {\n    return this._instanceId;\n  }\n  get epicId() {\n    return this._epicId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraAlignEpicAriStaticOpts.qualifier,\n      platformQualifier: jiraAlignEpicAriStaticOpts.platformQualifier,\n      cloudId: opts.instanceId,\n      resourceOwner: jiraAlignEpicAriStaticOpts.resourceOwner,\n      resourceType: jiraAlignEpicAriStaticOpts.resourceType,\n      resourceId: `${opts.epicId}`,\n      resourceIdSegmentValues: {\n        epicId: opts.epicId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAlignEpicAriStaticOpts);\n    return new _JiraAlignEpicAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraAlignEpicAriStaticOpts);\n    return new _JiraAlignEpicAri(opts);\n  }\n  getVariables() {\n    return {\n      instanceId: this.instanceId,\n      epicId: this.epicId\n    };\n  }\n};\n\n// src/jira-align/instance/types.ts\nvar JiraAlignInstanceAriResourceOwner = \"jira-align\", JiraAlignInstanceAriResourceType = \"instance\";\n\n// src/jira-align/instance/manifest.ts\nvar jiraAlignInstanceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraAlignInstanceAriResourceOwner,\n  resourceType: JiraAlignInstanceAriResourceType,\n  resourceIdSlug: \"{instanceId}\",\n  resourceIdSegmentFormats: {\n    instanceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-align/instance/index.ts\nvar JiraAlignInstanceAri = class _JiraAlignInstanceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._instanceId = opts.resourceIdSegmentValues.instanceId;\n  }\n  get instanceId() {\n    return this._instanceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraAlignInstanceAriStaticOpts.qualifier,\n      platformQualifier: jiraAlignInstanceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraAlignInstanceAriStaticOpts.resourceOwner,\n      resourceType: jiraAlignInstanceAriStaticOpts.resourceType,\n      resourceId: `${opts.instanceId}`,\n      resourceIdSegmentValues: {\n        instanceId: opts.instanceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraAlignInstanceAriStaticOpts);\n    return new _JiraAlignInstanceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraAlignInstanceAriStaticOpts);\n    return new _JiraAlignInstanceAri(opts);\n  }\n  getVariables() {\n    return {\n      instanceId: this.instanceId\n    };\n  }\n};\n\n// src/jira-core/role/types.ts\nvar JiraCoreRoleAriResourceOwner = \"jira-core\", JiraCoreRoleAriResourceType = \"role\";\n\n// src/jira-core/role/manifest.ts\nvar jiraCoreRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraCoreRoleAriResourceOwner,\n  resourceType: JiraCoreRoleAriResourceType,\n  resourceIdSlug: \"{roleId}\",\n  resourceIdSegmentFormats: {\n    roleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-core/role/index.ts\nvar JiraCoreRoleAri = class _JiraCoreRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleId = opts.resourceIdSegmentValues.roleId;\n  }\n  get roleId() {\n    return this._roleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraCoreRoleAriStaticOpts.qualifier,\n      platformQualifier: jiraCoreRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraCoreRoleAriStaticOpts.resourceOwner,\n      resourceType: jiraCoreRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.roleId}`,\n      resourceIdSegmentValues: {\n        roleId: opts.roleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCoreRoleAriStaticOpts);\n    return new _JiraCoreRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraCoreRoleAriStaticOpts);\n    return new _JiraCoreRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleId: this.roleId\n    };\n  }\n};\n\n// src/jira-core/site/types.ts\nvar JiraCoreSiteAriResourceOwner = \"jira-core\", JiraCoreSiteAriResourceType = \"site\";\n\n// src/jira-core/site/manifest.ts\nvar jiraCoreSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraCoreSiteAriResourceOwner,\n  resourceType: JiraCoreSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-core/site/index.ts\nvar JiraCoreSiteAri = class _JiraCoreSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraCoreSiteAriStaticOpts.qualifier,\n      platformQualifier: jiraCoreSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraCoreSiteAriStaticOpts.resourceOwner,\n      resourceType: jiraCoreSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraCoreSiteAriStaticOpts);\n    return new _JiraCoreSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraCoreSiteAriStaticOpts);\n    return new _JiraCoreSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/jira-servicedesk/approval/types.ts\nvar JiraServicedeskApprovalAriResourceOwner = \"jira-servicedesk\", JiraServicedeskApprovalAriResourceType = \"approval\";\n\n// src/jira-servicedesk/approval/manifest.ts\nvar jiraServicedeskApprovalAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraServicedeskApprovalAriResourceOwner,\n  resourceType: JiraServicedeskApprovalAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{approvalId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    approvalId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-servicedesk/approval/index.ts\nvar JiraServicedeskApprovalAri = class _JiraServicedeskApprovalAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._approvalId = opts.resourceIdSegmentValues.approvalId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get approvalId() {\n    return this._approvalId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraServicedeskApprovalAriStaticOpts.qualifier,\n      platformQualifier: jiraServicedeskApprovalAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraServicedeskApprovalAriStaticOpts.resourceOwner,\n      resourceType: jiraServicedeskApprovalAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.approvalId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        approvalId: opts.approvalId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskApprovalAriStaticOpts);\n    return new _JiraServicedeskApprovalAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraServicedeskApprovalAriStaticOpts);\n    return new _JiraServicedeskApprovalAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      approvalId: this.approvalId\n    };\n  }\n};\n\n// src/jira-servicedesk/calendar-event/types.ts\nvar JiraServicedeskCalendarEventAriResourceOwner = \"jira-servicedesk\", JiraServicedeskCalendarEventAriResourceType = \"calendar-event\";\n\n// src/jira-servicedesk/calendar-event/manifest.ts\nvar jiraServicedeskCalendarEventAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraServicedeskCalendarEventAriResourceOwner,\n  resourceType: JiraServicedeskCalendarEventAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{calendarEventId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    calendarEventId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-servicedesk/calendar-event/index.ts\nvar JiraServicedeskCalendarEventAri = class _JiraServicedeskCalendarEventAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._calendarEventId = opts.resourceIdSegmentValues.calendarEventId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get calendarEventId() {\n    return this._calendarEventId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraServicedeskCalendarEventAriStaticOpts.qualifier,\n      platformQualifier: jiraServicedeskCalendarEventAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraServicedeskCalendarEventAriStaticOpts.resourceOwner,\n      resourceType: jiraServicedeskCalendarEventAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.calendarEventId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        calendarEventId: opts.calendarEventId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskCalendarEventAriStaticOpts);\n    return new _JiraServicedeskCalendarEventAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraServicedeskCalendarEventAriStaticOpts);\n    return new _JiraServicedeskCalendarEventAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      calendarEventId: this.calendarEventId\n    };\n  }\n};\n\n// src/jira-servicedesk/canned-response/types.ts\nvar JiraServicedeskCannedResponseAriResourceOwner = \"jira-servicedesk\", JiraServicedeskCannedResponseAriResourceType = \"canned-response\";\n\n// src/jira-servicedesk/canned-response/manifest.ts\nvar jiraServicedeskCannedResponseAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraServicedeskCannedResponseAriResourceOwner,\n  resourceType: JiraServicedeskCannedResponseAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{cannedResponseId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    cannedResponseId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-servicedesk/canned-response/index.ts\nvar JiraServicedeskCannedResponseAri = class _JiraServicedeskCannedResponseAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._cannedResponseId = opts.resourceIdSegmentValues.cannedResponseId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get cannedResponseId() {\n    return this._cannedResponseId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraServicedeskCannedResponseAriStaticOpts.qualifier,\n      platformQualifier: jiraServicedeskCannedResponseAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraServicedeskCannedResponseAriStaticOpts.resourceOwner,\n      resourceType: jiraServicedeskCannedResponseAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.cannedResponseId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        cannedResponseId: opts.cannedResponseId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskCannedResponseAriStaticOpts);\n    return new _JiraServicedeskCannedResponseAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraServicedeskCannedResponseAriStaticOpts);\n    return new _JiraServicedeskCannedResponseAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      cannedResponseId: this.cannedResponseId\n    };\n  }\n};\n\n// src/jira-servicedesk/organization/types.ts\nvar JiraServicedeskOrganizationAriResourceOwner = \"jira-servicedesk\", JiraServicedeskOrganizationAriResourceType = \"organization\";\n\n// src/jira-servicedesk/organization/manifest.ts\nvar jiraServicedeskOrganizationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraServicedeskOrganizationAriResourceOwner,\n  resourceType: JiraServicedeskOrganizationAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{organizationId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    organizationId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-servicedesk/organization/index.ts\nvar JiraServicedeskOrganizationAri = class _JiraServicedeskOrganizationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._organizationId = opts.resourceIdSegmentValues.organizationId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get organizationId() {\n    return this._organizationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraServicedeskOrganizationAriStaticOpts.qualifier,\n      platformQualifier: jiraServicedeskOrganizationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraServicedeskOrganizationAriStaticOpts.resourceOwner,\n      resourceType: jiraServicedeskOrganizationAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.organizationId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        organizationId: opts.organizationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskOrganizationAriStaticOpts);\n    return new _JiraServicedeskOrganizationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraServicedeskOrganizationAriStaticOpts);\n    return new _JiraServicedeskOrganizationAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      organizationId: this.organizationId\n    };\n  }\n};\n\n// src/jira-servicedesk/queue/types.ts\nvar JiraServicedeskQueueAriResourceOwner = \"jira-servicedesk\", JiraServicedeskQueueAriResourceType = \"queue\";\n\n// src/jira-servicedesk/queue/manifest.ts\nvar jiraServicedeskQueueAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraServicedeskQueueAriResourceOwner,\n  resourceType: JiraServicedeskQueueAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{queueId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    queueId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-servicedesk/queue/index.ts\nvar JiraServicedeskQueueAri = class _JiraServicedeskQueueAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._queueId = opts.resourceIdSegmentValues.queueId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get queueId() {\n    return this._queueId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraServicedeskQueueAriStaticOpts.qualifier,\n      platformQualifier: jiraServicedeskQueueAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraServicedeskQueueAriStaticOpts.resourceOwner,\n      resourceType: jiraServicedeskQueueAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.queueId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        queueId: opts.queueId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskQueueAriStaticOpts);\n    return new _JiraServicedeskQueueAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraServicedeskQueueAriStaticOpts);\n    return new _JiraServicedeskQueueAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      queueId: this.queueId\n    };\n  }\n};\n\n// src/jira-servicedesk/request-type/types.ts\nvar JiraServicedeskRequestTypeAriResourceOwner = \"jira-servicedesk\", JiraServicedeskRequestTypeAriResourceType = \"request-type\";\n\n// src/jira-servicedesk/request-type/manifest.ts\nvar jiraServicedeskRequestTypeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraServicedeskRequestTypeAriResourceOwner,\n  resourceType: JiraServicedeskRequestTypeAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{requestTypeId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    requestTypeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-servicedesk/request-type/index.ts\nvar JiraServicedeskRequestTypeAri = class _JiraServicedeskRequestTypeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._requestTypeId = opts.resourceIdSegmentValues.requestTypeId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get requestTypeId() {\n    return this._requestTypeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraServicedeskRequestTypeAriStaticOpts.qualifier,\n      platformQualifier: jiraServicedeskRequestTypeAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraServicedeskRequestTypeAriStaticOpts.resourceOwner,\n      resourceType: jiraServicedeskRequestTypeAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.requestTypeId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        requestTypeId: opts.requestTypeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskRequestTypeAriStaticOpts);\n    return new _JiraServicedeskRequestTypeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraServicedeskRequestTypeAriStaticOpts);\n    return new _JiraServicedeskRequestTypeAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      requestTypeId: this.requestTypeId\n    };\n  }\n};\n\n// src/jira-servicedesk/role/types.ts\nvar JiraServicedeskRoleAriResourceOwner = \"jira-servicedesk\", JiraServicedeskRoleAriResourceType = \"role\";\n\n// src/jira-servicedesk/role/manifest.ts\nvar jiraServicedeskRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraServicedeskRoleAriResourceOwner,\n  resourceType: JiraServicedeskRoleAriResourceType,\n  resourceIdSlug: \"{roleId}\",\n  resourceIdSegmentFormats: {\n    roleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-servicedesk/role/index.ts\nvar JiraServicedeskRoleAri = class _JiraServicedeskRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleId = opts.resourceIdSegmentValues.roleId;\n  }\n  get roleId() {\n    return this._roleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraServicedeskRoleAriStaticOpts.qualifier,\n      platformQualifier: jiraServicedeskRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraServicedeskRoleAriStaticOpts.resourceOwner,\n      resourceType: jiraServicedeskRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.roleId}`,\n      resourceIdSegmentValues: {\n        roleId: opts.roleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskRoleAriStaticOpts);\n    return new _JiraServicedeskRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraServicedeskRoleAriStaticOpts);\n    return new _JiraServicedeskRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleId: this.roleId\n    };\n  }\n};\n\n// src/jira-servicedesk/site/types.ts\nvar JiraServicedeskSiteAriResourceOwner = \"jira-servicedesk\", JiraServicedeskSiteAriResourceType = \"site\";\n\n// src/jira-servicedesk/site/manifest.ts\nvar jiraServicedeskSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraServicedeskSiteAriResourceOwner,\n  resourceType: JiraServicedeskSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-servicedesk/site/index.ts\nvar JiraServicedeskSiteAri = class _JiraServicedeskSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraServicedeskSiteAriStaticOpts.qualifier,\n      platformQualifier: jiraServicedeskSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraServicedeskSiteAriStaticOpts.resourceOwner,\n      resourceType: jiraServicedeskSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskSiteAriStaticOpts);\n    return new _JiraServicedeskSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraServicedeskSiteAriStaticOpts);\n    return new _JiraServicedeskSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/jira-servicedesk/sla/types.ts\nvar JiraServicedeskSlaAriResourceOwner = \"jira-servicedesk\", JiraServicedeskSlaAriResourceType = \"sla\";\n\n// src/jira-servicedesk/sla/manifest.ts\nvar jiraServicedeskSlaAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraServicedeskSlaAriResourceOwner,\n  resourceType: JiraServicedeskSlaAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{slaId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    slaId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-servicedesk/sla/index.ts\nvar JiraServicedeskSlaAri = class _JiraServicedeskSlaAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._slaId = opts.resourceIdSegmentValues.slaId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get slaId() {\n    return this._slaId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraServicedeskSlaAriStaticOpts.qualifier,\n      platformQualifier: jiraServicedeskSlaAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraServicedeskSlaAriStaticOpts.resourceOwner,\n      resourceType: jiraServicedeskSlaAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.slaId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        slaId: opts.slaId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraServicedeskSlaAriStaticOpts);\n    return new _JiraServicedeskSlaAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraServicedeskSlaAriStaticOpts);\n    return new _JiraServicedeskSlaAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      slaId: this.slaId\n    };\n  }\n};\n\n// src/jira-software/board/types.ts\nvar JiraSoftwareBoardAriResourceOwner = \"jira-software\", JiraSoftwareBoardAriResourceType = \"board\";\n\n// src/jira-software/board/manifest.ts\nvar jiraSoftwareBoardAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSoftwareBoardAriResourceOwner,\n  resourceType: JiraSoftwareBoardAriResourceType,\n  resourceIdSlug: \"{boardId}\",\n  resourceIdSegmentFormats: {\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/board/index.ts\nvar JiraSoftwareBoardAri = class _JiraSoftwareBoardAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._boardId = opts.resourceIdSegmentValues.boardId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareBoardAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareBoardAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSoftwareBoardAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareBoardAriStaticOpts.resourceType,\n      resourceId: `${opts.boardId}`,\n      resourceIdSegmentValues: {\n        boardId: opts.boardId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareBoardAriStaticOpts);\n    return new _JiraSoftwareBoardAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareBoardAriStaticOpts);\n    return new _JiraSoftwareBoardAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      boardId: this.boardId\n    };\n  }\n};\n\n// src/jira-software/board-feature/types.ts\nvar JiraSoftwareBoardFeatureAriResourceOwner = \"jira-software\", JiraSoftwareBoardFeatureAriResourceType = \"board-feature\";\n\n// src/jira-software/board-feature/manifest.ts\nvar jiraSoftwareBoardFeatureAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSoftwareBoardFeatureAriResourceOwner,\n  resourceType: JiraSoftwareBoardFeatureAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{boardId}/featureKey/{featureKey}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    featureKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/board-feature/index.ts\nvar JiraSoftwareBoardFeatureAri = class _JiraSoftwareBoardFeatureAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._featureKey = opts.resourceIdSegmentValues.featureKey;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  get featureKey() {\n    return this._featureKey;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareBoardFeatureAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareBoardFeatureAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSoftwareBoardFeatureAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareBoardFeatureAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.boardId}/featureKey/${opts.featureKey}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        boardId: opts.boardId,\n        featureKey: opts.featureKey\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareBoardFeatureAriStaticOpts);\n    return new _JiraSoftwareBoardFeatureAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareBoardFeatureAriStaticOpts);\n    return new _JiraSoftwareBoardFeatureAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      boardId: this.boardId,\n      featureKey: this.featureKey\n    };\n  }\n};\n\n// src/jira-software/board-issue-list/types.ts\nvar JiraSoftwareBoardIssueListAriResourceOwner = \"jira-software\", JiraSoftwareBoardIssueListAriResourceType = \"board-issue-list\";\n\n// src/jira-software/board-issue-list/manifest.ts\nvar jiraSoftwareBoardIssueListAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSoftwareBoardIssueListAriResourceOwner,\n  resourceType: JiraSoftwareBoardIssueListAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{boardId}/{issueListId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    issueListId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/board-issue-list/index.ts\nvar JiraSoftwareBoardIssueListAri = class _JiraSoftwareBoardIssueListAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._issueListId = opts.resourceIdSegmentValues.issueListId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  get issueListId() {\n    return this._issueListId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareBoardIssueListAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareBoardIssueListAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSoftwareBoardIssueListAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareBoardIssueListAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.issueListId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        boardId: opts.boardId,\n        issueListId: opts.issueListId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareBoardIssueListAriStaticOpts);\n    return new _JiraSoftwareBoardIssueListAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareBoardIssueListAriStaticOpts);\n    return new _JiraSoftwareBoardIssueListAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      boardId: this.boardId,\n      issueListId: this.issueListId\n    };\n  }\n};\n\n// src/jira-software/card/types.ts\nvar JiraSoftwareCardAriResourceOwner = \"jira-software\", JiraSoftwareCardAriResourceType = \"card\";\n\n// src/jira-software/card/manifest.ts\nvar jiraSoftwareCardAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSoftwareCardAriResourceOwner,\n  resourceType: JiraSoftwareCardAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{boardId}/{cardId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    cardId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/card/index.ts\nvar JiraSoftwareCardAri = class _JiraSoftwareCardAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._cardId = opts.resourceIdSegmentValues.cardId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  get cardId() {\n    return this._cardId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareCardAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareCardAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSoftwareCardAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareCardAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.cardId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        boardId: opts.boardId,\n        cardId: opts.cardId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareCardAriStaticOpts);\n    return new _JiraSoftwareCardAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareCardAriStaticOpts);\n    return new _JiraSoftwareCardAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      boardId: this.boardId,\n      cardId: this.cardId\n    };\n  }\n};\n\n// src/jira-software/card-color/types.ts\nvar JiraSoftwareCardColorAriResourceOwner = \"jira-software\", JiraSoftwareCardColorAriResourceType = \"card-color\";\n\n// src/jira-software/card-color/manifest.ts\nvar jiraSoftwareCardColorAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSoftwareCardColorAriResourceOwner,\n  resourceType: JiraSoftwareCardColorAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{boardId}/{cardColorId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    cardColorId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/card-color/index.ts\nvar JiraSoftwareCardColorAri = class _JiraSoftwareCardColorAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._cardColorId = opts.resourceIdSegmentValues.cardColorId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  get cardColorId() {\n    return this._cardColorId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareCardColorAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareCardColorAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSoftwareCardColorAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareCardColorAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.cardColorId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        boardId: opts.boardId,\n        cardColorId: opts.cardColorId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareCardColorAriStaticOpts);\n    return new _JiraSoftwareCardColorAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareCardColorAriStaticOpts);\n    return new _JiraSoftwareCardColorAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      boardId: this.boardId,\n      cardColorId: this.cardColorId\n    };\n  }\n};\n\n// src/jira-software/card-layout/types.ts\nvar JiraSoftwareCardLayoutAriResourceOwner = \"jira-software\", JiraSoftwareCardLayoutAriResourceType = \"card-layout\";\n\n// src/jira-software/card-layout/manifest.ts\nvar jiraSoftwareCardLayoutAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSoftwareCardLayoutAriResourceOwner,\n  resourceType: JiraSoftwareCardLayoutAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{boardId}/{cardLayoutId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    cardLayoutId: /[a-zA-Z0-9_]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/card-layout/index.ts\nvar JiraSoftwareCardLayoutAri = class _JiraSoftwareCardLayoutAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._cardLayoutId = opts.resourceIdSegmentValues.cardLayoutId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  get cardLayoutId() {\n    return this._cardLayoutId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareCardLayoutAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareCardLayoutAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSoftwareCardLayoutAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareCardLayoutAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.cardLayoutId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        boardId: opts.boardId,\n        cardLayoutId: opts.cardLayoutId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareCardLayoutAriStaticOpts);\n    return new _JiraSoftwareCardLayoutAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareCardLayoutAriStaticOpts);\n    return new _JiraSoftwareCardLayoutAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      boardId: this.boardId,\n      cardLayoutId: this.cardLayoutId\n    };\n  }\n};\n\n// src/jira-software/card-parent/types.ts\nvar JiraSoftwareCardParentAriResourceOwner = \"jira-software\", JiraSoftwareCardParentAriResourceType = \"card-parent\";\n\n// src/jira-software/card-parent/manifest.ts\nvar jiraSoftwareCardParentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSoftwareCardParentAriResourceOwner,\n  resourceType: JiraSoftwareCardParentAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{boardId}/{cardParentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    cardParentId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/card-parent/index.ts\nvar JiraSoftwareCardParentAri = class _JiraSoftwareCardParentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._cardParentId = opts.resourceIdSegmentValues.cardParentId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  get cardParentId() {\n    return this._cardParentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareCardParentAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareCardParentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSoftwareCardParentAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareCardParentAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.cardParentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        boardId: opts.boardId,\n        cardParentId: opts.cardParentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareCardParentAriStaticOpts);\n    return new _JiraSoftwareCardParentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareCardParentAriStaticOpts);\n    return new _JiraSoftwareCardParentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      boardId: this.boardId,\n      cardParentId: this.cardParentId\n    };\n  }\n};\n\n// src/jira-software/column/types.ts\nvar JiraSoftwareColumnAriResourceOwner = \"jira-software\", JiraSoftwareColumnAriResourceType = \"column\";\n\n// src/jira-software/column/manifest.ts\nvar jiraSoftwareColumnAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSoftwareColumnAriResourceOwner,\n  resourceType: JiraSoftwareColumnAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{boardId}/{columnId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    columnId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/column/index.ts\nvar JiraSoftwareColumnAri = class _JiraSoftwareColumnAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._columnId = opts.resourceIdSegmentValues.columnId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  get columnId() {\n    return this._columnId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareColumnAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareColumnAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSoftwareColumnAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareColumnAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.columnId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        boardId: opts.boardId,\n        columnId: opts.columnId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareColumnAriStaticOpts);\n    return new _JiraSoftwareColumnAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareColumnAriStaticOpts);\n    return new _JiraSoftwareColumnAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      boardId: this.boardId,\n      columnId: this.columnId\n    };\n  }\n};\n\n// src/jira-software/custom-filter/types.ts\nvar JiraSoftwareCustomFilterAriResourceOwner = \"jira-software\", JiraSoftwareCustomFilterAriResourceType = \"custom-filter\";\n\n// src/jira-software/custom-filter/manifest.ts\nvar jiraSoftwareCustomFilterAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSoftwareCustomFilterAriResourceOwner,\n  resourceType: JiraSoftwareCustomFilterAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{boardId}/{customFilterId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    customFilterId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/custom-filter/index.ts\nvar JiraSoftwareCustomFilterAri = class _JiraSoftwareCustomFilterAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._customFilterId = opts.resourceIdSegmentValues.customFilterId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  get customFilterId() {\n    return this._customFilterId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareCustomFilterAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareCustomFilterAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSoftwareCustomFilterAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareCustomFilterAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.customFilterId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        boardId: opts.boardId,\n        customFilterId: opts.customFilterId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareCustomFilterAriStaticOpts);\n    return new _JiraSoftwareCustomFilterAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareCustomFilterAriStaticOpts);\n    return new _JiraSoftwareCustomFilterAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      boardId: this.boardId,\n      customFilterId: this.customFilterId\n    };\n  }\n};\n\n// src/jira-software/role/types.ts\nvar JiraSoftwareRoleAriResourceOwner = \"jira-software\", JiraSoftwareRoleAriResourceType = \"role\";\n\n// src/jira-software/role/manifest.ts\nvar jiraSoftwareRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraSoftwareRoleAriResourceOwner,\n  resourceType: JiraSoftwareRoleAriResourceType,\n  resourceIdSlug: \"{roleId}\",\n  resourceIdSegmentFormats: {\n    roleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/role/index.ts\nvar JiraSoftwareRoleAri = class _JiraSoftwareRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleId = opts.resourceIdSegmentValues.roleId;\n  }\n  get roleId() {\n    return this._roleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareRoleAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraSoftwareRoleAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.roleId}`,\n      resourceIdSegmentValues: {\n        roleId: opts.roleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareRoleAriStaticOpts);\n    return new _JiraSoftwareRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareRoleAriStaticOpts);\n    return new _JiraSoftwareRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleId: this.roleId\n    };\n  }\n};\n\n// src/jira-software/site/types.ts\nvar JiraSoftwareSiteAriResourceOwner = \"jira-software\", JiraSoftwareSiteAriResourceType = \"site\";\n\n// src/jira-software/site/manifest.ts\nvar jiraSoftwareSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: JiraSoftwareSiteAriResourceOwner,\n  resourceType: JiraSoftwareSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/site/index.ts\nvar JiraSoftwareSiteAri = class _JiraSoftwareSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareSiteAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: jiraSoftwareSiteAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareSiteAriStaticOpts);\n    return new _JiraSoftwareSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareSiteAriStaticOpts);\n    return new _JiraSoftwareSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/jira-software/swimlane/types.ts\nvar JiraSoftwareSwimlaneAriResourceOwner = \"jira-software\", JiraSoftwareSwimlaneAriResourceType = \"swimlane\";\n\n// src/jira-software/swimlane/manifest.ts\nvar jiraSoftwareSwimlaneAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSoftwareSwimlaneAriResourceOwner,\n  resourceType: JiraSoftwareSwimlaneAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{boardId}/{swimlaneId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    swimlaneId: /[0-9]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/swimlane/index.ts\nvar JiraSoftwareSwimlaneAri = class _JiraSoftwareSwimlaneAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._swimlaneId = opts.resourceIdSegmentValues.swimlaneId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  get swimlaneId() {\n    return this._swimlaneId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareSwimlaneAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareSwimlaneAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSoftwareSwimlaneAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareSwimlaneAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.swimlaneId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        boardId: opts.boardId,\n        swimlaneId: opts.swimlaneId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareSwimlaneAriStaticOpts);\n    return new _JiraSoftwareSwimlaneAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareSwimlaneAriStaticOpts);\n    return new _JiraSoftwareSwimlaneAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      boardId: this.boardId,\n      swimlaneId: this.swimlaneId\n    };\n  }\n};\n\n// src/jira-software/user-board-config/types.ts\nvar JiraSoftwareUserBoardConfigAriResourceOwner = \"jira-software\", JiraSoftwareUserBoardConfigAriResourceType = \"user-board-config\";\n\n// src/jira-software/user-board-config/manifest.ts\nvar jiraSoftwareUserBoardConfigAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSoftwareUserBoardConfigAriResourceOwner,\n  resourceType: JiraSoftwareUserBoardConfigAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{boardId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/user-board-config/index.ts\nvar JiraSoftwareUserBoardConfigAri = class _JiraSoftwareUserBoardConfigAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareUserBoardConfigAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareUserBoardConfigAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSoftwareUserBoardConfigAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareUserBoardConfigAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.boardId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        boardId: opts.boardId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareUserBoardConfigAriStaticOpts);\n    return new _JiraSoftwareUserBoardConfigAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareUserBoardConfigAriStaticOpts);\n    return new _JiraSoftwareUserBoardConfigAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      boardId: this.boardId\n    };\n  }\n};\n\n// src/jira-software/view-config/types.ts\nvar JiraSoftwareViewConfigAriResourceOwner = \"jira-software\", JiraSoftwareViewConfigAriResourceType = \"view-config\";\n\n// src/jira-software/view-config/manifest.ts\nvar jiraSoftwareViewConfigAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: JiraSoftwareViewConfigAriResourceOwner,\n  resourceType: JiraSoftwareViewConfigAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{boardId}/{viewType}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    boardId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    viewType: /(board|backlog|timeline)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/jira-software/view-config/index.ts\nvar JiraSoftwareViewConfigAri = class _JiraSoftwareViewConfigAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId, this._boardId = opts.resourceIdSegmentValues.boardId, this._viewType = opts.resourceIdSegmentValues.viewType;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  get viewType() {\n    return this._viewType;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: jiraSoftwareViewConfigAriStaticOpts.qualifier,\n      platformQualifier: jiraSoftwareViewConfigAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: jiraSoftwareViewConfigAriStaticOpts.resourceOwner,\n      resourceType: jiraSoftwareViewConfigAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.boardId}/${opts.viewType}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        boardId: opts.boardId,\n        viewType: opts.viewType\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, jiraSoftwareViewConfigAriStaticOpts);\n    return new _JiraSoftwareViewConfigAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, jiraSoftwareViewConfigAriStaticOpts);\n    return new _JiraSoftwareViewConfigAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId,\n      boardId: this.boardId,\n      viewType: this.viewType\n    };\n  }\n};\n\n// src/linking-platform/datasource/types.ts\nvar LinkingPlatformDatasourceAriResourceOwner = \"linking-platform\", LinkingPlatformDatasourceAriResourceType = \"datasource\";\n\n// src/linking-platform/datasource/manifest.ts\nvar linkingPlatformDatasourceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: LinkingPlatformDatasourceAriResourceOwner,\n  resourceType: LinkingPlatformDatasourceAriResourceType,\n  resourceIdSlug: \"{datasourceId}\",\n  resourceIdSegmentFormats: {\n    datasourceId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/linking-platform/datasource/index.ts\nvar LinkingPlatformDatasourceAri = class _LinkingPlatformDatasourceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._datasourceId = opts.resourceIdSegmentValues.datasourceId;\n  }\n  get datasourceId() {\n    return this._datasourceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: linkingPlatformDatasourceAriStaticOpts.qualifier,\n      platformQualifier: linkingPlatformDatasourceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: linkingPlatformDatasourceAriStaticOpts.resourceOwner,\n      resourceType: linkingPlatformDatasourceAriStaticOpts.resourceType,\n      resourceId: `${opts.datasourceId}`,\n      resourceIdSegmentValues: {\n        datasourceId: opts.datasourceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, linkingPlatformDatasourceAriStaticOpts);\n    return new _LinkingPlatformDatasourceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, linkingPlatformDatasourceAriStaticOpts);\n    return new _LinkingPlatformDatasourceAri(opts);\n  }\n  getVariables() {\n    return {\n      datasourceId: this.datasourceId\n    };\n  }\n};\n\n// src/loom/site/types.ts\nvar LoomSiteAriResourceOwner = \"loom\", LoomSiteAriResourceType = \"site\";\n\n// src/loom/site/manifest.ts\nvar loomSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: LoomSiteAriResourceOwner,\n  resourceType: LoomSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/loom/site/index.ts\nvar LoomSiteAri = class _LoomSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: loomSiteAriStaticOpts.qualifier,\n      platformQualifier: loomSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: loomSiteAriStaticOpts.resourceOwner,\n      resourceType: loomSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, loomSiteAriStaticOpts);\n    return new _LoomSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, loomSiteAriStaticOpts);\n    return new _LoomSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/maker-space/group/types.ts\nvar MakerSpaceGroupAriResourceOwner = \"maker-space\", MakerSpaceGroupAriResourceType = \"group\";\n\n// src/maker-space/group/manifest.ts\nvar makerSpaceGroupAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: MakerSpaceGroupAriResourceOwner,\n  resourceType: MakerSpaceGroupAriResourceType,\n  resourceIdSlug: \"{groupId}\",\n  resourceIdSegmentFormats: {\n    groupId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/maker-space/group/index.ts\nvar MakerSpaceGroupAri = class _MakerSpaceGroupAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._groupId = opts.resourceIdSegmentValues.groupId;\n  }\n  get groupId() {\n    return this._groupId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: makerSpaceGroupAriStaticOpts.qualifier,\n      platformQualifier: makerSpaceGroupAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: makerSpaceGroupAriStaticOpts.resourceOwner,\n      resourceType: makerSpaceGroupAriStaticOpts.resourceType,\n      resourceId: `${opts.groupId}`,\n      resourceIdSegmentValues: {\n        groupId: opts.groupId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, makerSpaceGroupAriStaticOpts);\n    return new _MakerSpaceGroupAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, makerSpaceGroupAriStaticOpts);\n    return new _MakerSpaceGroupAri(opts);\n  }\n  getVariables() {\n    return {\n      groupId: this.groupId\n    };\n  }\n};\n\n// src/mapi/role/types.ts\nvar MapiRoleAriResourceOwner = \"mapi\", MapiRoleAriResourceType = \"role\";\n\n// src/mapi/role/manifest.ts\nvar mapiRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: MapiRoleAriResourceOwner,\n  resourceType: MapiRoleAriResourceType,\n  resourceIdSlug: \"scope/{roleTypeId}\",\n  resourceIdSegmentFormats: {\n    roleTypeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/mapi/role/index.ts\nvar MapiRoleAri = class _MapiRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleTypeId = opts.resourceIdSegmentValues.roleTypeId;\n  }\n  get roleTypeId() {\n    return this._roleTypeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: mapiRoleAriStaticOpts.qualifier,\n      platformQualifier: mapiRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: mapiRoleAriStaticOpts.resourceOwner,\n      resourceType: mapiRoleAriStaticOpts.resourceType,\n      resourceId: `scope/${opts.roleTypeId}`,\n      resourceIdSegmentValues: {\n        roleTypeId: opts.roleTypeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, mapiRoleAriStaticOpts);\n    return new _MapiRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, mapiRoleAriStaticOpts);\n    return new _MapiRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleTypeId: this.roleTypeId\n    };\n  }\n};\n\n// src/marketing/customer-domain/types.ts\nvar MarketingCustomerDomainAriResourceOwner = \"marketing\", MarketingCustomerDomainAriResourceType = \"customer-domain\";\n\n// src/marketing/customer-domain/manifest.ts\nvar marketingCustomerDomainAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: MarketingCustomerDomainAriResourceOwner,\n  resourceType: MarketingCustomerDomainAriResourceType,\n  resourceIdSlug: \"{domainBase64}\",\n  resourceIdSegmentFormats: {\n    domainBase64: /[a-zA-Z0-9=]+={0,1}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/marketing/customer-domain/index.ts\nvar MarketingCustomerDomainAri = class _MarketingCustomerDomainAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._domainBase64 = opts.resourceIdSegmentValues.domainBase64;\n  }\n  get domainBase64() {\n    return this._domainBase64;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: marketingCustomerDomainAriStaticOpts.qualifier,\n      platformQualifier: marketingCustomerDomainAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: marketingCustomerDomainAriStaticOpts.resourceOwner,\n      resourceType: marketingCustomerDomainAriStaticOpts.resourceType,\n      resourceId: `${opts.domainBase64}`,\n      resourceIdSegmentValues: {\n        domainBase64: opts.domainBase64\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, marketingCustomerDomainAriStaticOpts);\n    return new _MarketingCustomerDomainAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, marketingCustomerDomainAriStaticOpts);\n    return new _MarketingCustomerDomainAri(opts);\n  }\n  getVariables() {\n    return {\n      domainBase64: this.domainBase64\n    };\n  }\n};\n\n// src/marketplace/team/types.ts\nvar MarketplaceTeamAriResourceOwner = \"marketplace\", MarketplaceTeamAriResourceType = \"team\";\n\n// src/marketplace/team/manifest.ts\nvar marketplaceTeamAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: MarketplaceTeamAriResourceOwner,\n  resourceType: MarketplaceTeamAriResourceType,\n  resourceIdSlug: \"{teamId}\",\n  resourceIdSegmentFormats: {\n    teamId: /[a-zA-Z0-9.\\-_~]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/marketplace/team/index.ts\nvar MarketplaceTeamAri = class _MarketplaceTeamAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._teamId = opts.resourceIdSegmentValues.teamId;\n  }\n  get teamId() {\n    return this._teamId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: marketplaceTeamAriStaticOpts.qualifier,\n      platformQualifier: marketplaceTeamAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: marketplaceTeamAriStaticOpts.resourceOwner,\n      resourceType: marketplaceTeamAriStaticOpts.resourceType,\n      resourceId: `${opts.teamId}`,\n      resourceIdSegmentValues: {\n        teamId: opts.teamId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, marketplaceTeamAriStaticOpts);\n    return new _MarketplaceTeamAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, marketplaceTeamAriStaticOpts);\n    return new _MarketplaceTeamAri(opts);\n  }\n  getVariables() {\n    return {\n      teamId: this.teamId\n    };\n  }\n};\n\n// src/measurement/email-uuid/types.ts\nvar MeasurementEmailUuidAriResourceOwner = \"measurement\", MeasurementEmailUuidAriResourceType = \"email-uuid\";\n\n// src/measurement/email-uuid/manifest.ts\nvar measurementEmailUuidAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: MeasurementEmailUuidAriResourceOwner,\n  resourceType: MeasurementEmailUuidAriResourceType,\n  resourceIdSlug: \"{emailId}\",\n  resourceIdSegmentFormats: {\n    emailId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/measurement/email-uuid/index.ts\nvar MeasurementEmailUuidAri = class _MeasurementEmailUuidAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._emailId = opts.resourceIdSegmentValues.emailId;\n  }\n  get emailId() {\n    return this._emailId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: measurementEmailUuidAriStaticOpts.qualifier,\n      platformQualifier: measurementEmailUuidAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: measurementEmailUuidAriStaticOpts.resourceOwner,\n      resourceType: measurementEmailUuidAriStaticOpts.resourceType,\n      resourceId: `${opts.emailId}`,\n      resourceIdSegmentValues: {\n        emailId: opts.emailId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, measurementEmailUuidAriStaticOpts);\n    return new _MeasurementEmailUuidAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, measurementEmailUuidAriStaticOpts);\n    return new _MeasurementEmailUuidAri(opts);\n  }\n  getVariables() {\n    return {\n      emailId: this.emailId\n    };\n  }\n};\n\n// src/measurement/site-user/types.ts\nvar MeasurementSiteUserAriResourceOwner = \"measurement\", MeasurementSiteUserAriResourceType = \"site-user\";\n\n// src/measurement/site-user/manifest.ts\nvar measurementSiteUserAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: MeasurementSiteUserAriResourceOwner,\n  resourceType: MeasurementSiteUserAriResourceType,\n  resourceIdSlug: \"{siteId}/{aaId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    aaId: /[a-zA-Z0-9_\\-\\:]{1,128}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/measurement/site-user/index.ts\nvar MeasurementSiteUserAri = class _MeasurementSiteUserAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId, this._aaId = opts.resourceIdSegmentValues.aaId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get aaId() {\n    return this._aaId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: measurementSiteUserAriStaticOpts.qualifier,\n      platformQualifier: measurementSiteUserAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: measurementSiteUserAriStaticOpts.resourceOwner,\n      resourceType: measurementSiteUserAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}/${opts.aaId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId,\n        aaId: opts.aaId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, measurementSiteUserAriStaticOpts);\n    return new _MeasurementSiteUserAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, measurementSiteUserAriStaticOpts);\n    return new _MeasurementSiteUserAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      aaId: this.aaId\n    };\n  }\n};\n\n// src/measurement/user/types.ts\nvar MeasurementUserAriResourceOwner = \"measurement\", MeasurementUserAriResourceType = \"user\";\n\n// src/measurement/user/manifest.ts\nvar measurementUserAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: MeasurementUserAriResourceOwner,\n  resourceType: MeasurementUserAriResourceType,\n  resourceIdSlug: \"ff-client-anonymous/{anonUserId}\",\n  resourceIdSegmentFormats: {\n    anonUserId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/measurement/user/index.ts\nvar MeasurementUserAri = class _MeasurementUserAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._anonUserId = opts.resourceIdSegmentValues.anonUserId;\n  }\n  get anonUserId() {\n    return this._anonUserId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: measurementUserAriStaticOpts.qualifier,\n      platformQualifier: measurementUserAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: measurementUserAriStaticOpts.resourceOwner,\n      resourceType: measurementUserAriStaticOpts.resourceType,\n      resourceId: `ff-client-anonymous/${opts.anonUserId}`,\n      resourceIdSegmentValues: {\n        anonUserId: opts.anonUserId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, measurementUserAriStaticOpts);\n    return new _MeasurementUserAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, measurementUserAriStaticOpts);\n    return new _MeasurementUserAri(opts);\n  }\n  getVariables() {\n    return {\n      anonUserId: this.anonUserId\n    };\n  }\n};\n\n// src/media/file/types.ts\nvar MediaFileAriResourceOwner = \"media\", MediaFileAriResourceType = \"file\";\n\n// src/media/file/manifest.ts\nvar mediaFileAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: MediaFileAriResourceOwner,\n  resourceType: MediaFileAriResourceType,\n  resourceIdSlug: \"{fileId}\",\n  resourceIdSegmentFormats: {\n    fileId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/media/file/index.ts\nvar MediaFileAri = class _MediaFileAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._fileId = opts.resourceIdSegmentValues.fileId;\n  }\n  get fileId() {\n    return this._fileId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: mediaFileAriStaticOpts.qualifier,\n      platformQualifier: mediaFileAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: mediaFileAriStaticOpts.resourceOwner,\n      resourceType: mediaFileAriStaticOpts.resourceType,\n      resourceId: `${opts.fileId}`,\n      resourceIdSegmentValues: {\n        fileId: opts.fileId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, mediaFileAriStaticOpts);\n    return new _MediaFileAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, mediaFileAriStaticOpts);\n    return new _MediaFileAri(opts);\n  }\n  getVariables() {\n    return {\n      fileId: this.fileId\n    };\n  }\n};\n\n// src/mercury/comment/types.ts\nvar MercuryCommentAriResourceOwner = \"mercury\", MercuryCommentAriResourceType = \"comment\";\n\n// src/mercury/comment/manifest.ts\nvar mercuryCommentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: MercuryCommentAriResourceOwner,\n  resourceType: MercuryCommentAriResourceType,\n  resourceIdSlug: \"workspace/{workspaceId}/{commentUuid}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    commentUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/mercury/comment/index.ts\nvar MercuryCommentAri = class _MercuryCommentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._commentUuid = opts.resourceIdSegmentValues.commentUuid;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get commentUuid() {\n    return this._commentUuid;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: mercuryCommentAriStaticOpts.qualifier,\n      platformQualifier: mercuryCommentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: mercuryCommentAriStaticOpts.resourceOwner,\n      resourceType: mercuryCommentAriStaticOpts.resourceType,\n      resourceId: `workspace/${opts.workspaceId}/${opts.commentUuid}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        commentUuid: opts.commentUuid\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryCommentAriStaticOpts);\n    return new _MercuryCommentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, mercuryCommentAriStaticOpts);\n    return new _MercuryCommentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      commentUuid: this.commentUuid\n    };\n  }\n};\n\n// src/mercury/focus-area/types.ts\nvar MercuryFocusAreaAriResourceOwner = \"mercury\", MercuryFocusAreaAriResourceType = \"focus-area\";\n\n// src/mercury/focus-area/manifest.ts\nvar mercuryFocusAreaAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: MercuryFocusAreaAriResourceOwner,\n  resourceType: MercuryFocusAreaAriResourceType,\n  resourceIdSlug: \"workspace/{workspaceId}/{focusAreaId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    focusAreaId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/mercury/focus-area/index.ts\nvar MercuryFocusAreaAri = class _MercuryFocusAreaAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._focusAreaId = opts.resourceIdSegmentValues.focusAreaId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get focusAreaId() {\n    return this._focusAreaId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: mercuryFocusAreaAriStaticOpts.qualifier,\n      platformQualifier: mercuryFocusAreaAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: mercuryFocusAreaAriStaticOpts.resourceOwner,\n      resourceType: mercuryFocusAreaAriStaticOpts.resourceType,\n      resourceId: `workspace/${opts.workspaceId}/${opts.focusAreaId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        focusAreaId: opts.focusAreaId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryFocusAreaAriStaticOpts);\n    return new _MercuryFocusAreaAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, mercuryFocusAreaAriStaticOpts);\n    return new _MercuryFocusAreaAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      focusAreaId: this.focusAreaId\n    };\n  }\n};\n\n// src/mercury/focus-area-status-update/types.ts\nvar MercuryFocusAreaStatusUpdateAriResourceOwner = \"mercury\", MercuryFocusAreaStatusUpdateAriResourceType = \"focus-area-status-update\";\n\n// src/mercury/focus-area-status-update/manifest.ts\nvar mercuryFocusAreaStatusUpdateAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: MercuryFocusAreaStatusUpdateAriResourceOwner,\n  resourceType: MercuryFocusAreaStatusUpdateAriResourceType,\n  resourceIdSlug: \"workspace/{workspaceId}/{focusAreaStatusUpdateId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    focusAreaStatusUpdateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/mercury/focus-area-status-update/index.ts\nvar MercuryFocusAreaStatusUpdateAri = class _MercuryFocusAreaStatusUpdateAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._focusAreaStatusUpdateId = opts.resourceIdSegmentValues.focusAreaStatusUpdateId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get focusAreaStatusUpdateId() {\n    return this._focusAreaStatusUpdateId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: mercuryFocusAreaStatusUpdateAriStaticOpts.qualifier,\n      platformQualifier: mercuryFocusAreaStatusUpdateAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: mercuryFocusAreaStatusUpdateAriStaticOpts.resourceOwner,\n      resourceType: mercuryFocusAreaStatusUpdateAriStaticOpts.resourceType,\n      resourceId: `workspace/${opts.workspaceId}/${opts.focusAreaStatusUpdateId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        focusAreaStatusUpdateId: opts.focusAreaStatusUpdateId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryFocusAreaStatusUpdateAriStaticOpts);\n    return new _MercuryFocusAreaStatusUpdateAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, mercuryFocusAreaStatusUpdateAriStaticOpts);\n    return new _MercuryFocusAreaStatusUpdateAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      focusAreaStatusUpdateId: this.focusAreaStatusUpdateId\n    };\n  }\n};\n\n// src/mercury/program/types.ts\nvar MercuryProgramAriResourceOwner = \"mercury\", MercuryProgramAriResourceType = \"program\";\n\n// src/mercury/program/manifest.ts\nvar mercuryProgramAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: MercuryProgramAriResourceOwner,\n  resourceType: MercuryProgramAriResourceType,\n  resourceIdSlug: \"workspace/{workspaceId}/{programId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    programId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/mercury/program/index.ts\nvar MercuryProgramAri = class _MercuryProgramAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._programId = opts.resourceIdSegmentValues.programId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get programId() {\n    return this._programId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: mercuryProgramAriStaticOpts.qualifier,\n      platformQualifier: mercuryProgramAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: mercuryProgramAriStaticOpts.resourceOwner,\n      resourceType: mercuryProgramAriStaticOpts.resourceType,\n      resourceId: `workspace/${opts.workspaceId}/${opts.programId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        programId: opts.programId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryProgramAriStaticOpts);\n    return new _MercuryProgramAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, mercuryProgramAriStaticOpts);\n    return new _MercuryProgramAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      programId: this.programId\n    };\n  }\n};\n\n// src/mercury/program-status-update/types.ts\nvar MercuryProgramStatusUpdateAriResourceOwner = \"mercury\", MercuryProgramStatusUpdateAriResourceType = \"program-status-update\";\n\n// src/mercury/program-status-update/manifest.ts\nvar mercuryProgramStatusUpdateAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: MercuryProgramStatusUpdateAriResourceOwner,\n  resourceType: MercuryProgramStatusUpdateAriResourceType,\n  resourceIdSlug: \"workspace/{workspaceId}/{programStatusUpdateId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    programStatusUpdateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/mercury/program-status-update/index.ts\nvar MercuryProgramStatusUpdateAri = class _MercuryProgramStatusUpdateAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._programStatusUpdateId = opts.resourceIdSegmentValues.programStatusUpdateId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get programStatusUpdateId() {\n    return this._programStatusUpdateId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: mercuryProgramStatusUpdateAriStaticOpts.qualifier,\n      platformQualifier: mercuryProgramStatusUpdateAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: mercuryProgramStatusUpdateAriStaticOpts.resourceOwner,\n      resourceType: mercuryProgramStatusUpdateAriStaticOpts.resourceType,\n      resourceId: `workspace/${opts.workspaceId}/${opts.programStatusUpdateId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        programStatusUpdateId: opts.programStatusUpdateId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryProgramStatusUpdateAriStaticOpts);\n    return new _MercuryProgramStatusUpdateAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, mercuryProgramStatusUpdateAriStaticOpts);\n    return new _MercuryProgramStatusUpdateAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId,\n      programStatusUpdateId: this.programStatusUpdateId\n    };\n  }\n};\n\n// src/mercury/role/types.ts\nvar MercuryRoleAriResourceOwner = \"mercury\", MercuryRoleAriResourceType = \"role\";\n\n// src/mercury/role/manifest.ts\nvar mercuryRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: MercuryRoleAriResourceOwner,\n  resourceType: MercuryRoleAriResourceType,\n  resourceIdSlug: \"product/{roleType}\",\n  resourceIdSegmentFormats: {\n    roleType: /(?:member|admin)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/mercury/role/index.ts\nvar MercuryRoleAri = class _MercuryRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleType = opts.resourceIdSegmentValues.roleType;\n  }\n  get roleType() {\n    return this._roleType;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: mercuryRoleAriStaticOpts.qualifier,\n      platformQualifier: mercuryRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: mercuryRoleAriStaticOpts.resourceOwner,\n      resourceType: mercuryRoleAriStaticOpts.resourceType,\n      resourceId: `product/${opts.roleType}`,\n      resourceIdSegmentValues: {\n        roleType: opts.roleType\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryRoleAriStaticOpts);\n    return new _MercuryRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, mercuryRoleAriStaticOpts);\n    return new _MercuryRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleType: this.roleType\n    };\n  }\n};\n\n// src/mercury/site/types.ts\nvar MercurySiteAriResourceOwner = \"mercury\", MercurySiteAriResourceType = \"site\";\n\n// src/mercury/site/manifest.ts\nvar mercurySiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: MercurySiteAriResourceOwner,\n  resourceType: MercurySiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/mercury/site/index.ts\nvar MercurySiteAri = class _MercurySiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: mercurySiteAriStaticOpts.qualifier,\n      platformQualifier: mercurySiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: mercurySiteAriStaticOpts.resourceOwner,\n      resourceType: mercurySiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, mercurySiteAriStaticOpts);\n    return new _MercurySiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, mercurySiteAriStaticOpts);\n    return new _MercurySiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/mercury/workspace/types.ts\nvar MercuryWorkspaceAriResourceOwner = \"mercury\", MercuryWorkspaceAriResourceType = \"workspace\";\n\n// src/mercury/workspace/manifest.ts\nvar mercuryWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: MercuryWorkspaceAriResourceOwner,\n  resourceType: MercuryWorkspaceAriResourceType,\n  resourceIdSlug: \"{workspaceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/mercury/workspace/index.ts\nvar MercuryWorkspaceAri = class _MercuryWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._workspaceId = opts.resourceIdSegmentValues.workspaceId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: mercuryWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: mercuryWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: mercuryWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: mercuryWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, mercuryWorkspaceAriStaticOpts);\n    return new _MercuryWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, mercuryWorkspaceAriStaticOpts);\n    return new _MercuryWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      workspaceId: this.workspaceId\n    };\n  }\n};\n\n// src/microsoft/channel/types.ts\nvar MicrosoftChannelAriResourceOwner = \"microsoft\", MicrosoftChannelAriResourceType = \"channel\";\n\n// src/microsoft/channel/manifest.ts\nvar microsoftChannelAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: MicrosoftChannelAriResourceOwner,\n  resourceType: MicrosoftChannelAriResourceType,\n  resourceIdSlug: \"tenantId/{tenantId}/teamId/{teamId}/channelId/{channelId}\",\n  resourceIdSegmentFormats: {\n    tenantId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    teamId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    channelId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/microsoft/channel/index.ts\nvar MicrosoftChannelAri = class _MicrosoftChannelAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._tenantId = opts.resourceIdSegmentValues.tenantId, this._teamId = opts.resourceIdSegmentValues.teamId, this._channelId = opts.resourceIdSegmentValues.channelId;\n  }\n  get tenantId() {\n    return this._tenantId;\n  }\n  get teamId() {\n    return this._teamId;\n  }\n  get channelId() {\n    return this._channelId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: microsoftChannelAriStaticOpts.qualifier,\n      platformQualifier: microsoftChannelAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: microsoftChannelAriStaticOpts.resourceOwner,\n      resourceType: microsoftChannelAriStaticOpts.resourceType,\n      resourceId: `tenantId/${opts.tenantId}/teamId/${opts.teamId}/channelId/${opts.channelId}`,\n      resourceIdSegmentValues: {\n        tenantId: opts.tenantId,\n        teamId: opts.teamId,\n        channelId: opts.channelId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftChannelAriStaticOpts);\n    return new _MicrosoftChannelAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, microsoftChannelAriStaticOpts);\n    return new _MicrosoftChannelAri(opts);\n  }\n  getVariables() {\n    return {\n      tenantId: this.tenantId,\n      teamId: this.teamId,\n      channelId: this.channelId\n    };\n  }\n};\n\n// src/microsoft/sharepoint-document/types.ts\nvar MicrosoftSharepointDocumentAriResourceOwner = \"microsoft\", MicrosoftSharepointDocumentAriResourceType = \"sharepoint-document\";\n\n// src/microsoft/sharepoint-document/manifest.ts\nvar microsoftSharepointDocumentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: MicrosoftSharepointDocumentAriResourceOwner,\n  resourceType: MicrosoftSharepointDocumentAriResourceType,\n  resourceIdSlug: \"driveId/{driveId}/fileId/{fileId}\",\n  resourceIdSegmentFormats: {\n    driveId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    fileId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/microsoft/sharepoint-document/index.ts\nvar MicrosoftSharepointDocumentAri = class _MicrosoftSharepointDocumentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._driveId = opts.resourceIdSegmentValues.driveId, this._fileId = opts.resourceIdSegmentValues.fileId;\n  }\n  get driveId() {\n    return this._driveId;\n  }\n  get fileId() {\n    return this._fileId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: microsoftSharepointDocumentAriStaticOpts.qualifier,\n      platformQualifier: microsoftSharepointDocumentAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: microsoftSharepointDocumentAriStaticOpts.resourceOwner,\n      resourceType: microsoftSharepointDocumentAriStaticOpts.resourceType,\n      resourceId: `driveId/${opts.driveId}/fileId/${opts.fileId}`,\n      resourceIdSegmentValues: {\n        driveId: opts.driveId,\n        fileId: opts.fileId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, microsoftSharepointDocumentAriStaticOpts);\n    return new _MicrosoftSharepointDocumentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, microsoftSharepointDocumentAriStaticOpts);\n    return new _MicrosoftSharepointDocumentAri(opts);\n  }\n  getVariables() {\n    return {\n      driveId: this.driveId,\n      fileId: this.fileId\n    };\n  }\n};\n\n// src/oauth/client/types.ts\nvar OauthClientAriResourceOwner = \"oauth\", OauthClientAriResourceType = \"client\";\n\n// src/oauth/client/manifest.ts\nvar oauthClientAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OauthClientAriResourceOwner,\n  resourceType: OauthClientAriResourceType,\n  resourceIdSlug: \"{clientId}\",\n  resourceIdSegmentFormats: {\n    clientId: /[0-9a-zA-Z-_]{5,50}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/oauth/client/index.ts\nvar OauthClientAri = class _OauthClientAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._clientId = opts.resourceIdSegmentValues.clientId;\n  }\n  get clientId() {\n    return this._clientId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: oauthClientAriStaticOpts.qualifier,\n      platformQualifier: oauthClientAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: oauthClientAriStaticOpts.resourceOwner,\n      resourceType: oauthClientAriStaticOpts.resourceType,\n      resourceId: `${opts.clientId}`,\n      resourceIdSegmentValues: {\n        clientId: opts.clientId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, oauthClientAriStaticOpts);\n    return new _OauthClientAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, oauthClientAriStaticOpts);\n    return new _OauthClientAri(opts);\n  }\n  getVariables() {\n    return {\n      clientId: this.clientId\n    };\n  }\n};\n\n// src/opsgenie/account-login/types.ts\nvar OpsgenieAccountLoginAriResourceOwner = \"opsgenie\", OpsgenieAccountLoginAriResourceType = \"account-login\";\n\n// src/opsgenie/account-login/manifest.ts\nvar opsgenieAccountLoginAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieAccountLoginAriResourceOwner,\n  resourceType: OpsgenieAccountLoginAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{accountLoginId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    accountLoginId: /[a-zA-Z0-9\\-\\:]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/account-login/index.ts\nvar OpsgenieAccountLoginAri = class _OpsgenieAccountLoginAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._accountLoginId = opts.resourceIdSegmentValues.accountLoginId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get accountLoginId() {\n    return this._accountLoginId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieAccountLoginAriStaticOpts.qualifier,\n      platformQualifier: opsgenieAccountLoginAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieAccountLoginAriStaticOpts.resourceOwner,\n      resourceType: opsgenieAccountLoginAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.accountLoginId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        accountLoginId: opts.accountLoginId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieAccountLoginAriStaticOpts);\n    return new _OpsgenieAccountLoginAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieAccountLoginAriStaticOpts);\n    return new _OpsgenieAccountLoginAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      accountLoginId: this.accountLoginId\n    };\n  }\n};\n\n// src/opsgenie/account-settings/types.ts\nvar OpsgenieAccountSettingsAriResourceOwner = \"opsgenie\", OpsgenieAccountSettingsAriResourceType = \"account-settings\";\n\n// src/opsgenie/account-settings/manifest.ts\nvar opsgenieAccountSettingsAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieAccountSettingsAriResourceOwner,\n  resourceType: OpsgenieAccountSettingsAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{accountSettingsId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    accountSettingsId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/account-settings/index.ts\nvar OpsgenieAccountSettingsAri = class _OpsgenieAccountSettingsAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._accountSettingsId = opts.resourceIdSegmentValues.accountSettingsId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get accountSettingsId() {\n    return this._accountSettingsId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieAccountSettingsAriStaticOpts.qualifier,\n      platformQualifier: opsgenieAccountSettingsAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieAccountSettingsAriStaticOpts.resourceOwner,\n      resourceType: opsgenieAccountSettingsAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.accountSettingsId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        accountSettingsId: opts.accountSettingsId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieAccountSettingsAriStaticOpts);\n    return new _OpsgenieAccountSettingsAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieAccountSettingsAriStaticOpts);\n    return new _OpsgenieAccountSettingsAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      accountSettingsId: this.accountSettingsId\n    };\n  }\n};\n\n// src/opsgenie/alert/types.ts\nvar OpsgenieAlertAriResourceOwner = \"opsgenie\", OpsgenieAlertAriResourceType = \"alert\";\n\n// src/opsgenie/alert/manifest.ts\nvar opsgenieAlertAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieAlertAriResourceOwner,\n  resourceType: OpsgenieAlertAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{alertId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    alertId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/alert/index.ts\nvar OpsgenieAlertAri = class _OpsgenieAlertAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._alertId = opts.resourceIdSegmentValues.alertId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get alertId() {\n    return this._alertId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieAlertAriStaticOpts.qualifier,\n      platformQualifier: opsgenieAlertAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieAlertAriStaticOpts.resourceOwner,\n      resourceType: opsgenieAlertAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.alertId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        alertId: opts.alertId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieAlertAriStaticOpts);\n    return new _OpsgenieAlertAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieAlertAriStaticOpts);\n    return new _OpsgenieAlertAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      alertId: this.alertId\n    };\n  }\n};\n\n// src/opsgenie/alert-recipient-link/types.ts\nvar OpsgenieAlertRecipientLinkAriResourceOwner = \"opsgenie\", OpsgenieAlertRecipientLinkAriResourceType = \"alert-recipient-link\";\n\n// src/opsgenie/alert-recipient-link/manifest.ts\nvar opsgenieAlertRecipientLinkAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieAlertRecipientLinkAriResourceOwner,\n  resourceType: OpsgenieAlertRecipientLinkAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{alertId}/{recipientType}/{recipientId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    alertId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}(-[0-9]*)?/,\n    // eslint-disable-line no-useless-escape\n    recipientType: /(?:user|team)/,\n    // eslint-disable-line no-useless-escape\n    recipientId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/alert-recipient-link/index.ts\nvar OpsgenieAlertRecipientLinkAri = class _OpsgenieAlertRecipientLinkAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._alertId = opts.resourceIdSegmentValues.alertId, this._recipientType = opts.resourceIdSegmentValues.recipientType, this._recipientId = opts.resourceIdSegmentValues.recipientId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get alertId() {\n    return this._alertId;\n  }\n  get recipientType() {\n    return this._recipientType;\n  }\n  get recipientId() {\n    return this._recipientId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieAlertRecipientLinkAriStaticOpts.qualifier,\n      platformQualifier: opsgenieAlertRecipientLinkAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieAlertRecipientLinkAriStaticOpts.resourceOwner,\n      resourceType: opsgenieAlertRecipientLinkAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.alertId}/${opts.recipientType}/${opts.recipientId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        alertId: opts.alertId,\n        recipientType: opts.recipientType,\n        recipientId: opts.recipientId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieAlertRecipientLinkAriStaticOpts);\n    return new _OpsgenieAlertRecipientLinkAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieAlertRecipientLinkAriStaticOpts);\n    return new _OpsgenieAlertRecipientLinkAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      alertId: this.alertId,\n      recipientType: this.recipientType,\n      recipientId: this.recipientId\n    };\n  }\n};\n\n// src/opsgenie/api-request-metric/types.ts\nvar OpsgenieApiRequestMetricAriResourceOwner = \"opsgenie\", OpsgenieApiRequestMetricAriResourceType = \"api-request-metric\";\n\n// src/opsgenie/api-request-metric/manifest.ts\nvar opsgenieApiRequestMetricAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieApiRequestMetricAriResourceOwner,\n  resourceType: OpsgenieApiRequestMetricAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{apiRequestMetricId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    apiRequestMetricId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/api-request-metric/index.ts\nvar OpsgenieApiRequestMetricAri = class _OpsgenieApiRequestMetricAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._apiRequestMetricId = opts.resourceIdSegmentValues.apiRequestMetricId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get apiRequestMetricId() {\n    return this._apiRequestMetricId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieApiRequestMetricAriStaticOpts.qualifier,\n      platformQualifier: opsgenieApiRequestMetricAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieApiRequestMetricAriStaticOpts.resourceOwner,\n      resourceType: opsgenieApiRequestMetricAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.apiRequestMetricId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        apiRequestMetricId: opts.apiRequestMetricId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieApiRequestMetricAriStaticOpts);\n    return new _OpsgenieApiRequestMetricAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieApiRequestMetricAriStaticOpts);\n    return new _OpsgenieApiRequestMetricAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      apiRequestMetricId: this.apiRequestMetricId\n    };\n  }\n};\n\n// src/opsgenie/call-routing/types.ts\nvar OpsgenieCallRoutingAriResourceOwner = \"opsgenie\", OpsgenieCallRoutingAriResourceType = \"call-routing\";\n\n// src/opsgenie/call-routing/manifest.ts\nvar opsgenieCallRoutingAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieCallRoutingAriResourceOwner,\n  resourceType: OpsgenieCallRoutingAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{callRoutingId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    callRoutingId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/call-routing/index.ts\nvar OpsgenieCallRoutingAri = class _OpsgenieCallRoutingAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._callRoutingId = opts.resourceIdSegmentValues.callRoutingId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get callRoutingId() {\n    return this._callRoutingId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieCallRoutingAriStaticOpts.qualifier,\n      platformQualifier: opsgenieCallRoutingAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieCallRoutingAriStaticOpts.resourceOwner,\n      resourceType: opsgenieCallRoutingAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.callRoutingId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        callRoutingId: opts.callRoutingId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieCallRoutingAriStaticOpts);\n    return new _OpsgenieCallRoutingAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieCallRoutingAriStaticOpts);\n    return new _OpsgenieCallRoutingAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      callRoutingId: this.callRoutingId\n    };\n  }\n};\n\n// src/opsgenie/custom-role/types.ts\nvar OpsgenieCustomRoleAriResourceOwner = \"opsgenie\", OpsgenieCustomRoleAriResourceType = \"custom-role\";\n\n// src/opsgenie/custom-role/manifest.ts\nvar opsgenieCustomRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieCustomRoleAriResourceOwner,\n  resourceType: OpsgenieCustomRoleAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{opsgenieRoleType}/{customRoleId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    opsgenieRoleType: /(?:account|team|responder)/,\n    // eslint-disable-line no-useless-escape\n    customRoleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/custom-role/index.ts\nvar OpsgenieCustomRoleAri = class _OpsgenieCustomRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._opsgenieRoleType = opts.resourceIdSegmentValues.opsgenieRoleType, this._customRoleId = opts.resourceIdSegmentValues.customRoleId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get opsgenieRoleType() {\n    return this._opsgenieRoleType;\n  }\n  get customRoleId() {\n    return this._customRoleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieCustomRoleAriStaticOpts.qualifier,\n      platformQualifier: opsgenieCustomRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieCustomRoleAriStaticOpts.resourceOwner,\n      resourceType: opsgenieCustomRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.opsgenieRoleType}/${opts.customRoleId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        opsgenieRoleType: opts.opsgenieRoleType,\n        customRoleId: opts.customRoleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieCustomRoleAriStaticOpts);\n    return new _OpsgenieCustomRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieCustomRoleAriStaticOpts);\n    return new _OpsgenieCustomRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      opsgenieRoleType: this.opsgenieRoleType,\n      customRoleId: this.customRoleId\n    };\n  }\n};\n\n// src/opsgenie/deployment/types.ts\nvar OpsgenieDeploymentAriResourceOwner = \"opsgenie\", OpsgenieDeploymentAriResourceType = \"deployment\";\n\n// src/opsgenie/deployment/manifest.ts\nvar opsgenieDeploymentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieDeploymentAriResourceOwner,\n  resourceType: OpsgenieDeploymentAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{deploymentId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    deploymentId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/deployment/index.ts\nvar OpsgenieDeploymentAri = class _OpsgenieDeploymentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get deploymentId() {\n    return this._deploymentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieDeploymentAriStaticOpts.qualifier,\n      platformQualifier: opsgenieDeploymentAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieDeploymentAriStaticOpts.resourceOwner,\n      resourceType: opsgenieDeploymentAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.deploymentId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        deploymentId: opts.deploymentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieDeploymentAriStaticOpts);\n    return new _OpsgenieDeploymentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieDeploymentAriStaticOpts);\n    return new _OpsgenieDeploymentAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      deploymentId: this.deploymentId\n    };\n  }\n};\n\n// src/opsgenie/deployment-service-link/types.ts\nvar OpsgenieDeploymentServiceLinkAriResourceOwner = \"opsgenie\", OpsgenieDeploymentServiceLinkAriResourceType = \"deployment-service-link\";\n\n// src/opsgenie/deployment-service-link/manifest.ts\nvar opsgenieDeploymentServiceLinkAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieDeploymentServiceLinkAriResourceOwner,\n  resourceType: OpsgenieDeploymentServiceLinkAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{deploymentId}/{serviceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    deploymentId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    serviceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/deployment-service-link/index.ts\nvar OpsgenieDeploymentServiceLinkAri = class _OpsgenieDeploymentServiceLinkAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._deploymentId = opts.resourceIdSegmentValues.deploymentId, this._serviceId = opts.resourceIdSegmentValues.serviceId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get deploymentId() {\n    return this._deploymentId;\n  }\n  get serviceId() {\n    return this._serviceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieDeploymentServiceLinkAriStaticOpts.qualifier,\n      platformQualifier: opsgenieDeploymentServiceLinkAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieDeploymentServiceLinkAriStaticOpts.resourceOwner,\n      resourceType: opsgenieDeploymentServiceLinkAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.deploymentId}/${opts.serviceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        deploymentId: opts.deploymentId,\n        serviceId: opts.serviceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieDeploymentServiceLinkAriStaticOpts);\n    return new _OpsgenieDeploymentServiceLinkAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieDeploymentServiceLinkAriStaticOpts);\n    return new _OpsgenieDeploymentServiceLinkAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      deploymentId: this.deploymentId,\n      serviceId: this.serviceId\n    };\n  }\n};\n\n// src/opsgenie/escalation/types.ts\nvar OpsgenieEscalationAriResourceOwner = \"opsgenie\", OpsgenieEscalationAriResourceType = \"escalation\";\n\n// src/opsgenie/escalation/manifest.ts\nvar opsgenieEscalationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieEscalationAriResourceOwner,\n  resourceType: OpsgenieEscalationAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{escalationId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    escalationId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/escalation/index.ts\nvar OpsgenieEscalationAri = class _OpsgenieEscalationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._escalationId = opts.resourceIdSegmentValues.escalationId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get escalationId() {\n    return this._escalationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieEscalationAriStaticOpts.qualifier,\n      platformQualifier: opsgenieEscalationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieEscalationAriStaticOpts.resourceOwner,\n      resourceType: opsgenieEscalationAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.escalationId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        escalationId: opts.escalationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieEscalationAriStaticOpts);\n    return new _OpsgenieEscalationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieEscalationAriStaticOpts);\n    return new _OpsgenieEscalationAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      escalationId: this.escalationId\n    };\n  }\n};\n\n// src/opsgenie/event/types.ts\nvar OpsgenieEventAriResourceOwner = \"opsgenie\", OpsgenieEventAriResourceType = \"event\";\n\n// src/opsgenie/event/manifest.ts\nvar opsgenieEventAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieEventAriResourceOwner,\n  resourceType: OpsgenieEventAriResourceType,\n  resourceIdSlug: \"{eventType}/workspace/{workspaceId}/event/{eventId}\",\n  resourceIdSegmentFormats: {\n    eventType: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    eventId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/event/index.ts\nvar OpsgenieEventAri = class _OpsgenieEventAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._eventType = opts.resourceIdSegmentValues.eventType, this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._eventId = opts.resourceIdSegmentValues.eventId;\n  }\n  get eventType() {\n    return this._eventType;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get eventId() {\n    return this._eventId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieEventAriStaticOpts.qualifier,\n      platformQualifier: opsgenieEventAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieEventAriStaticOpts.resourceOwner,\n      resourceType: opsgenieEventAriStaticOpts.resourceType,\n      resourceId: `${opts.eventType}/workspace/${opts.workspaceId}/event/${opts.eventId}`,\n      resourceIdSegmentValues: {\n        eventType: opts.eventType,\n        workspaceId: opts.workspaceId,\n        eventId: opts.eventId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieEventAriStaticOpts);\n    return new _OpsgenieEventAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieEventAriStaticOpts);\n    return new _OpsgenieEventAri(opts);\n  }\n  getVariables() {\n    return {\n      eventType: this.eventType,\n      workspaceId: this.workspaceId,\n      eventId: this.eventId\n    };\n  }\n};\n\n// src/opsgenie/incident/types.ts\nvar OpsgenieIncidentAriResourceOwner = \"opsgenie\", OpsgenieIncidentAriResourceType = \"incident\";\n\n// src/opsgenie/incident/manifest.ts\nvar opsgenieIncidentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieIncidentAriResourceOwner,\n  resourceType: OpsgenieIncidentAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{incidentId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    incidentId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/incident/index.ts\nvar OpsgenieIncidentAri = class _OpsgenieIncidentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incidentId = opts.resourceIdSegmentValues.incidentId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get incidentId() {\n    return this._incidentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieIncidentAriStaticOpts.qualifier,\n      platformQualifier: opsgenieIncidentAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieIncidentAriStaticOpts.resourceOwner,\n      resourceType: opsgenieIncidentAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.incidentId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        incidentId: opts.incidentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncidentAriStaticOpts);\n    return new _OpsgenieIncidentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieIncidentAriStaticOpts);\n    return new _OpsgenieIncidentAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      incidentId: this.incidentId\n    };\n  }\n};\n\n// src/opsgenie/incident-alert-link/types.ts\nvar OpsgenieIncidentAlertLinkAriResourceOwner = \"opsgenie\", OpsgenieIncidentAlertLinkAriResourceType = \"incident-alert-link\";\n\n// src/opsgenie/incident-alert-link/manifest.ts\nvar opsgenieIncidentAlertLinkAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieIncidentAlertLinkAriResourceOwner,\n  resourceType: OpsgenieIncidentAlertLinkAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{incidentId}/{alertId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    incidentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    alertId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}(-[0-9]*)?/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/incident-alert-link/index.ts\nvar OpsgenieIncidentAlertLinkAri = class _OpsgenieIncidentAlertLinkAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incidentId = opts.resourceIdSegmentValues.incidentId, this._alertId = opts.resourceIdSegmentValues.alertId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get incidentId() {\n    return this._incidentId;\n  }\n  get alertId() {\n    return this._alertId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieIncidentAlertLinkAriStaticOpts.qualifier,\n      platformQualifier: opsgenieIncidentAlertLinkAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieIncidentAlertLinkAriStaticOpts.resourceOwner,\n      resourceType: opsgenieIncidentAlertLinkAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.incidentId}/${opts.alertId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        incidentId: opts.incidentId,\n        alertId: opts.alertId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncidentAlertLinkAriStaticOpts);\n    return new _OpsgenieIncidentAlertLinkAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieIncidentAlertLinkAriStaticOpts);\n    return new _OpsgenieIncidentAlertLinkAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      incidentId: this.incidentId,\n      alertId: this.alertId\n    };\n  }\n};\n\n// src/opsgenie/incident-status-update/types.ts\nvar OpsgenieIncidentStatusUpdateAriResourceOwner = \"opsgenie\", OpsgenieIncidentStatusUpdateAriResourceType = \"incident-status-update\";\n\n// src/opsgenie/incident-status-update/manifest.ts\nvar opsgenieIncidentStatusUpdateAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieIncidentStatusUpdateAriResourceOwner,\n  resourceType: OpsgenieIncidentStatusUpdateAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{incidentStatusUpdateId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    incidentStatusUpdateId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/incident-status-update/index.ts\nvar OpsgenieIncidentStatusUpdateAri = class _OpsgenieIncidentStatusUpdateAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incidentStatusUpdateId = opts.resourceIdSegmentValues.incidentStatusUpdateId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get incidentStatusUpdateId() {\n    return this._incidentStatusUpdateId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieIncidentStatusUpdateAriStaticOpts.qualifier,\n      platformQualifier: opsgenieIncidentStatusUpdateAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieIncidentStatusUpdateAriStaticOpts.resourceOwner,\n      resourceType: opsgenieIncidentStatusUpdateAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.incidentStatusUpdateId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        incidentStatusUpdateId: opts.incidentStatusUpdateId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncidentStatusUpdateAriStaticOpts);\n    return new _OpsgenieIncidentStatusUpdateAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieIncidentStatusUpdateAriStaticOpts);\n    return new _OpsgenieIncidentStatusUpdateAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      incidentStatusUpdateId: this.incidentStatusUpdateId\n    };\n  }\n};\n\n// src/opsgenie/incoming-call-history/types.ts\nvar OpsgenieIncomingCallHistoryAriResourceOwner = \"opsgenie\", OpsgenieIncomingCallHistoryAriResourceType = \"incoming-call-history\";\n\n// src/opsgenie/incoming-call-history/manifest.ts\nvar opsgenieIncomingCallHistoryAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieIncomingCallHistoryAriResourceOwner,\n  resourceType: OpsgenieIncomingCallHistoryAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{incomingCallEventId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    incomingCallEventId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/incoming-call-history/index.ts\nvar OpsgenieIncomingCallHistoryAri = class _OpsgenieIncomingCallHistoryAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._incomingCallEventId = opts.resourceIdSegmentValues.incomingCallEventId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get incomingCallEventId() {\n    return this._incomingCallEventId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieIncomingCallHistoryAriStaticOpts.qualifier,\n      platformQualifier: opsgenieIncomingCallHistoryAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieIncomingCallHistoryAriStaticOpts.resourceOwner,\n      resourceType: opsgenieIncomingCallHistoryAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.incomingCallEventId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        incomingCallEventId: opts.incomingCallEventId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIncomingCallHistoryAriStaticOpts);\n    return new _OpsgenieIncomingCallHistoryAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieIncomingCallHistoryAriStaticOpts);\n    return new _OpsgenieIncomingCallHistoryAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      incomingCallEventId: this.incomingCallEventId\n    };\n  }\n};\n\n// src/opsgenie/integration/types.ts\nvar OpsgenieIntegrationAriResourceOwner = \"opsgenie\", OpsgenieIntegrationAriResourceType = \"integration\";\n\n// src/opsgenie/integration/manifest.ts\nvar opsgenieIntegrationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieIntegrationAriResourceOwner,\n  resourceType: OpsgenieIntegrationAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{integrationId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    integrationId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/integration/index.ts\nvar OpsgenieIntegrationAri = class _OpsgenieIntegrationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._integrationId = opts.resourceIdSegmentValues.integrationId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get integrationId() {\n    return this._integrationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieIntegrationAriStaticOpts.qualifier,\n      platformQualifier: opsgenieIntegrationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieIntegrationAriStaticOpts.resourceOwner,\n      resourceType: opsgenieIntegrationAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.integrationId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        integrationId: opts.integrationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieIntegrationAriStaticOpts);\n    return new _OpsgenieIntegrationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieIntegrationAriStaticOpts);\n    return new _OpsgenieIntegrationAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      integrationId: this.integrationId\n    };\n  }\n};\n\n// src/opsgenie/notification/types.ts\nvar OpsgenieNotificationAriResourceOwner = \"opsgenie\", OpsgenieNotificationAriResourceType = \"notification\";\n\n// src/opsgenie/notification/manifest.ts\nvar opsgenieNotificationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieNotificationAriResourceOwner,\n  resourceType: OpsgenieNotificationAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{notificationId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    notificationId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/notification/index.ts\nvar OpsgenieNotificationAri = class _OpsgenieNotificationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._notificationId = opts.resourceIdSegmentValues.notificationId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get notificationId() {\n    return this._notificationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieNotificationAriStaticOpts.qualifier,\n      platformQualifier: opsgenieNotificationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieNotificationAriStaticOpts.resourceOwner,\n      resourceType: opsgenieNotificationAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.notificationId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        notificationId: opts.notificationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieNotificationAriStaticOpts);\n    return new _OpsgenieNotificationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieNotificationAriStaticOpts);\n    return new _OpsgenieNotificationAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      notificationId: this.notificationId\n    };\n  }\n};\n\n// src/opsgenie/role/types.ts\nvar OpsgenieRoleAriResourceOwner = \"opsgenie\", OpsgenieRoleAriResourceType = \"role\";\n\n// src/opsgenie/role/manifest.ts\nvar opsgenieRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieRoleAriResourceOwner,\n  resourceType: OpsgenieRoleAriResourceType,\n  resourceIdSlug: \"{roleId}\",\n  resourceIdSegmentFormats: {\n    roleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/role/index.ts\nvar OpsgenieRoleAri = class _OpsgenieRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleId = opts.resourceIdSegmentValues.roleId;\n  }\n  get roleId() {\n    return this._roleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieRoleAriStaticOpts.qualifier,\n      platformQualifier: opsgenieRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieRoleAriStaticOpts.resourceOwner,\n      resourceType: opsgenieRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.roleId}`,\n      resourceIdSegmentValues: {\n        roleId: opts.roleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieRoleAriStaticOpts);\n    return new _OpsgenieRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieRoleAriStaticOpts);\n    return new _OpsgenieRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleId: this.roleId\n    };\n  }\n};\n\n// src/opsgenie/schedule/types.ts\nvar OpsgenieScheduleAriResourceOwner = \"opsgenie\", OpsgenieScheduleAriResourceType = \"schedule\";\n\n// src/opsgenie/schedule/manifest.ts\nvar opsgenieScheduleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieScheduleAriResourceOwner,\n  resourceType: OpsgenieScheduleAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{scheduleId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    scheduleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/schedule/index.ts\nvar OpsgenieScheduleAri = class _OpsgenieScheduleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._scheduleId = opts.resourceIdSegmentValues.scheduleId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get scheduleId() {\n    return this._scheduleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieScheduleAriStaticOpts.qualifier,\n      platformQualifier: opsgenieScheduleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieScheduleAriStaticOpts.resourceOwner,\n      resourceType: opsgenieScheduleAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.scheduleId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        scheduleId: opts.scheduleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieScheduleAriStaticOpts);\n    return new _OpsgenieScheduleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieScheduleAriStaticOpts);\n    return new _OpsgenieScheduleAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      scheduleId: this.scheduleId\n    };\n  }\n};\n\n// src/opsgenie/schedule-rotation/types.ts\nvar OpsgenieScheduleRotationAriResourceOwner = \"opsgenie\", OpsgenieScheduleRotationAriResourceType = \"schedule-rotation\";\n\n// src/opsgenie/schedule-rotation/manifest.ts\nvar opsgenieScheduleRotationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieScheduleRotationAriResourceOwner,\n  resourceType: OpsgenieScheduleRotationAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{scheduleRotationId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    scheduleRotationId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/schedule-rotation/index.ts\nvar OpsgenieScheduleRotationAri = class _OpsgenieScheduleRotationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._scheduleRotationId = opts.resourceIdSegmentValues.scheduleRotationId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get scheduleRotationId() {\n    return this._scheduleRotationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieScheduleRotationAriStaticOpts.qualifier,\n      platformQualifier: opsgenieScheduleRotationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieScheduleRotationAriStaticOpts.resourceOwner,\n      resourceType: opsgenieScheduleRotationAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.scheduleRotationId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        scheduleRotationId: opts.scheduleRotationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieScheduleRotationAriStaticOpts);\n    return new _OpsgenieScheduleRotationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieScheduleRotationAriStaticOpts);\n    return new _OpsgenieScheduleRotationAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      scheduleRotationId: this.scheduleRotationId\n    };\n  }\n};\n\n// src/opsgenie/site/types.ts\nvar OpsgenieSiteAriResourceOwner = \"opsgenie\", OpsgenieSiteAriResourceType = \"site\";\n\n// src/opsgenie/site/manifest.ts\nvar opsgenieSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieSiteAriResourceOwner,\n  resourceType: OpsgenieSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/site/index.ts\nvar OpsgenieSiteAri = class _OpsgenieSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieSiteAriStaticOpts.qualifier,\n      platformQualifier: opsgenieSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieSiteAriStaticOpts.resourceOwner,\n      resourceType: opsgenieSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieSiteAriStaticOpts);\n    return new _OpsgenieSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieSiteAriStaticOpts);\n    return new _OpsgenieSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/opsgenie/team/types.ts\nvar OpsgenieTeamAriResourceOwner = \"opsgenie\", OpsgenieTeamAriResourceType = \"team\";\n\n// src/opsgenie/team/manifest.ts\nvar opsgenieTeamAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: OpsgenieTeamAriResourceOwner,\n  resourceType: OpsgenieTeamAriResourceType,\n  resourceIdSlug: \"{opsgenieTeamId}\",\n  resourceIdSegmentFormats: {\n    opsgenieTeamId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/team/index.ts\nvar OpsgenieTeamAri = class _OpsgenieTeamAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._opsgenieTeamId = opts.resourceIdSegmentValues.opsgenieTeamId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get opsgenieTeamId() {\n    return this._opsgenieTeamId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieTeamAriStaticOpts.qualifier,\n      platformQualifier: opsgenieTeamAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: opsgenieTeamAriStaticOpts.resourceOwner,\n      resourceType: opsgenieTeamAriStaticOpts.resourceType,\n      resourceId: `${opts.opsgenieTeamId}`,\n      resourceIdSegmentValues: {\n        opsgenieTeamId: opts.opsgenieTeamId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieTeamAriStaticOpts);\n    return new _OpsgenieTeamAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieTeamAriStaticOpts);\n    return new _OpsgenieTeamAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      opsgenieTeamId: this.opsgenieTeamId\n    };\n  }\n};\n\n// src/opsgenie/timeline/types.ts\nvar OpsgenieTimelineAriResourceOwner = \"opsgenie\", OpsgenieTimelineAriResourceType = \"timeline\";\n\n// src/opsgenie/timeline/manifest.ts\nvar opsgenieTimelineAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieTimelineAriResourceOwner,\n  resourceType: OpsgenieTimelineAriResourceType,\n  resourceIdSlug: \"{workspaceId}/{timelineEntryId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    timelineEntryId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/timeline/index.ts\nvar OpsgenieTimelineAri = class _OpsgenieTimelineAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._timelineEntryId = opts.resourceIdSegmentValues.timelineEntryId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get timelineEntryId() {\n    return this._timelineEntryId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieTimelineAriStaticOpts.qualifier,\n      platformQualifier: opsgenieTimelineAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieTimelineAriStaticOpts.resourceOwner,\n      resourceType: opsgenieTimelineAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}/${opts.timelineEntryId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        timelineEntryId: opts.timelineEntryId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieTimelineAriStaticOpts);\n    return new _OpsgenieTimelineAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieTimelineAriStaticOpts);\n    return new _OpsgenieTimelineAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      timelineEntryId: this.timelineEntryId\n    };\n  }\n};\n\n// src/opsgenie/workspace/types.ts\nvar OpsgenieWorkspaceAriResourceOwner = \"opsgenie\", OpsgenieWorkspaceAriResourceType = \"workspace\";\n\n// src/opsgenie/workspace/manifest.ts\nvar opsgenieWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OpsgenieWorkspaceAriResourceOwner,\n  resourceType: OpsgenieWorkspaceAriResourceType,\n  resourceIdSlug: \"{workspaceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/opsgenie/workspace/index.ts\nvar OpsgenieWorkspaceAri = class _OpsgenieWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: opsgenieWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: opsgenieWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: opsgenieWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: opsgenieWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, opsgenieWorkspaceAriStaticOpts);\n    return new _OpsgenieWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, opsgenieWorkspaceAriStaticOpts);\n    return new _OpsgenieWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId\n    };\n  }\n};\n\n// src/org-policy/policy/types.ts\nvar OrgPolicyPolicyAriResourceOwner = \"org-policy\", OrgPolicyPolicyAriResourceType = \"policy\";\n\n// src/org-policy/policy/manifest.ts\nvar orgPolicyPolicyAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: OrgPolicyPolicyAriResourceOwner,\n  resourceType: OrgPolicyPolicyAriResourceType,\n  resourceIdSlug: \"{policyId}\",\n  resourceIdSegmentFormats: {\n    policyId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/org-policy/policy/index.ts\nvar OrgPolicyPolicyAri = class _OrgPolicyPolicyAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._policyId = opts.resourceIdSegmentValues.policyId;\n  }\n  get policyId() {\n    return this._policyId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: orgPolicyPolicyAriStaticOpts.qualifier,\n      platformQualifier: orgPolicyPolicyAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: orgPolicyPolicyAriStaticOpts.resourceOwner,\n      resourceType: orgPolicyPolicyAriStaticOpts.resourceType,\n      resourceId: `${opts.policyId}`,\n      resourceIdSegmentValues: {\n        policyId: opts.policyId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, orgPolicyPolicyAriStaticOpts);\n    return new _OrgPolicyPolicyAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, orgPolicyPolicyAriStaticOpts);\n    return new _OrgPolicyPolicyAri(opts);\n  }\n  getVariables() {\n    return {\n      policyId: this.policyId\n    };\n  }\n};\n\n// src/papi/api/types.ts\nvar PapiApiAriResourceOwner = \"papi\", PapiApiAriResourceType = \"api\";\n\n// src/papi/api/manifest.ts\nvar papiApiAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PapiApiAriResourceOwner,\n  resourceType: PapiApiAriResourceType,\n  resourceIdSlug: \"catalog/{uuid}\",\n  resourceIdSegmentFormats: {\n    uuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/papi/api/index.ts\nvar PapiApiAri = class _PapiApiAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._uuid = opts.resourceIdSegmentValues.uuid;\n  }\n  get uuid() {\n    return this._uuid;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: papiApiAriStaticOpts.qualifier,\n      platformQualifier: papiApiAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: papiApiAriStaticOpts.resourceOwner,\n      resourceType: papiApiAriStaticOpts.resourceType,\n      resourceId: `catalog/${opts.uuid}`,\n      resourceIdSegmentValues: {\n        uuid: opts.uuid\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, papiApiAriStaticOpts);\n    return new _PapiApiAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, papiApiAriStaticOpts);\n    return new _PapiApiAri(opts);\n  }\n  getVariables() {\n    return {\n      uuid: this.uuid\n    };\n  }\n};\n\n// src/papi/role/types.ts\nvar PapiRoleAriResourceOwner = \"papi\", PapiRoleAriResourceType = \"role\";\n\n// src/papi/role/manifest.ts\nvar papiRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PapiRoleAriResourceOwner,\n  resourceType: PapiRoleAriResourceType,\n  resourceIdSlug: \"partner\",\n  resourceIdSegmentFormats: {}\n};\n\n// src/papi/role/index.ts\nvar PapiRoleAri = class _PapiRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: papiRoleAriStaticOpts.qualifier,\n      platformQualifier: papiRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: papiRoleAriStaticOpts.resourceOwner,\n      resourceType: papiRoleAriStaticOpts.resourceType,\n      resourceId: \"partner\",\n      resourceIdSegmentValues: {}\n    }, ariOpts = AriParser.fromOpts(derivedOpts, papiRoleAriStaticOpts);\n    return new _PapiRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, papiRoleAriStaticOpts);\n    return new _PapiRoleAri(opts);\n  }\n  getVariables() {\n    return {};\n  }\n};\n\n// src/passionfruit/user/types.ts\nvar PassionfruitUserAriResourceOwner = \"passionfruit\", PassionfruitUserAriResourceType = \"user\";\n\n// src/passionfruit/user/manifest.ts\nvar passionfruitUserAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PassionfruitUserAriResourceOwner,\n  resourceType: PassionfruitUserAriResourceType,\n  resourceIdSlug: \"{userId}\",\n  resourceIdSegmentFormats: {\n    userId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/passionfruit/user/index.ts\nvar PassionfruitUserAri = class _PassionfruitUserAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._userId = opts.resourceIdSegmentValues.userId;\n  }\n  get userId() {\n    return this._userId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: passionfruitUserAriStaticOpts.qualifier,\n      platformQualifier: passionfruitUserAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: passionfruitUserAriStaticOpts.resourceOwner,\n      resourceType: passionfruitUserAriStaticOpts.resourceType,\n      resourceId: `${opts.userId}`,\n      resourceIdSegmentValues: {\n        userId: opts.userId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, passionfruitUserAriStaticOpts);\n    return new _PassionfruitUserAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, passionfruitUserAriStaticOpts);\n    return new _PassionfruitUserAri(opts);\n  }\n  getVariables() {\n    return {\n      userId: this.userId\n    };\n  }\n};\n\n// src/people-data/cost-center/types.ts\nvar PeopleDataCostCenterAriResourceOwner = \"people-data\", PeopleDataCostCenterAriResourceType = \"cost-center\";\n\n// src/people-data/cost-center/manifest.ts\nvar peopleDataCostCenterAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PeopleDataCostCenterAriResourceOwner,\n  resourceType: PeopleDataCostCenterAriResourceType,\n  resourceIdSlug: \"{costCenterId}\",\n  resourceIdSegmentFormats: {\n    costCenterId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/people-data/cost-center/index.ts\nvar PeopleDataCostCenterAri = class _PeopleDataCostCenterAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._costCenterId = opts.resourceIdSegmentValues.costCenterId;\n  }\n  get costCenterId() {\n    return this._costCenterId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: peopleDataCostCenterAriStaticOpts.qualifier,\n      platformQualifier: peopleDataCostCenterAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: peopleDataCostCenterAriStaticOpts.resourceOwner,\n      resourceType: peopleDataCostCenterAriStaticOpts.resourceType,\n      resourceId: `${opts.costCenterId}`,\n      resourceIdSegmentValues: {\n        costCenterId: opts.costCenterId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, peopleDataCostCenterAriStaticOpts);\n    return new _PeopleDataCostCenterAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, peopleDataCostCenterAriStaticOpts);\n    return new _PeopleDataCostCenterAri(opts);\n  }\n  getVariables() {\n    return {\n      costCenterId: this.costCenterId\n    };\n  }\n};\n\n// src/people-data/job-profile/types.ts\nvar PeopleDataJobProfileAriResourceOwner = \"people-data\", PeopleDataJobProfileAriResourceType = \"job-profile\";\n\n// src/people-data/job-profile/manifest.ts\nvar peopleDataJobProfileAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PeopleDataJobProfileAriResourceOwner,\n  resourceType: PeopleDataJobProfileAriResourceType,\n  resourceIdSlug: \"{jobProfileId}\",\n  resourceIdSegmentFormats: {\n    jobProfileId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/people-data/job-profile/index.ts\nvar PeopleDataJobProfileAri = class _PeopleDataJobProfileAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._jobProfileId = opts.resourceIdSegmentValues.jobProfileId;\n  }\n  get jobProfileId() {\n    return this._jobProfileId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: peopleDataJobProfileAriStaticOpts.qualifier,\n      platformQualifier: peopleDataJobProfileAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: peopleDataJobProfileAriStaticOpts.resourceOwner,\n      resourceType: peopleDataJobProfileAriStaticOpts.resourceType,\n      resourceId: `${opts.jobProfileId}`,\n      resourceIdSegmentValues: {\n        jobProfileId: opts.jobProfileId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, peopleDataJobProfileAriStaticOpts);\n    return new _PeopleDataJobProfileAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, peopleDataJobProfileAriStaticOpts);\n    return new _PeopleDataJobProfileAri(opts);\n  }\n  getVariables() {\n    return {\n      jobProfileId: this.jobProfileId\n    };\n  }\n};\n\n// src/people-data/position/types.ts\nvar PeopleDataPositionAriResourceOwner = \"people-data\", PeopleDataPositionAriResourceType = \"position\";\n\n// src/people-data/position/manifest.ts\nvar peopleDataPositionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PeopleDataPositionAriResourceOwner,\n  resourceType: PeopleDataPositionAriResourceType,\n  resourceIdSlug: \"{positionId}\",\n  resourceIdSegmentFormats: {\n    positionId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/people-data/position/index.ts\nvar PeopleDataPositionAri = class _PeopleDataPositionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._positionId = opts.resourceIdSegmentValues.positionId;\n  }\n  get positionId() {\n    return this._positionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: peopleDataPositionAriStaticOpts.qualifier,\n      platformQualifier: peopleDataPositionAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: peopleDataPositionAriStaticOpts.resourceOwner,\n      resourceType: peopleDataPositionAriStaticOpts.resourceType,\n      resourceId: `${opts.positionId}`,\n      resourceIdSegmentValues: {\n        positionId: opts.positionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, peopleDataPositionAriStaticOpts);\n    return new _PeopleDataPositionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, peopleDataPositionAriStaticOpts);\n    return new _PeopleDataPositionAri(opts);\n  }\n  getVariables() {\n    return {\n      positionId: this.positionId\n    };\n  }\n};\n\n// src/people-data/supervisory-org/types.ts\nvar PeopleDataSupervisoryOrgAriResourceOwner = \"people-data\", PeopleDataSupervisoryOrgAriResourceType = \"supervisory-org\";\n\n// src/people-data/supervisory-org/manifest.ts\nvar peopleDataSupervisoryOrgAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PeopleDataSupervisoryOrgAriResourceOwner,\n  resourceType: PeopleDataSupervisoryOrgAriResourceType,\n  resourceIdSlug: \"{supervisoryOrgId}\",\n  resourceIdSegmentFormats: {\n    supervisoryOrgId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/people-data/supervisory-org/index.ts\nvar PeopleDataSupervisoryOrgAri = class _PeopleDataSupervisoryOrgAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._supervisoryOrgId = opts.resourceIdSegmentValues.supervisoryOrgId;\n  }\n  get supervisoryOrgId() {\n    return this._supervisoryOrgId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: peopleDataSupervisoryOrgAriStaticOpts.qualifier,\n      platformQualifier: peopleDataSupervisoryOrgAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: peopleDataSupervisoryOrgAriStaticOpts.resourceOwner,\n      resourceType: peopleDataSupervisoryOrgAriStaticOpts.resourceType,\n      resourceId: `${opts.supervisoryOrgId}`,\n      resourceIdSegmentValues: {\n        supervisoryOrgId: opts.supervisoryOrgId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, peopleDataSupervisoryOrgAriStaticOpts);\n    return new _PeopleDataSupervisoryOrgAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, peopleDataSupervisoryOrgAriStaticOpts);\n    return new _PeopleDataSupervisoryOrgAri(opts);\n  }\n  getVariables() {\n    return {\n      supervisoryOrgId: this.supervisoryOrgId\n    };\n  }\n};\n\n// src/people-data/worker/types.ts\nvar PeopleDataWorkerAriResourceOwner = \"people-data\", PeopleDataWorkerAriResourceType = \"worker\";\n\n// src/people-data/worker/manifest.ts\nvar peopleDataWorkerAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PeopleDataWorkerAriResourceOwner,\n  resourceType: PeopleDataWorkerAriResourceType,\n  resourceIdSlug: \"{workerId}\",\n  resourceIdSegmentFormats: {\n    workerId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/people-data/worker/index.ts\nvar PeopleDataWorkerAri = class _PeopleDataWorkerAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workerId = opts.resourceIdSegmentValues.workerId;\n  }\n  get workerId() {\n    return this._workerId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: peopleDataWorkerAriStaticOpts.qualifier,\n      platformQualifier: peopleDataWorkerAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: peopleDataWorkerAriStaticOpts.resourceOwner,\n      resourceType: peopleDataWorkerAriStaticOpts.resourceType,\n      resourceId: `${opts.workerId}`,\n      resourceIdSegmentValues: {\n        workerId: opts.workerId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, peopleDataWorkerAriStaticOpts);\n    return new _PeopleDataWorkerAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, peopleDataWorkerAriStaticOpts);\n    return new _PeopleDataWorkerAri(opts);\n  }\n  getVariables() {\n    return {\n      workerId: this.workerId\n    };\n  }\n};\n\n// src/people-perftool/calibration/types.ts\nvar PeoplePerftoolCalibrationAriResourceOwner = \"people-perftool\", PeoplePerftoolCalibrationAriResourceType = \"calibration\";\n\n// src/people-perftool/calibration/manifest.ts\nvar peoplePerftoolCalibrationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PeoplePerftoolCalibrationAriResourceOwner,\n  resourceType: PeoplePerftoolCalibrationAriResourceType,\n  resourceIdSlug: \"{id}\",\n  resourceIdSegmentFormats: {\n    id: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/people-perftool/calibration/index.ts\nvar PeoplePerftoolCalibrationAri = class _PeoplePerftoolCalibrationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._id = opts.resourceIdSegmentValues.id;\n  }\n  get id() {\n    return this._id;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: peoplePerftoolCalibrationAriStaticOpts.qualifier,\n      platformQualifier: peoplePerftoolCalibrationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: peoplePerftoolCalibrationAriStaticOpts.resourceOwner,\n      resourceType: peoplePerftoolCalibrationAriStaticOpts.resourceType,\n      resourceId: `${opts.id}`,\n      resourceIdSegmentValues: {\n        id: opts.id\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, peoplePerftoolCalibrationAriStaticOpts);\n    return new _PeoplePerftoolCalibrationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, peoplePerftoolCalibrationAriStaticOpts);\n    return new _PeoplePerftoolCalibrationAri(opts);\n  }\n  getVariables() {\n    return {\n      id: this.id\n    };\n  }\n};\n\n// src/people-perftool/feedback/types.ts\nvar PeoplePerftoolFeedbackAriResourceOwner = \"people-perftool\", PeoplePerftoolFeedbackAriResourceType = \"feedback\";\n\n// src/people-perftool/feedback/manifest.ts\nvar peoplePerftoolFeedbackAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PeoplePerftoolFeedbackAriResourceOwner,\n  resourceType: PeoplePerftoolFeedbackAriResourceType,\n  resourceIdSlug: \"{id}\",\n  resourceIdSegmentFormats: {\n    id: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/people-perftool/feedback/index.ts\nvar PeoplePerftoolFeedbackAri = class _PeoplePerftoolFeedbackAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._id = opts.resourceIdSegmentValues.id;\n  }\n  get id() {\n    return this._id;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: peoplePerftoolFeedbackAriStaticOpts.qualifier,\n      platformQualifier: peoplePerftoolFeedbackAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: peoplePerftoolFeedbackAriStaticOpts.resourceOwner,\n      resourceType: peoplePerftoolFeedbackAriStaticOpts.resourceType,\n      resourceId: `${opts.id}`,\n      resourceIdSegmentValues: {\n        id: opts.id\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, peoplePerftoolFeedbackAriStaticOpts);\n    return new _PeoplePerftoolFeedbackAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, peoplePerftoolFeedbackAriStaticOpts);\n    return new _PeoplePerftoolFeedbackAri(opts);\n  }\n  getVariables() {\n    return {\n      id: this.id\n    };\n  }\n};\n\n// src/people-perftool/performance/types.ts\nvar PeoplePerftoolPerformanceAriResourceOwner = \"people-perftool\", PeoplePerftoolPerformanceAriResourceType = \"performance\";\n\n// src/people-perftool/performance/manifest.ts\nvar peoplePerftoolPerformanceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PeoplePerftoolPerformanceAriResourceOwner,\n  resourceType: PeoplePerftoolPerformanceAriResourceType,\n  resourceIdSlug: \"{id}\",\n  resourceIdSegmentFormats: {\n    id: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/people-perftool/performance/index.ts\nvar PeoplePerftoolPerformanceAri = class _PeoplePerftoolPerformanceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._id = opts.resourceIdSegmentValues.id;\n  }\n  get id() {\n    return this._id;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: peoplePerftoolPerformanceAriStaticOpts.qualifier,\n      platformQualifier: peoplePerftoolPerformanceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: peoplePerftoolPerformanceAriStaticOpts.resourceOwner,\n      resourceType: peoplePerftoolPerformanceAriStaticOpts.resourceType,\n      resourceId: `${opts.id}`,\n      resourceIdSegmentValues: {\n        id: opts.id\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, peoplePerftoolPerformanceAriStaticOpts);\n    return new _PeoplePerftoolPerformanceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, peoplePerftoolPerformanceAriStaticOpts);\n    return new _PeoplePerftoolPerformanceAri(opts);\n  }\n  getVariables() {\n    return {\n      id: this.id\n    };\n  }\n};\n\n// src/platform/classification-tag/types.ts\nvar PlatformClassificationTagAriResourceOwner = \"platform\", PlatformClassificationTagAriResourceType = \"classification-tag\";\n\n// src/platform/classification-tag/manifest.ts\nvar platformClassificationTagAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PlatformClassificationTagAriResourceOwner,\n  resourceType: PlatformClassificationTagAriResourceType,\n  resourceIdSlug: \"{tagId}\",\n  resourceIdSegmentFormats: {\n    tagId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/platform/classification-tag/index.ts\nvar PlatformClassificationTagAri = class _PlatformClassificationTagAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._tagId = opts.resourceIdSegmentValues.tagId;\n  }\n  get tagId() {\n    return this._tagId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: platformClassificationTagAriStaticOpts.qualifier,\n      platformQualifier: platformClassificationTagAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: platformClassificationTagAriStaticOpts.resourceOwner,\n      resourceType: platformClassificationTagAriStaticOpts.resourceType,\n      resourceId: `${opts.tagId}`,\n      resourceIdSegmentValues: {\n        tagId: opts.tagId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, platformClassificationTagAriStaticOpts);\n    return new _PlatformClassificationTagAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, platformClassificationTagAriStaticOpts);\n    return new _PlatformClassificationTagAri(opts);\n  }\n  getVariables() {\n    return {\n      tagId: this.tagId\n    };\n  }\n};\n\n// src/platform/integration/types.ts\nvar PlatformIntegrationAriResourceOwner = \"platform\", PlatformIntegrationAriResourceType = \"integration\";\n\n// src/platform/integration/manifest.ts\nvar platformIntegrationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PlatformIntegrationAriResourceOwner,\n  resourceType: PlatformIntegrationAriResourceType,\n  resourceIdSlug: \"{integrationKey}\",\n  resourceIdSegmentFormats: {\n    integrationKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/platform/integration/index.ts\nvar PlatformIntegrationAri = class _PlatformIntegrationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._integrationKey = opts.resourceIdSegmentValues.integrationKey;\n  }\n  get integrationKey() {\n    return this._integrationKey;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: platformIntegrationAriStaticOpts.qualifier,\n      platformQualifier: platformIntegrationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: platformIntegrationAriStaticOpts.resourceOwner,\n      resourceType: platformIntegrationAriStaticOpts.resourceType,\n      resourceId: `${opts.integrationKey}`,\n      resourceIdSegmentValues: {\n        integrationKey: opts.integrationKey\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, platformIntegrationAriStaticOpts);\n    return new _PlatformIntegrationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, platformIntegrationAriStaticOpts);\n    return new _PlatformIntegrationAri(opts);\n  }\n  getVariables() {\n    return {\n      integrationKey: this.integrationKey\n    };\n  }\n};\n\n// src/platform/lifecycle-resource/types.ts\nvar PlatformLifecycleResourceAriResourceOwner = \"platform\", PlatformLifecycleResourceAriResourceType = \"lifecycle-resource\";\n\n// src/platform/lifecycle-resource/manifest.ts\nvar platformLifecycleResourceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PlatformLifecycleResourceAriResourceOwner,\n  resourceType: PlatformLifecycleResourceAriResourceType,\n  resourceIdSlug: \"{lifecycleResourceId}\",\n  resourceIdSegmentFormats: {\n    lifecycleResourceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/platform/lifecycle-resource/index.ts\nvar PlatformLifecycleResourceAri = class _PlatformLifecycleResourceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._lifecycleResourceId = opts.resourceIdSegmentValues.lifecycleResourceId;\n  }\n  get lifecycleResourceId() {\n    return this._lifecycleResourceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: platformLifecycleResourceAriStaticOpts.qualifier,\n      platformQualifier: platformLifecycleResourceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: platformLifecycleResourceAriStaticOpts.resourceOwner,\n      resourceType: platformLifecycleResourceAriStaticOpts.resourceType,\n      resourceId: `${opts.lifecycleResourceId}`,\n      resourceIdSegmentValues: {\n        lifecycleResourceId: opts.lifecycleResourceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, platformLifecycleResourceAriStaticOpts);\n    return new _PlatformLifecycleResourceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, platformLifecycleResourceAriStaticOpts);\n    return new _PlatformLifecycleResourceAri(opts);\n  }\n  getVariables() {\n    return {\n      lifecycleResourceId: this.lifecycleResourceId\n    };\n  }\n};\n\n// src/platform/lifecycle-resource-package/types.ts\nvar PlatformLifecycleResourcePackageAriResourceOwner = \"platform\", PlatformLifecycleResourcePackageAriResourceType = \"lifecycle-resource-package\";\n\n// src/platform/lifecycle-resource-package/manifest.ts\nvar platformLifecycleResourcePackageAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PlatformLifecycleResourcePackageAriResourceOwner,\n  resourceType: PlatformLifecycleResourcePackageAriResourceType,\n  resourceIdSlug: \"{lifecycleResourcePackageId}\",\n  resourceIdSegmentFormats: {\n    lifecycleResourcePackageId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/platform/lifecycle-resource-package/index.ts\nvar PlatformLifecycleResourcePackageAri = class _PlatformLifecycleResourcePackageAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._lifecycleResourcePackageId = opts.resourceIdSegmentValues.lifecycleResourcePackageId;\n  }\n  get lifecycleResourcePackageId() {\n    return this._lifecycleResourcePackageId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: platformLifecycleResourcePackageAriStaticOpts.qualifier,\n      platformQualifier: platformLifecycleResourcePackageAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: platformLifecycleResourcePackageAriStaticOpts.resourceOwner,\n      resourceType: platformLifecycleResourcePackageAriStaticOpts.resourceType,\n      resourceId: `${opts.lifecycleResourcePackageId}`,\n      resourceIdSegmentValues: {\n        lifecycleResourcePackageId: opts.lifecycleResourcePackageId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, platformLifecycleResourcePackageAriStaticOpts);\n    return new _PlatformLifecycleResourcePackageAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, platformLifecycleResourcePackageAriStaticOpts);\n    return new _PlatformLifecycleResourcePackageAri(opts);\n  }\n  getVariables() {\n    return {\n      lifecycleResourcePackageId: this.lifecycleResourcePackageId\n    };\n  }\n};\n\n// src/platform/lifecycle-resource-package-type/types.ts\nvar PlatformLifecycleResourcePackageTypeAriResourceOwner = \"platform\", PlatformLifecycleResourcePackageTypeAriResourceType = \"lifecycle-resource-package-type\";\n\n// src/platform/lifecycle-resource-package-type/manifest.ts\nvar platformLifecycleResourcePackageTypeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PlatformLifecycleResourcePackageTypeAriResourceOwner,\n  resourceType: PlatformLifecycleResourcePackageTypeAriResourceType,\n  resourceIdSlug: \"{resourcePackageTypeId}\",\n  resourceIdSegmentFormats: {\n    resourcePackageTypeId: /[a-zA-Z.\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/platform/lifecycle-resource-package-type/index.ts\nvar PlatformLifecycleResourcePackageTypeAri = class _PlatformLifecycleResourcePackageTypeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._resourcePackageTypeId = opts.resourceIdSegmentValues.resourcePackageTypeId;\n  }\n  get resourcePackageTypeId() {\n    return this._resourcePackageTypeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: platformLifecycleResourcePackageTypeAriStaticOpts.qualifier,\n      platformQualifier: platformLifecycleResourcePackageTypeAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: platformLifecycleResourcePackageTypeAriStaticOpts.resourceOwner,\n      resourceType: platformLifecycleResourcePackageTypeAriStaticOpts.resourceType,\n      resourceId: `${opts.resourcePackageTypeId}`,\n      resourceIdSegmentValues: {\n        resourcePackageTypeId: opts.resourcePackageTypeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, platformLifecycleResourcePackageTypeAriStaticOpts);\n    return new _PlatformLifecycleResourcePackageTypeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, platformLifecycleResourcePackageTypeAriStaticOpts);\n    return new _PlatformLifecycleResourcePackageTypeAri(opts);\n  }\n  getVariables() {\n    return {\n      resourcePackageTypeId: this.resourcePackageTypeId\n    };\n  }\n};\n\n// src/platform/org/types.ts\nvar PlatformOrgAriResourceOwner = \"platform\", PlatformOrgAriResourceType = \"org\";\n\n// src/platform/org/manifest.ts\nvar platformOrgAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PlatformOrgAriResourceOwner,\n  resourceType: PlatformOrgAriResourceType,\n  resourceIdSlug: \"{orgId}\",\n  resourceIdSegmentFormats: {\n    orgId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/platform/org/index.ts\nvar PlatformOrgAri = class _PlatformOrgAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._orgId = opts.resourceIdSegmentValues.orgId;\n  }\n  get orgId() {\n    return this._orgId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: platformOrgAriStaticOpts.qualifier,\n      platformQualifier: platformOrgAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: platformOrgAriStaticOpts.resourceOwner,\n      resourceType: platformOrgAriStaticOpts.resourceType,\n      resourceId: `${opts.orgId}`,\n      resourceIdSegmentValues: {\n        orgId: opts.orgId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, platformOrgAriStaticOpts);\n    return new _PlatformOrgAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, platformOrgAriStaticOpts);\n    return new _PlatformOrgAri(opts);\n  }\n  getVariables() {\n    return {\n      orgId: this.orgId\n    };\n  }\n};\n\n// src/platform/org-user/types.ts\nvar PlatformOrgUserAriResourceOwner = \"platform\", PlatformOrgUserAriResourceType = \"org-user\";\n\n// src/platform/org-user/manifest.ts\nvar platformOrgUserAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PlatformOrgUserAriResourceOwner,\n  resourceType: PlatformOrgUserAriResourceType,\n  resourceIdSlug: \"{orgId}/{userId}\",\n  resourceIdSegmentFormats: {\n    orgId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    userId: /[a-zA-Z0-9_\\-\\:]{1,128}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/platform/org-user/index.ts\nvar PlatformOrgUserAri = class _PlatformOrgUserAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._orgId = opts.resourceIdSegmentValues.orgId, this._userId = opts.resourceIdSegmentValues.userId;\n  }\n  get orgId() {\n    return this._orgId;\n  }\n  get userId() {\n    return this._userId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: platformOrgUserAriStaticOpts.qualifier,\n      platformQualifier: platformOrgUserAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: platformOrgUserAriStaticOpts.resourceOwner,\n      resourceType: platformOrgUserAriStaticOpts.resourceType,\n      resourceId: `${opts.orgId}/${opts.userId}`,\n      resourceIdSegmentValues: {\n        orgId: opts.orgId,\n        userId: opts.userId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, platformOrgUserAriStaticOpts);\n    return new _PlatformOrgUserAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, platformOrgUserAriStaticOpts);\n    return new _PlatformOrgUserAri(opts);\n  }\n  getVariables() {\n    return {\n      orgId: this.orgId,\n      userId: this.userId\n    };\n  }\n};\n\n// src/platform/secure-tunnel/types.ts\nvar PlatformSecureTunnelAriResourceOwner = \"platform\", PlatformSecureTunnelAriResourceType = \"secure-tunnel\";\n\n// src/platform/secure-tunnel/manifest.ts\nvar platformSecureTunnelAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PlatformSecureTunnelAriResourceOwner,\n  resourceType: PlatformSecureTunnelAriResourceType,\n  resourceIdSlug: \"{secureTunnelId}\",\n  resourceIdSegmentFormats: {\n    secureTunnelId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/platform/secure-tunnel/index.ts\nvar PlatformSecureTunnelAri = class _PlatformSecureTunnelAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._secureTunnelId = opts.resourceIdSegmentValues.secureTunnelId;\n  }\n  get secureTunnelId() {\n    return this._secureTunnelId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: platformSecureTunnelAriStaticOpts.qualifier,\n      platformQualifier: platformSecureTunnelAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: platformSecureTunnelAriStaticOpts.resourceOwner,\n      resourceType: platformSecureTunnelAriStaticOpts.resourceType,\n      resourceId: `${opts.secureTunnelId}`,\n      resourceIdSegmentValues: {\n        secureTunnelId: opts.secureTunnelId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, platformSecureTunnelAriStaticOpts);\n    return new _PlatformSecureTunnelAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, platformSecureTunnelAriStaticOpts);\n    return new _PlatformSecureTunnelAri(opts);\n  }\n  getVariables() {\n    return {\n      secureTunnelId: this.secureTunnelId\n    };\n  }\n};\n\n// src/platform/site/types.ts\nvar PlatformSiteAriResourceOwner = \"platform\", PlatformSiteAriResourceType = \"site\";\n\n// src/platform/site/manifest.ts\nvar platformSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PlatformSiteAriResourceOwner,\n  resourceType: PlatformSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/platform/site/index.ts\nvar PlatformSiteAri = class _PlatformSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: platformSiteAriStaticOpts.qualifier,\n      platformQualifier: platformSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: platformSiteAriStaticOpts.resourceOwner,\n      resourceType: platformSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, platformSiteAriStaticOpts);\n    return new _PlatformSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, platformSiteAriStaticOpts);\n    return new _PlatformSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/platform-services/streamhub-schema/types.ts\nvar PlatformServicesStreamhubSchemaAriResourceOwner = \"platform-services\", PlatformServicesStreamhubSchemaAriResourceType = \"streamhub-schema\";\n\n// src/platform-services/streamhub-schema/manifest.ts\nvar platformServicesStreamhubSchemaAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PlatformServicesStreamhubSchemaAriResourceOwner,\n  resourceType: PlatformServicesStreamhubSchemaAriResourceType,\n  resourceIdSlug: \"{streamhubSchemaId}\",\n  resourceIdSegmentFormats: {\n    streamhubSchemaId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/platform-services/streamhub-schema/index.ts\nvar PlatformServicesStreamhubSchemaAri = class _PlatformServicesStreamhubSchemaAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._streamhubSchemaId = opts.resourceIdSegmentValues.streamhubSchemaId;\n  }\n  get streamhubSchemaId() {\n    return this._streamhubSchemaId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: platformServicesStreamhubSchemaAriStaticOpts.qualifier,\n      platformQualifier: platformServicesStreamhubSchemaAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: platformServicesStreamhubSchemaAriStaticOpts.resourceOwner,\n      resourceType: platformServicesStreamhubSchemaAriStaticOpts.resourceType,\n      resourceId: `${opts.streamhubSchemaId}`,\n      resourceIdSegmentValues: {\n        streamhubSchemaId: opts.streamhubSchemaId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, platformServicesStreamhubSchemaAriStaticOpts);\n    return new _PlatformServicesStreamhubSchemaAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, platformServicesStreamhubSchemaAriStaticOpts);\n    return new _PlatformServicesStreamhubSchemaAri(opts);\n  }\n  getVariables() {\n    return {\n      streamhubSchemaId: this.streamhubSchemaId\n    };\n  }\n};\n\n// src/pollinator/check/types.ts\nvar PollinatorCheckAriResourceOwner = \"pollinator\", PollinatorCheckAriResourceType = \"check\";\n\n// src/pollinator/check/manifest.ts\nvar pollinatorCheckAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PollinatorCheckAriResourceOwner,\n  resourceType: PollinatorCheckAriResourceType,\n  resourceIdSlug: \"{checkId}\",\n  resourceIdSegmentFormats: {\n    checkId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/pollinator/check/index.ts\nvar PollinatorCheckAri = class _PollinatorCheckAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._checkId = opts.resourceIdSegmentValues.checkId;\n  }\n  get checkId() {\n    return this._checkId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: pollinatorCheckAriStaticOpts.qualifier,\n      platformQualifier: pollinatorCheckAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: pollinatorCheckAriStaticOpts.resourceOwner,\n      resourceType: pollinatorCheckAriStaticOpts.resourceType,\n      resourceId: `${opts.checkId}`,\n      resourceIdSegmentValues: {\n        checkId: opts.checkId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, pollinatorCheckAriStaticOpts);\n    return new _PollinatorCheckAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, pollinatorCheckAriStaticOpts);\n    return new _PollinatorCheckAri(opts);\n  }\n  getVariables() {\n    return {\n      checkId: this.checkId\n    };\n  }\n};\n\n// src/post-office/message-instance/types.ts\nvar PostOfficeMessageInstanceAriResourceOwner = \"post-office\", PostOfficeMessageInstanceAriResourceType = \"message-instance\";\n\n// src/post-office/message-instance/manifest.ts\nvar postOfficeMessageInstanceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PostOfficeMessageInstanceAriResourceOwner,\n  resourceType: PostOfficeMessageInstanceAriResourceType,\n  resourceIdSlug: \"{messageTemplateId}/{messageInstanceId}\",\n  resourceIdSegmentFormats: {\n    messageTemplateId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    messageInstanceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/post-office/message-instance/index.ts\nvar PostOfficeMessageInstanceAri = class _PostOfficeMessageInstanceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._messageTemplateId = opts.resourceIdSegmentValues.messageTemplateId, this._messageInstanceId = opts.resourceIdSegmentValues.messageInstanceId;\n  }\n  get messageTemplateId() {\n    return this._messageTemplateId;\n  }\n  get messageInstanceId() {\n    return this._messageInstanceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: postOfficeMessageInstanceAriStaticOpts.qualifier,\n      platformQualifier: postOfficeMessageInstanceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: postOfficeMessageInstanceAriStaticOpts.resourceOwner,\n      resourceType: postOfficeMessageInstanceAriStaticOpts.resourceType,\n      resourceId: `${opts.messageTemplateId}/${opts.messageInstanceId}`,\n      resourceIdSegmentValues: {\n        messageTemplateId: opts.messageTemplateId,\n        messageInstanceId: opts.messageInstanceId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, postOfficeMessageInstanceAriStaticOpts);\n    return new _PostOfficeMessageInstanceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, postOfficeMessageInstanceAriStaticOpts);\n    return new _PostOfficeMessageInstanceAri(opts);\n  }\n  getVariables() {\n    return {\n      messageTemplateId: this.messageTemplateId,\n      messageInstanceId: this.messageInstanceId\n    };\n  }\n};\n\n// src/post-office/message-template/types.ts\nvar PostOfficeMessageTemplateAriResourceOwner = \"post-office\", PostOfficeMessageTemplateAriResourceType = \"message-template\";\n\n// src/post-office/message-template/manifest.ts\nvar postOfficeMessageTemplateAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: PostOfficeMessageTemplateAriResourceOwner,\n  resourceType: PostOfficeMessageTemplateAriResourceType,\n  resourceIdSlug: \"{messageTemplateId}\",\n  resourceIdSegmentFormats: {\n    messageTemplateId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/post-office/message-template/index.ts\nvar PostOfficeMessageTemplateAri = class _PostOfficeMessageTemplateAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._messageTemplateId = opts.resourceIdSegmentValues.messageTemplateId;\n  }\n  get messageTemplateId() {\n    return this._messageTemplateId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: postOfficeMessageTemplateAriStaticOpts.qualifier,\n      platformQualifier: postOfficeMessageTemplateAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: postOfficeMessageTemplateAriStaticOpts.resourceOwner,\n      resourceType: postOfficeMessageTemplateAriStaticOpts.resourceType,\n      resourceId: `${opts.messageTemplateId}`,\n      resourceIdSegmentValues: {\n        messageTemplateId: opts.messageTemplateId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, postOfficeMessageTemplateAriStaticOpts);\n    return new _PostOfficeMessageTemplateAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, postOfficeMessageTemplateAriStaticOpts);\n    return new _PostOfficeMessageTemplateAri(opts);\n  }\n  getVariables() {\n    return {\n      messageTemplateId: this.messageTemplateId\n    };\n  }\n};\n\n// src/rovo/site/types.ts\nvar RovoSiteAriResourceOwner = \"rovo\", RovoSiteAriResourceType = \"site\";\n\n// src/rovo/site/manifest.ts\nvar rovoSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: RovoSiteAriResourceOwner,\n  resourceType: RovoSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/rovo/site/index.ts\nvar RovoSiteAri = class _RovoSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: rovoSiteAriStaticOpts.qualifier,\n      platformQualifier: rovoSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: rovoSiteAriStaticOpts.resourceOwner,\n      resourceType: rovoSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, rovoSiteAriStaticOpts);\n    return new _RovoSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, rovoSiteAriStaticOpts);\n    return new _RovoSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/runtime-auth-client/role/types.ts\nvar RuntimeAuthClientRoleAriResourceOwner = \"runtime-auth-client\", RuntimeAuthClientRoleAriResourceType = \"role\";\n\n// src/runtime-auth-client/role/manifest.ts\nvar runtimeAuthClientRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: RuntimeAuthClientRoleAriResourceOwner,\n  resourceType: RuntimeAuthClientRoleAriResourceType,\n  resourceIdSlug: \"product/{roleType}\",\n  resourceIdSegmentFormats: {\n    roleType: /(?:member|admin)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/runtime-auth-client/role/index.ts\nvar RuntimeAuthClientRoleAri = class _RuntimeAuthClientRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleType = opts.resourceIdSegmentValues.roleType;\n  }\n  get roleType() {\n    return this._roleType;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: runtimeAuthClientRoleAriStaticOpts.qualifier,\n      platformQualifier: runtimeAuthClientRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: runtimeAuthClientRoleAriStaticOpts.resourceOwner,\n      resourceType: runtimeAuthClientRoleAriStaticOpts.resourceType,\n      resourceId: `product/${opts.roleType}`,\n      resourceIdSegmentValues: {\n        roleType: opts.roleType\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, runtimeAuthClientRoleAriStaticOpts);\n    return new _RuntimeAuthClientRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, runtimeAuthClientRoleAriStaticOpts);\n    return new _RuntimeAuthClientRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleType: this.roleType\n    };\n  }\n};\n\n// src/search/event/types.ts\nvar SearchEventAriResourceOwner = \"search\", SearchEventAriResourceType = \"event\";\n\n// src/search/event/manifest.ts\nvar searchEventAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: SearchEventAriResourceOwner,\n  resourceType: SearchEventAriResourceType,\n  resourceIdSlug: \"{eventType}/{eventId}\",\n  resourceIdSegmentFormats: {\n    eventType: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    eventId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/search/event/index.ts\nvar SearchEventAri = class _SearchEventAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._eventType = opts.resourceIdSegmentValues.eventType, this._eventId = opts.resourceIdSegmentValues.eventId;\n  }\n  get eventType() {\n    return this._eventType;\n  }\n  get eventId() {\n    return this._eventId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: searchEventAriStaticOpts.qualifier,\n      platformQualifier: searchEventAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: searchEventAriStaticOpts.resourceOwner,\n      resourceType: searchEventAriStaticOpts.resourceType,\n      resourceId: `${opts.eventType}/${opts.eventId}`,\n      resourceIdSegmentValues: {\n        eventType: opts.eventType,\n        eventId: opts.eventId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, searchEventAriStaticOpts);\n    return new _SearchEventAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, searchEventAriStaticOpts);\n    return new _SearchEventAri(opts);\n  }\n  getVariables() {\n    return {\n      eventType: this.eventType,\n      eventId: this.eventId\n    };\n  }\n};\n\n// src/search/forward-document/types.ts\nvar SearchForwardDocumentAriResourceOwner = \"search\", SearchForwardDocumentAriResourceType = \"forward-document\";\n\n// src/search/forward-document/manifest.ts\nvar searchForwardDocumentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: SearchForwardDocumentAriResourceOwner,\n  resourceType: SearchForwardDocumentAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{documentType}/{documentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    documentType: /[a-zA-Z0-9\\-_]+/,\n    // eslint-disable-line no-useless-escape\n    documentId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/search/forward-document/index.ts\nvar SearchForwardDocumentAri = class _SearchForwardDocumentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._documentType = opts.resourceIdSegmentValues.documentType, this._documentId = opts.resourceIdSegmentValues.documentId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get documentType() {\n    return this._documentType;\n  }\n  get documentId() {\n    return this._documentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: searchForwardDocumentAriStaticOpts.qualifier,\n      platformQualifier: searchForwardDocumentAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: searchForwardDocumentAriStaticOpts.resourceOwner,\n      resourceType: searchForwardDocumentAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.documentType}/${opts.documentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        documentType: opts.documentType,\n        documentId: opts.documentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, searchForwardDocumentAriStaticOpts);\n    return new _SearchForwardDocumentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, searchForwardDocumentAriStaticOpts);\n    return new _SearchForwardDocumentAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      documentType: this.documentType,\n      documentId: this.documentId\n    };\n  }\n};\n\n// src/search/forward-document-subscription/types.ts\nvar SearchForwardDocumentSubscriptionAriResourceOwner = \"search\", SearchForwardDocumentSubscriptionAriResourceType = \"forward-document-subscription\";\n\n// src/search/forward-document-subscription/manifest.ts\nvar searchForwardDocumentSubscriptionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: SearchForwardDocumentSubscriptionAriResourceOwner,\n  resourceType: SearchForwardDocumentSubscriptionAriResourceType,\n  resourceIdSlug: \"activation/{activationId}/{subscriptionType}/{subscriptionId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    subscriptionType: /[a-zA-Z0-9\\-_]+/,\n    // eslint-disable-line no-useless-escape\n    subscriptionId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/search/forward-document-subscription/index.ts\nvar SearchForwardDocumentSubscriptionAri = class _SearchForwardDocumentSubscriptionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._subscriptionType = opts.resourceIdSegmentValues.subscriptionType, this._subscriptionId = opts.resourceIdSegmentValues.subscriptionId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get subscriptionType() {\n    return this._subscriptionType;\n  }\n  get subscriptionId() {\n    return this._subscriptionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: searchForwardDocumentSubscriptionAriStaticOpts.qualifier,\n      platformQualifier: searchForwardDocumentSubscriptionAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: searchForwardDocumentSubscriptionAriStaticOpts.resourceOwner,\n      resourceType: searchForwardDocumentSubscriptionAriStaticOpts.resourceType,\n      resourceId: `activation/${opts.activationId}/${opts.subscriptionType}/${opts.subscriptionId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        subscriptionType: opts.subscriptionType,\n        subscriptionId: opts.subscriptionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, searchForwardDocumentSubscriptionAriStaticOpts);\n    return new _SearchForwardDocumentSubscriptionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, searchForwardDocumentSubscriptionAriStaticOpts);\n    return new _SearchForwardDocumentSubscriptionAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      subscriptionType: this.subscriptionType,\n      subscriptionId: this.subscriptionId\n    };\n  }\n};\n\n// src/slack/channel/types.ts\nvar SlackChannelAriResourceOwner = \"slack\", SlackChannelAriResourceType = \"channel\";\n\n// src/slack/channel/manifest.ts\nvar slackChannelAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: SlackChannelAriResourceOwner,\n  resourceType: SlackChannelAriResourceType,\n  resourceIdSlug: \"workspaceId/{workspaceId}/channelId/{channelId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    channelId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/slack/channel/index.ts\nvar SlackChannelAri = class _SlackChannelAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._channelId = opts.resourceIdSegmentValues.channelId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get channelId() {\n    return this._channelId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: slackChannelAriStaticOpts.qualifier,\n      platformQualifier: slackChannelAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: slackChannelAriStaticOpts.resourceOwner,\n      resourceType: slackChannelAriStaticOpts.resourceType,\n      resourceId: `workspaceId/${opts.workspaceId}/channelId/${opts.channelId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        channelId: opts.channelId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, slackChannelAriStaticOpts);\n    return new _SlackChannelAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, slackChannelAriStaticOpts);\n    return new _SlackChannelAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      channelId: this.channelId\n    };\n  }\n};\n\n// src/slack/message/types.ts\nvar SlackMessageAriResourceOwner = \"slack\", SlackMessageAriResourceType = \"message\";\n\n// src/slack/message/manifest.ts\nvar slackMessageAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: SlackMessageAriResourceOwner,\n  resourceType: SlackMessageAriResourceType,\n  resourceIdSlug: \"workspaceId/{workspaceId}/channelId/{channelId}/messageId/{messageId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    channelId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    messageId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/slack/message/index.ts\nvar SlackMessageAri = class _SlackMessageAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._channelId = opts.resourceIdSegmentValues.channelId, this._messageId = opts.resourceIdSegmentValues.messageId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get channelId() {\n    return this._channelId;\n  }\n  get messageId() {\n    return this._messageId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: slackMessageAriStaticOpts.qualifier,\n      platformQualifier: slackMessageAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: slackMessageAriStaticOpts.resourceOwner,\n      resourceType: slackMessageAriStaticOpts.resourceType,\n      resourceId: `workspaceId/${opts.workspaceId}/channelId/${opts.channelId}/messageId/${opts.messageId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId,\n        channelId: opts.channelId,\n        messageId: opts.messageId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, slackMessageAriStaticOpts);\n    return new _SlackMessageAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, slackMessageAriStaticOpts);\n    return new _SlackMessageAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      channelId: this.channelId,\n      messageId: this.messageId\n    };\n  }\n};\n\n// src/statuspage/role/types.ts\nvar StatuspageRoleAriResourceOwner = \"statuspage\", StatuspageRoleAriResourceType = \"role\";\n\n// src/statuspage/role/manifest.ts\nvar statuspageRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: StatuspageRoleAriResourceOwner,\n  resourceType: StatuspageRoleAriResourceType,\n  resourceIdSlug: \"{roleId}\",\n  resourceIdSegmentFormats: {\n    roleId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/statuspage/role/index.ts\nvar StatuspageRoleAri = class _StatuspageRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleId = opts.resourceIdSegmentValues.roleId;\n  }\n  get roleId() {\n    return this._roleId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: statuspageRoleAriStaticOpts.qualifier,\n      platformQualifier: statuspageRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: statuspageRoleAriStaticOpts.resourceOwner,\n      resourceType: statuspageRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.roleId}`,\n      resourceIdSegmentValues: {\n        roleId: opts.roleId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, statuspageRoleAriStaticOpts);\n    return new _StatuspageRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, statuspageRoleAriStaticOpts);\n    return new _StatuspageRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleId: this.roleId\n    };\n  }\n};\n\n// src/statuspage/site/types.ts\nvar StatuspageSiteAriResourceOwner = \"statuspage\", StatuspageSiteAriResourceType = \"site\";\n\n// src/statuspage/site/manifest.ts\nvar statuspageSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: StatuspageSiteAriResourceOwner,\n  resourceType: StatuspageSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/statuspage/site/index.ts\nvar StatuspageSiteAri = class _StatuspageSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: statuspageSiteAriStaticOpts.qualifier,\n      platformQualifier: statuspageSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: statuspageSiteAriStaticOpts.resourceOwner,\n      resourceType: statuspageSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, statuspageSiteAriStaticOpts);\n    return new _StatuspageSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, statuspageSiteAriStaticOpts);\n    return new _StatuspageSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/support/customer/types.ts\nvar SupportCustomerAriResourceOwner = \"support\", SupportCustomerAriResourceType = \"customer\";\n\n// src/support/customer/manifest.ts\nvar supportCustomerAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: SupportCustomerAriResourceOwner,\n  resourceType: SupportCustomerAriResourceType,\n  resourceIdSlug: \"{resourceName}\",\n  resourceIdSegmentFormats: {\n    resourceName: /[a-zA-Z0-9\\-_.]*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/support/customer/index.ts\nvar SupportCustomerAri = class _SupportCustomerAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._resourceName = opts.resourceIdSegmentValues.resourceName;\n  }\n  get resourceName() {\n    return this._resourceName;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: supportCustomerAriStaticOpts.qualifier,\n      platformQualifier: supportCustomerAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: supportCustomerAriStaticOpts.resourceOwner,\n      resourceType: supportCustomerAriStaticOpts.resourceType,\n      resourceId: `${opts.resourceName}`,\n      resourceIdSegmentValues: {\n        resourceName: opts.resourceName || \"\"\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, supportCustomerAriStaticOpts);\n    return new _SupportCustomerAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, supportCustomerAriStaticOpts);\n    return new _SupportCustomerAri(opts);\n  }\n  getVariables() {\n    return {\n      resourceName: this.resourceName\n    };\n  }\n};\n\n// src/teams/team/types.ts\nvar TeamsTeamAriResourceOwner = \"teams\", TeamsTeamAriResourceType = \"team\";\n\n// src/teams/team/manifest.ts\nvar teamsTeamAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: TeamsTeamAriResourceOwner,\n  resourceType: TeamsTeamAriResourceType,\n  resourceIdSlug: \"{teamId}\",\n  resourceIdSegmentFormats: {\n    teamId: /[a-zA-Z0-9.\\-_~]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/teams/team/index.ts\nvar TeamsTeamAri = class _TeamsTeamAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._teamId = opts.resourceIdSegmentValues.teamId;\n  }\n  get teamId() {\n    return this._teamId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: teamsTeamAriStaticOpts.qualifier,\n      platformQualifier: teamsTeamAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: teamsTeamAriStaticOpts.resourceOwner,\n      resourceType: teamsTeamAriStaticOpts.resourceType,\n      resourceId: `${opts.teamId}`,\n      resourceIdSegmentValues: {\n        teamId: opts.teamId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, teamsTeamAriStaticOpts);\n    return new _TeamsTeamAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, teamsTeamAriStaticOpts);\n    return new _TeamsTeamAri(opts);\n  }\n  getVariables() {\n    return {\n      teamId: this.teamId\n    };\n  }\n};\n\n// src/townsquare/comment/types.ts\nvar TownsquareCommentAriResourceOwner = \"townsquare\", TownsquareCommentAriResourceType = \"comment\";\n\n// src/townsquare/comment/manifest.ts\nvar townsquareCommentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: TownsquareCommentAriResourceOwner,\n  resourceType: TownsquareCommentAriResourceType,\n  resourceIdSlug: \"{commentUuid}\",\n  resourceIdSegmentFormats: {\n    commentUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/townsquare/comment/index.ts\nvar TownsquareCommentAri = class _TownsquareCommentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._commentUuid = opts.resourceIdSegmentValues.commentUuid;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get commentUuid() {\n    return this._commentUuid;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: townsquareCommentAriStaticOpts.qualifier,\n      platformQualifier: townsquareCommentAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: townsquareCommentAriStaticOpts.resourceOwner,\n      resourceType: townsquareCommentAriStaticOpts.resourceType,\n      resourceId: `${opts.commentUuid}`,\n      resourceIdSegmentValues: {\n        commentUuid: opts.commentUuid\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareCommentAriStaticOpts);\n    return new _TownsquareCommentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, townsquareCommentAriStaticOpts);\n    return new _TownsquareCommentAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      commentUuid: this.commentUuid\n    };\n  }\n};\n\n// src/townsquare/goal/types.ts\nvar TownsquareGoalAriResourceOwner = \"townsquare\", TownsquareGoalAriResourceType = \"goal\";\n\n// src/townsquare/goal/manifest.ts\nvar townsquareGoalAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: TownsquareGoalAriResourceOwner,\n  resourceType: TownsquareGoalAriResourceType,\n  resourceIdSlug: \"{goalUuid}\",\n  resourceIdSegmentFormats: {\n    goalUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/townsquare/goal/index.ts\nvar TownsquareGoalAri = class _TownsquareGoalAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._goalUuid = opts.resourceIdSegmentValues.goalUuid;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get goalUuid() {\n    return this._goalUuid;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: townsquareGoalAriStaticOpts.qualifier,\n      platformQualifier: townsquareGoalAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: townsquareGoalAriStaticOpts.resourceOwner,\n      resourceType: townsquareGoalAriStaticOpts.resourceType,\n      resourceId: `${opts.goalUuid}`,\n      resourceIdSegmentValues: {\n        goalUuid: opts.goalUuid\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareGoalAriStaticOpts);\n    return new _TownsquareGoalAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, townsquareGoalAriStaticOpts);\n    return new _TownsquareGoalAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      goalUuid: this.goalUuid\n    };\n  }\n};\n\n// src/townsquare/help-pointer/types.ts\nvar TownsquareHelpPointerAriResourceOwner = \"townsquare\", TownsquareHelpPointerAriResourceType = \"help-pointer\";\n\n// src/townsquare/help-pointer/manifest.ts\nvar townsquareHelpPointerAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: TownsquareHelpPointerAriResourceOwner,\n  resourceType: TownsquareHelpPointerAriResourceType,\n  resourceIdSlug: \"{helpPointerUuid}\",\n  resourceIdSegmentFormats: {\n    helpPointerUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/townsquare/help-pointer/index.ts\nvar TownsquareHelpPointerAri = class _TownsquareHelpPointerAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._helpPointerUuid = opts.resourceIdSegmentValues.helpPointerUuid;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get helpPointerUuid() {\n    return this._helpPointerUuid;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: townsquareHelpPointerAriStaticOpts.qualifier,\n      platformQualifier: townsquareHelpPointerAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: townsquareHelpPointerAriStaticOpts.resourceOwner,\n      resourceType: townsquareHelpPointerAriStaticOpts.resourceType,\n      resourceId: `${opts.helpPointerUuid}`,\n      resourceIdSegmentValues: {\n        helpPointerUuid: opts.helpPointerUuid\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareHelpPointerAriStaticOpts);\n    return new _TownsquareHelpPointerAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, townsquareHelpPointerAriStaticOpts);\n    return new _TownsquareHelpPointerAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      helpPointerUuid: this.helpPointerUuid\n    };\n  }\n};\n\n// src/townsquare/learning/types.ts\nvar TownsquareLearningAriResourceOwner = \"townsquare\", TownsquareLearningAriResourceType = \"learning\";\n\n// src/townsquare/learning/manifest.ts\nvar townsquareLearningAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: TownsquareLearningAriResourceOwner,\n  resourceType: TownsquareLearningAriResourceType,\n  resourceIdSlug: \"{learningUuid}\",\n  resourceIdSegmentFormats: {\n    learningUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/townsquare/learning/index.ts\nvar TownsquareLearningAri = class _TownsquareLearningAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._learningUuid = opts.resourceIdSegmentValues.learningUuid;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get learningUuid() {\n    return this._learningUuid;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: townsquareLearningAriStaticOpts.qualifier,\n      platformQualifier: townsquareLearningAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: townsquareLearningAriStaticOpts.resourceOwner,\n      resourceType: townsquareLearningAriStaticOpts.resourceType,\n      resourceId: `${opts.learningUuid}`,\n      resourceIdSegmentValues: {\n        learningUuid: opts.learningUuid\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareLearningAriStaticOpts);\n    return new _TownsquareLearningAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, townsquareLearningAriStaticOpts);\n    return new _TownsquareLearningAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      learningUuid: this.learningUuid\n    };\n  }\n};\n\n// src/townsquare/project/types.ts\nvar TownsquareProjectAriResourceOwner = \"townsquare\", TownsquareProjectAriResourceType = \"project\";\n\n// src/townsquare/project/manifest.ts\nvar townsquareProjectAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: TownsquareProjectAriResourceOwner,\n  resourceType: TownsquareProjectAriResourceType,\n  resourceIdSlug: \"{projectUuid}\",\n  resourceIdSegmentFormats: {\n    projectUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/townsquare/project/index.ts\nvar TownsquareProjectAri = class _TownsquareProjectAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._projectUuid = opts.resourceIdSegmentValues.projectUuid;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get projectUuid() {\n    return this._projectUuid;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: townsquareProjectAriStaticOpts.qualifier,\n      platformQualifier: townsquareProjectAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: townsquareProjectAriStaticOpts.resourceOwner,\n      resourceType: townsquareProjectAriStaticOpts.resourceType,\n      resourceId: `${opts.projectUuid}`,\n      resourceIdSegmentValues: {\n        projectUuid: opts.projectUuid\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareProjectAriStaticOpts);\n    return new _TownsquareProjectAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, townsquareProjectAriStaticOpts);\n    return new _TownsquareProjectAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      projectUuid: this.projectUuid\n    };\n  }\n};\n\n// src/townsquare/question/types.ts\nvar TownsquareQuestionAriResourceOwner = \"townsquare\", TownsquareQuestionAriResourceType = \"question\";\n\n// src/townsquare/question/manifest.ts\nvar townsquareQuestionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: TownsquareQuestionAriResourceOwner,\n  resourceType: TownsquareQuestionAriResourceType,\n  resourceIdSlug: \"{questionUuid}\",\n  resourceIdSegmentFormats: {\n    questionUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/townsquare/question/index.ts\nvar TownsquareQuestionAri = class _TownsquareQuestionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._questionUuid = opts.resourceIdSegmentValues.questionUuid;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get questionUuid() {\n    return this._questionUuid;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: townsquareQuestionAriStaticOpts.qualifier,\n      platformQualifier: townsquareQuestionAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: townsquareQuestionAriStaticOpts.resourceOwner,\n      resourceType: townsquareQuestionAriStaticOpts.resourceType,\n      resourceId: `${opts.questionUuid}`,\n      resourceIdSegmentValues: {\n        questionUuid: opts.questionUuid\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareQuestionAriStaticOpts);\n    return new _TownsquareQuestionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, townsquareQuestionAriStaticOpts);\n    return new _TownsquareQuestionAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      questionUuid: this.questionUuid\n    };\n  }\n};\n\n// src/townsquare/role/types.ts\nvar TownsquareRoleAriResourceOwner = \"townsquare\", TownsquareRoleAriResourceType = \"role\";\n\n// src/townsquare/role/manifest.ts\nvar townsquareRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: TownsquareRoleAriResourceOwner,\n  resourceType: TownsquareRoleAriResourceType,\n  resourceIdSlug: \"product/{roleType}\",\n  resourceIdSegmentFormats: {\n    roleType: /(?:member|admin)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/townsquare/role/index.ts\nvar TownsquareRoleAri = class _TownsquareRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleType = opts.resourceIdSegmentValues.roleType;\n  }\n  get roleType() {\n    return this._roleType;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: townsquareRoleAriStaticOpts.qualifier,\n      platformQualifier: townsquareRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: townsquareRoleAriStaticOpts.resourceOwner,\n      resourceType: townsquareRoleAriStaticOpts.resourceType,\n      resourceId: `product/${opts.roleType}`,\n      resourceIdSegmentValues: {\n        roleType: opts.roleType\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareRoleAriStaticOpts);\n    return new _TownsquareRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, townsquareRoleAriStaticOpts);\n    return new _TownsquareRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleType: this.roleType\n    };\n  }\n};\n\n// src/townsquare/site/types.ts\nvar TownsquareSiteAriResourceOwner = \"townsquare\", TownsquareSiteAriResourceType = \"site\";\n\n// src/townsquare/site/manifest.ts\nvar townsquareSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: TownsquareSiteAriResourceOwner,\n  resourceType: TownsquareSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/townsquare/site/index.ts\nvar TownsquareSiteAri = class _TownsquareSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: townsquareSiteAriStaticOpts.qualifier,\n      platformQualifier: townsquareSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: townsquareSiteAriStaticOpts.resourceOwner,\n      resourceType: townsquareSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareSiteAriStaticOpts);\n    return new _TownsquareSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, townsquareSiteAriStaticOpts);\n    return new _TownsquareSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/townsquare/tag/types.ts\nvar TownsquareTagAriResourceOwner = \"townsquare\", TownsquareTagAriResourceType = \"tag\";\n\n// src/townsquare/tag/manifest.ts\nvar townsquareTagAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: TownsquareTagAriResourceOwner,\n  resourceType: TownsquareTagAriResourceType,\n  resourceIdSlug: \"{tagUuid}\",\n  resourceIdSegmentFormats: {\n    tagUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/townsquare/tag/index.ts\nvar TownsquareTagAri = class _TownsquareTagAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._tagUuid = opts.resourceIdSegmentValues.tagUuid;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get tagUuid() {\n    return this._tagUuid;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: townsquareTagAriStaticOpts.qualifier,\n      platformQualifier: townsquareTagAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: townsquareTagAriStaticOpts.resourceOwner,\n      resourceType: townsquareTagAriStaticOpts.resourceType,\n      resourceId: `${opts.tagUuid}`,\n      resourceIdSegmentValues: {\n        tagUuid: opts.tagUuid\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareTagAriStaticOpts);\n    return new _TownsquareTagAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, townsquareTagAriStaticOpts);\n    return new _TownsquareTagAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      tagUuid: this.tagUuid\n    };\n  }\n};\n\n// src/townsquare/workspace/types.ts\nvar TownsquareWorkspaceAriResourceOwner = \"townsquare\", TownsquareWorkspaceAriResourceType = \"workspace\";\n\n// src/townsquare/workspace/manifest.ts\nvar townsquareWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^[a-zA-Z0-9-]+$\"),\n  resourceOwner: TownsquareWorkspaceAriResourceOwner,\n  resourceType: TownsquareWorkspaceAriResourceType,\n  resourceIdSlug: \"{activationId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/townsquare/workspace/index.ts\nvar TownsquareWorkspaceAri = class _TownsquareWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.cloudId || \"\", this._activationId = opts.resourceIdSegmentValues.activationId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: townsquareWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: townsquareWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: opts.siteId,\n      resourceOwner: townsquareWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: townsquareWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, townsquareWorkspaceAriStaticOpts);\n    return new _TownsquareWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, townsquareWorkspaceAriStaticOpts);\n    return new _TownsquareWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId,\n      activationId: this.activationId\n    };\n  }\n};\n\n// src/trello/attachment/types.ts\nvar TrelloAttachmentAriResourceOwner = \"trello\", TrelloAttachmentAriResourceType = \"attachment\";\n\n// src/trello/attachment/manifest.ts\nvar trelloAttachmentAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: TrelloAttachmentAriResourceOwner,\n  resourceType: TrelloAttachmentAriResourceType,\n  resourceIdSlug: \"card/workspace/{workspaceId}/{cardId}/{attachmentId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-_.]*/,\n    // eslint-disable-line no-useless-escape\n    cardId: /[a-zA-Z0-9\\-_.]*/,\n    // eslint-disable-line no-useless-escape\n    attachmentId: /[a-zA-Z0-9\\-_.]*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/trello/attachment/index.ts\nvar TrelloAttachmentAri = class _TrelloAttachmentAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._cardId = opts.resourceIdSegmentValues.cardId, this._attachmentId = opts.resourceIdSegmentValues.attachmentId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get cardId() {\n    return this._cardId;\n  }\n  get attachmentId() {\n    return this._attachmentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: trelloAttachmentAriStaticOpts.qualifier,\n      platformQualifier: trelloAttachmentAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: trelloAttachmentAriStaticOpts.resourceOwner,\n      resourceType: trelloAttachmentAriStaticOpts.resourceType,\n      resourceId: `card/workspace/${opts.workspaceId}/${opts.cardId}/${opts.attachmentId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId || \"\",\n        cardId: opts.cardId || \"\",\n        attachmentId: opts.attachmentId || \"\"\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloAttachmentAriStaticOpts);\n    return new _TrelloAttachmentAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, trelloAttachmentAriStaticOpts);\n    return new _TrelloAttachmentAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      cardId: this.cardId,\n      attachmentId: this.attachmentId\n    };\n  }\n};\n\n// src/trello/board/types.ts\nvar TrelloBoardAriResourceOwner = \"trello\", TrelloBoardAriResourceType = \"board\";\n\n// src/trello/board/manifest.ts\nvar trelloBoardAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: TrelloBoardAriResourceOwner,\n  resourceType: TrelloBoardAriResourceType,\n  resourceIdSlug: \"workspace/{workspaceId}/{boardId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-_.]*/,\n    // eslint-disable-line no-useless-escape\n    boardId: /[a-zA-Z0-9\\-_.]*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/trello/board/index.ts\nvar TrelloBoardAri = class _TrelloBoardAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._boardId = opts.resourceIdSegmentValues.boardId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get boardId() {\n    return this._boardId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: trelloBoardAriStaticOpts.qualifier,\n      platformQualifier: trelloBoardAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: trelloBoardAriStaticOpts.resourceOwner,\n      resourceType: trelloBoardAriStaticOpts.resourceType,\n      resourceId: `workspace/${opts.workspaceId}/${opts.boardId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId || \"\",\n        boardId: opts.boardId || \"\"\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloBoardAriStaticOpts);\n    return new _TrelloBoardAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, trelloBoardAriStaticOpts);\n    return new _TrelloBoardAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      boardId: this.boardId\n    };\n  }\n};\n\n// src/trello/card/types.ts\nvar TrelloCardAriResourceOwner = \"trello\", TrelloCardAriResourceType = \"card\";\n\n// src/trello/card/manifest.ts\nvar trelloCardAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: TrelloCardAriResourceOwner,\n  resourceType: TrelloCardAriResourceType,\n  resourceIdSlug: \"workspace/{workspaceId}/{cardId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-_.]*/,\n    // eslint-disable-line no-useless-escape\n    cardId: /[a-zA-Z0-9\\-_.]*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/trello/card/index.ts\nvar TrelloCardAri = class _TrelloCardAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._cardId = opts.resourceIdSegmentValues.cardId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get cardId() {\n    return this._cardId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: trelloCardAriStaticOpts.qualifier,\n      platformQualifier: trelloCardAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: trelloCardAriStaticOpts.resourceOwner,\n      resourceType: trelloCardAriStaticOpts.resourceType,\n      resourceId: `workspace/${opts.workspaceId}/${opts.cardId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId || \"\",\n        cardId: opts.cardId || \"\"\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloCardAriStaticOpts);\n    return new _TrelloCardAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, trelloCardAriStaticOpts);\n    return new _TrelloCardAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      cardId: this.cardId\n    };\n  }\n};\n\n// src/trello/enterprise/types.ts\nvar TrelloEnterpriseAriResourceOwner = \"trello\", TrelloEnterpriseAriResourceType = \"enterprise\";\n\n// src/trello/enterprise/manifest.ts\nvar trelloEnterpriseAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: TrelloEnterpriseAriResourceOwner,\n  resourceType: TrelloEnterpriseAriResourceType,\n  resourceIdSlug: \"{enterpriseId}\",\n  resourceIdSegmentFormats: {\n    enterpriseId: /[a-zA-Z0-9\\-_.]*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/trello/enterprise/index.ts\nvar TrelloEnterpriseAri = class _TrelloEnterpriseAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._enterpriseId = opts.resourceIdSegmentValues.enterpriseId;\n  }\n  get enterpriseId() {\n    return this._enterpriseId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: trelloEnterpriseAriStaticOpts.qualifier,\n      platformQualifier: trelloEnterpriseAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: trelloEnterpriseAriStaticOpts.resourceOwner,\n      resourceType: trelloEnterpriseAriStaticOpts.resourceType,\n      resourceId: `${opts.enterpriseId}`,\n      resourceIdSegmentValues: {\n        enterpriseId: opts.enterpriseId || \"\"\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloEnterpriseAriStaticOpts);\n    return new _TrelloEnterpriseAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, trelloEnterpriseAriStaticOpts);\n    return new _TrelloEnterpriseAri(opts);\n  }\n  getVariables() {\n    return {\n      enterpriseId: this.enterpriseId\n    };\n  }\n};\n\n// src/trello/list/types.ts\nvar TrelloListAriResourceOwner = \"trello\", TrelloListAriResourceType = \"list\";\n\n// src/trello/list/manifest.ts\nvar trelloListAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: TrelloListAriResourceOwner,\n  resourceType: TrelloListAriResourceType,\n  resourceIdSlug: \"workspace/{workspaceId}/{listId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-_.]*/,\n    // eslint-disable-line no-useless-escape\n    listId: /[a-zA-Z0-9\\-_.]*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/trello/list/index.ts\nvar TrelloListAri = class _TrelloListAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId, this._listId = opts.resourceIdSegmentValues.listId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  get listId() {\n    return this._listId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: trelloListAriStaticOpts.qualifier,\n      platformQualifier: trelloListAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: trelloListAriStaticOpts.resourceOwner,\n      resourceType: trelloListAriStaticOpts.resourceType,\n      resourceId: `workspace/${opts.workspaceId}/${opts.listId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId || \"\",\n        listId: opts.listId || \"\"\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloListAriStaticOpts);\n    return new _TrelloListAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, trelloListAriStaticOpts);\n    return new _TrelloListAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId,\n      listId: this.listId\n    };\n  }\n};\n\n// src/trello/role/types.ts\nvar TrelloRoleAriResourceOwner = \"trello\", TrelloRoleAriResourceType = \"role\";\n\n// src/trello/role/manifest.ts\nvar trelloRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: TrelloRoleAriResourceOwner,\n  resourceType: TrelloRoleAriResourceType,\n  resourceIdSlug: \"{roleGroup}/{roleType}\",\n  resourceIdSegmentFormats: {\n    roleGroup: /(?:workspace|enterprise|product)/,\n    // eslint-disable-line no-useless-escape\n    roleType: /(?:member|admin)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/trello/role/index.ts\nvar TrelloRoleAri = class _TrelloRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleGroup = opts.resourceIdSegmentValues.roleGroup, this._roleType = opts.resourceIdSegmentValues.roleType;\n  }\n  get roleGroup() {\n    return this._roleGroup;\n  }\n  get roleType() {\n    return this._roleType;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: trelloRoleAriStaticOpts.qualifier,\n      platformQualifier: trelloRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: trelloRoleAriStaticOpts.resourceOwner,\n      resourceType: trelloRoleAriStaticOpts.resourceType,\n      resourceId: `${opts.roleGroup}/${opts.roleType}`,\n      resourceIdSegmentValues: {\n        roleGroup: opts.roleGroup,\n        roleType: opts.roleType\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloRoleAriStaticOpts);\n    return new _TrelloRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, trelloRoleAriStaticOpts);\n    return new _TrelloRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleGroup: this.roleGroup,\n      roleType: this.roleType\n    };\n  }\n};\n\n// src/trello/site/types.ts\nvar TrelloSiteAriResourceOwner = \"trello\", TrelloSiteAriResourceType = \"site\";\n\n// src/trello/site/manifest.ts\nvar trelloSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: TrelloSiteAriResourceOwner,\n  resourceType: TrelloSiteAriResourceType,\n  resourceIdSlug: \"trello\",\n  resourceIdSegmentFormats: {}\n};\n\n// src/trello/site/index.ts\nvar TrelloSiteAri = class _TrelloSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: trelloSiteAriStaticOpts.qualifier,\n      platformQualifier: trelloSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: trelloSiteAriStaticOpts.resourceOwner,\n      resourceType: trelloSiteAriStaticOpts.resourceType,\n      resourceId: \"trello\",\n      resourceIdSegmentValues: {}\n    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloSiteAriStaticOpts);\n    return new _TrelloSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, trelloSiteAriStaticOpts);\n    return new _TrelloSiteAri(opts);\n  }\n  getVariables() {\n    return {};\n  }\n};\n\n// src/trello/user/types.ts\nvar TrelloUserAriResourceOwner = \"trello\", TrelloUserAriResourceType = \"user\";\n\n// src/trello/user/manifest.ts\nvar trelloUserAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: TrelloUserAriResourceOwner,\n  resourceType: TrelloUserAriResourceType,\n  resourceIdSlug: \"{userId}\",\n  resourceIdSegmentFormats: {\n    userId: /[a-zA-Z0-9\\-_.]*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/trello/user/index.ts\nvar TrelloUserAri = class _TrelloUserAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._userId = opts.resourceIdSegmentValues.userId;\n  }\n  get userId() {\n    return this._userId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: trelloUserAriStaticOpts.qualifier,\n      platformQualifier: trelloUserAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: trelloUserAriStaticOpts.resourceOwner,\n      resourceType: trelloUserAriStaticOpts.resourceType,\n      resourceId: `${opts.userId}`,\n      resourceIdSegmentValues: {\n        userId: opts.userId || \"\"\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloUserAriStaticOpts);\n    return new _TrelloUserAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, trelloUserAriStaticOpts);\n    return new _TrelloUserAri(opts);\n  }\n  getVariables() {\n    return {\n      userId: this.userId\n    };\n  }\n};\n\n// src/trello/workspace/types.ts\nvar TrelloWorkspaceAriResourceOwner = \"trello\", TrelloWorkspaceAriResourceType = \"workspace\";\n\n// src/trello/workspace/manifest.ts\nvar trelloWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: TrelloWorkspaceAriResourceOwner,\n  resourceType: TrelloWorkspaceAriResourceType,\n  resourceIdSlug: \"{workspaceId}\",\n  resourceIdSegmentFormats: {\n    workspaceId: /[a-zA-Z0-9\\-_.]*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/trello/workspace/index.ts\nvar TrelloWorkspaceAri = class _TrelloWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workspaceId = opts.resourceIdSegmentValues.workspaceId;\n  }\n  get workspaceId() {\n    return this._workspaceId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: trelloWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: trelloWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: trelloWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: trelloWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.workspaceId}`,\n      resourceIdSegmentValues: {\n        workspaceId: opts.workspaceId || \"\"\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, trelloWorkspaceAriStaticOpts);\n    return new _TrelloWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, trelloWorkspaceAriStaticOpts);\n    return new _TrelloWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      workspaceId: this.workspaceId\n    };\n  }\n};\n\n// src/unified-help/role/types.ts\nvar UnifiedHelpRoleAriResourceOwner = \"unified-help\", UnifiedHelpRoleAriResourceType = \"role\";\n\n// src/unified-help/role/manifest.ts\nvar unifiedHelpRoleAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: UnifiedHelpRoleAriResourceOwner,\n  resourceType: UnifiedHelpRoleAriResourceType,\n  resourceIdSlug: \"product/{roleType}\",\n  resourceIdSegmentFormats: {\n    roleType: /(?:member|admin)/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/unified-help/role/index.ts\nvar UnifiedHelpRoleAri = class _UnifiedHelpRoleAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._roleType = opts.resourceIdSegmentValues.roleType;\n  }\n  get roleType() {\n    return this._roleType;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: unifiedHelpRoleAriStaticOpts.qualifier,\n      platformQualifier: unifiedHelpRoleAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: unifiedHelpRoleAriStaticOpts.resourceOwner,\n      resourceType: unifiedHelpRoleAriStaticOpts.resourceType,\n      resourceId: `product/${opts.roleType}`,\n      resourceIdSegmentValues: {\n        roleType: opts.roleType\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedHelpRoleAriStaticOpts);\n    return new _UnifiedHelpRoleAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, unifiedHelpRoleAriStaticOpts);\n    return new _UnifiedHelpRoleAri(opts);\n  }\n  getVariables() {\n    return {\n      roleType: this.roleType\n    };\n  }\n};\n\n// src/unified-help/site/types.ts\nvar UnifiedHelpSiteAriResourceOwner = \"unified-help\", UnifiedHelpSiteAriResourceType = \"site\";\n\n// src/unified-help/site/manifest.ts\nvar unifiedHelpSiteAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: UnifiedHelpSiteAriResourceOwner,\n  resourceType: UnifiedHelpSiteAriResourceType,\n  resourceIdSlug: \"{siteId}\",\n  resourceIdSegmentFormats: {\n    siteId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/unified-help/site/index.ts\nvar UnifiedHelpSiteAri = class _UnifiedHelpSiteAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._siteId = opts.resourceIdSegmentValues.siteId;\n  }\n  get siteId() {\n    return this._siteId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: unifiedHelpSiteAriStaticOpts.qualifier,\n      platformQualifier: unifiedHelpSiteAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: unifiedHelpSiteAriStaticOpts.resourceOwner,\n      resourceType: unifiedHelpSiteAriStaticOpts.resourceType,\n      resourceId: `${opts.siteId}`,\n      resourceIdSegmentValues: {\n        siteId: opts.siteId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedHelpSiteAriStaticOpts);\n    return new _UnifiedHelpSiteAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, unifiedHelpSiteAriStaticOpts);\n    return new _UnifiedHelpSiteAri(opts);\n  }\n  getVariables() {\n    return {\n      siteId: this.siteId\n    };\n  }\n};\n\n// src/unified-help/workspace/types.ts\nvar UnifiedHelpWorkspaceAriResourceOwner = \"unified-help\", UnifiedHelpWorkspaceAriResourceType = \"workspace\";\n\n// src/unified-help/workspace/manifest.ts\nvar unifiedHelpWorkspaceAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: UnifiedHelpWorkspaceAriResourceOwner,\n  resourceType: UnifiedHelpWorkspaceAriResourceType,\n  resourceIdSlug: \"{activationId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/unified-help/workspace/index.ts\nvar UnifiedHelpWorkspaceAri = class _UnifiedHelpWorkspaceAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: unifiedHelpWorkspaceAriStaticOpts.qualifier,\n      platformQualifier: unifiedHelpWorkspaceAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: unifiedHelpWorkspaceAriStaticOpts.resourceOwner,\n      resourceType: unifiedHelpWorkspaceAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedHelpWorkspaceAriStaticOpts);\n    return new _UnifiedHelpWorkspaceAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, unifiedHelpWorkspaceAriStaticOpts);\n    return new _UnifiedHelpWorkspaceAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId\n    };\n  }\n};\n\n// src/unified-portable-profile/linked-account/types.ts\nvar UnifiedPortableProfileLinkedAccountAriResourceOwner = \"unified-portable-profile\", UnifiedPortableProfileLinkedAccountAriResourceType = \"linked-account\";\n\n// src/unified-portable-profile/linked-account/manifest.ts\nvar unifiedPortableProfileLinkedAccountAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: UnifiedPortableProfileLinkedAccountAriResourceOwner,\n  resourceType: UnifiedPortableProfileLinkedAccountAriResourceType,\n  resourceIdSlug: \"{linkedAccountInternalId}\",\n  resourceIdSegmentFormats: {\n    linkedAccountInternalId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/unified-portable-profile/linked-account/index.ts\nvar UnifiedPortableProfileLinkedAccountAri = class _UnifiedPortableProfileLinkedAccountAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._linkedAccountInternalId = opts.resourceIdSegmentValues.linkedAccountInternalId;\n  }\n  get linkedAccountInternalId() {\n    return this._linkedAccountInternalId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: unifiedPortableProfileLinkedAccountAriStaticOpts.qualifier,\n      platformQualifier: unifiedPortableProfileLinkedAccountAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: unifiedPortableProfileLinkedAccountAriStaticOpts.resourceOwner,\n      resourceType: unifiedPortableProfileLinkedAccountAriStaticOpts.resourceType,\n      resourceId: `${opts.linkedAccountInternalId}`,\n      resourceIdSegmentValues: {\n        linkedAccountInternalId: opts.linkedAccountInternalId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedPortableProfileLinkedAccountAriStaticOpts);\n    return new _UnifiedPortableProfileLinkedAccountAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, unifiedPortableProfileLinkedAccountAriStaticOpts);\n    return new _UnifiedPortableProfileLinkedAccountAri(opts);\n  }\n  getVariables() {\n    return {\n      linkedAccountInternalId: this.linkedAccountInternalId\n    };\n  }\n};\n\n// src/unified-portable-profile/parent-account/types.ts\nvar UnifiedPortableProfileParentAccountAriResourceOwner = \"unified-portable-profile\", UnifiedPortableProfileParentAccountAriResourceType = \"parent-account\";\n\n// src/unified-portable-profile/parent-account/manifest.ts\nvar unifiedPortableProfileParentAccountAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: UnifiedPortableProfileParentAccountAriResourceOwner,\n  resourceType: UnifiedPortableProfileParentAccountAriResourceType,\n  resourceIdSlug: \"{parentAccountInternalId}\",\n  resourceIdSegmentFormats: {\n    parentAccountInternalId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/unified-portable-profile/parent-account/index.ts\nvar UnifiedPortableProfileParentAccountAri = class _UnifiedPortableProfileParentAccountAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._parentAccountInternalId = opts.resourceIdSegmentValues.parentAccountInternalId;\n  }\n  get parentAccountInternalId() {\n    return this._parentAccountInternalId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: unifiedPortableProfileParentAccountAriStaticOpts.qualifier,\n      platformQualifier: unifiedPortableProfileParentAccountAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: unifiedPortableProfileParentAccountAriStaticOpts.resourceOwner,\n      resourceType: unifiedPortableProfileParentAccountAriStaticOpts.resourceType,\n      resourceId: `${opts.parentAccountInternalId}`,\n      resourceIdSegmentValues: {\n        parentAccountInternalId: opts.parentAccountInternalId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedPortableProfileParentAccountAriStaticOpts);\n    return new _UnifiedPortableProfileParentAccountAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, unifiedPortableProfileParentAccountAriStaticOpts);\n    return new _UnifiedPortableProfileParentAccountAri(opts);\n  }\n  getVariables() {\n    return {\n      parentAccountInternalId: this.parentAccountInternalId\n    };\n  }\n};\n\n// src/unified-portable-profile/unified-account/types.ts\nvar UnifiedPortableProfileUnifiedAccountAriResourceOwner = \"unified-portable-profile\", UnifiedPortableProfileUnifiedAccountAriResourceType = \"unified-account\";\n\n// src/unified-portable-profile/unified-account/manifest.ts\nvar unifiedPortableProfileUnifiedAccountAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: UnifiedPortableProfileUnifiedAccountAriResourceOwner,\n  resourceType: UnifiedPortableProfileUnifiedAccountAriResourceType,\n  resourceIdSlug: \"{linkedAccountInternalId}\",\n  resourceIdSegmentFormats: {\n    linkedAccountInternalId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/unified-portable-profile/unified-account/index.ts\nvar UnifiedPortableProfileUnifiedAccountAri = class _UnifiedPortableProfileUnifiedAccountAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._linkedAccountInternalId = opts.resourceIdSegmentValues.linkedAccountInternalId;\n  }\n  get linkedAccountInternalId() {\n    return this._linkedAccountInternalId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: unifiedPortableProfileUnifiedAccountAriStaticOpts.qualifier,\n      platformQualifier: unifiedPortableProfileUnifiedAccountAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: unifiedPortableProfileUnifiedAccountAriStaticOpts.resourceOwner,\n      resourceType: unifiedPortableProfileUnifiedAccountAriStaticOpts.resourceType,\n      resourceId: `${opts.linkedAccountInternalId}`,\n      resourceIdSegmentValues: {\n        linkedAccountInternalId: opts.linkedAccountInternalId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedPortableProfileUnifiedAccountAriStaticOpts);\n    return new _UnifiedPortableProfileUnifiedAccountAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, unifiedPortableProfileUnifiedAccountAriStaticOpts);\n    return new _UnifiedPortableProfileUnifiedAccountAri(opts);\n  }\n  getVariables() {\n    return {\n      linkedAccountInternalId: this.linkedAccountInternalId\n    };\n  }\n};\n\n// src/unified-portable-profile/unified-profile/types.ts\nvar UnifiedPortableProfileUnifiedProfileAriResourceOwner = \"unified-portable-profile\", UnifiedPortableProfileUnifiedProfileAriResourceType = \"unified-profile\";\n\n// src/unified-portable-profile/unified-profile/manifest.ts\nvar unifiedPortableProfileUnifiedProfileAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: UnifiedPortableProfileUnifiedProfileAriResourceOwner,\n  resourceType: UnifiedPortableProfileUnifiedProfileAriResourceType,\n  resourceIdSlug: \"{unifiedProfileInternalId}\",\n  resourceIdSegmentFormats: {\n    unifiedProfileInternalId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/unified-portable-profile/unified-profile/index.ts\nvar UnifiedPortableProfileUnifiedProfileAri = class _UnifiedPortableProfileUnifiedProfileAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._unifiedProfileInternalId = opts.resourceIdSegmentValues.unifiedProfileInternalId;\n  }\n  get unifiedProfileInternalId() {\n    return this._unifiedProfileInternalId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: unifiedPortableProfileUnifiedProfileAriStaticOpts.qualifier,\n      platformQualifier: unifiedPortableProfileUnifiedProfileAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: unifiedPortableProfileUnifiedProfileAriStaticOpts.resourceOwner,\n      resourceType: unifiedPortableProfileUnifiedProfileAriStaticOpts.resourceType,\n      resourceId: `${opts.unifiedProfileInternalId}`,\n      resourceIdSegmentValues: {\n        unifiedProfileInternalId: opts.unifiedProfileInternalId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, unifiedPortableProfileUnifiedProfileAriStaticOpts);\n    return new _UnifiedPortableProfileUnifiedProfileAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, unifiedPortableProfileUnifiedProfileAriStaticOpts);\n    return new _UnifiedPortableProfileUnifiedProfileAri(opts);\n  }\n  getVariables() {\n    return {\n      unifiedProfileInternalId: this.unifiedProfileInternalId\n    };\n  }\n};\n\n// src/virtual-agent/configuration/types.ts\nvar VirtualAgentConfigurationAriResourceOwner = \"virtual-agent\", VirtualAgentConfigurationAriResourceType = \"configuration\";\n\n// src/virtual-agent/configuration/manifest.ts\nvar virtualAgentConfigurationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: VirtualAgentConfigurationAriResourceOwner,\n  resourceType: VirtualAgentConfigurationAriResourceType,\n  resourceIdSlug: \"{activationId}/{configurationId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    configurationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/virtual-agent/configuration/index.ts\nvar VirtualAgentConfigurationAri = class _VirtualAgentConfigurationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._configurationId = opts.resourceIdSegmentValues.configurationId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get configurationId() {\n    return this._configurationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: virtualAgentConfigurationAriStaticOpts.qualifier,\n      platformQualifier: virtualAgentConfigurationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: virtualAgentConfigurationAriStaticOpts.resourceOwner,\n      resourceType: virtualAgentConfigurationAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.configurationId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        configurationId: opts.configurationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentConfigurationAriStaticOpts);\n    return new _VirtualAgentConfigurationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, virtualAgentConfigurationAriStaticOpts);\n    return new _VirtualAgentConfigurationAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      configurationId: this.configurationId\n    };\n  }\n};\n\n// src/virtual-agent/conversation/types.ts\nvar VirtualAgentConversationAriResourceOwner = \"virtual-agent\", VirtualAgentConversationAriResourceType = \"conversation\";\n\n// src/virtual-agent/conversation/manifest.ts\nvar virtualAgentConversationAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: VirtualAgentConversationAriResourceOwner,\n  resourceType: VirtualAgentConversationAriResourceType,\n  resourceIdSlug: \"{activationId}/{configurationId}/{conversationId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    configurationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    conversationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/virtual-agent/conversation/index.ts\nvar VirtualAgentConversationAri = class _VirtualAgentConversationAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._configurationId = opts.resourceIdSegmentValues.configurationId, this._conversationId = opts.resourceIdSegmentValues.conversationId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get configurationId() {\n    return this._configurationId;\n  }\n  get conversationId() {\n    return this._conversationId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: virtualAgentConversationAriStaticOpts.qualifier,\n      platformQualifier: virtualAgentConversationAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: virtualAgentConversationAriStaticOpts.resourceOwner,\n      resourceType: virtualAgentConversationAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.configurationId}/${opts.conversationId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        configurationId: opts.configurationId,\n        conversationId: opts.conversationId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentConversationAriStaticOpts);\n    return new _VirtualAgentConversationAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, virtualAgentConversationAriStaticOpts);\n    return new _VirtualAgentConversationAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      configurationId: this.configurationId,\n      conversationId: this.conversationId\n    };\n  }\n};\n\n// src/virtual-agent/flow-editor/types.ts\nvar VirtualAgentFlowEditorAriResourceOwner = \"virtual-agent\", VirtualAgentFlowEditorAriResourceType = \"flow-editor\";\n\n// src/virtual-agent/flow-editor/manifest.ts\nvar virtualAgentFlowEditorAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: VirtualAgentFlowEditorAriResourceOwner,\n  resourceType: VirtualAgentFlowEditorAriResourceType,\n  resourceIdSlug: \"{activationId}/{configurationId}/{flowEditorId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    configurationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    flowEditorId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/virtual-agent/flow-editor/index.ts\nvar VirtualAgentFlowEditorAri = class _VirtualAgentFlowEditorAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._configurationId = opts.resourceIdSegmentValues.configurationId, this._flowEditorId = opts.resourceIdSegmentValues.flowEditorId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get configurationId() {\n    return this._configurationId;\n  }\n  get flowEditorId() {\n    return this._flowEditorId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: virtualAgentFlowEditorAriStaticOpts.qualifier,\n      platformQualifier: virtualAgentFlowEditorAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: virtualAgentFlowEditorAriStaticOpts.resourceOwner,\n      resourceType: virtualAgentFlowEditorAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.configurationId}/${opts.flowEditorId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        configurationId: opts.configurationId,\n        flowEditorId: opts.flowEditorId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentFlowEditorAriStaticOpts);\n    return new _VirtualAgentFlowEditorAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, virtualAgentFlowEditorAriStaticOpts);\n    return new _VirtualAgentFlowEditorAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      configurationId: this.configurationId,\n      flowEditorId: this.flowEditorId\n    };\n  }\n};\n\n// src/virtual-agent/intent-projection/types.ts\nvar VirtualAgentIntentProjectionAriResourceOwner = \"virtual-agent\", VirtualAgentIntentProjectionAriResourceType = \"intent-projection\";\n\n// src/virtual-agent/intent-projection/manifest.ts\nvar virtualAgentIntentProjectionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: VirtualAgentIntentProjectionAriResourceOwner,\n  resourceType: VirtualAgentIntentProjectionAriResourceType,\n  resourceIdSlug: \"{activationId}/{configurationId}/{intentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    configurationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    intentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/virtual-agent/intent-projection/index.ts\nvar VirtualAgentIntentProjectionAri = class _VirtualAgentIntentProjectionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._configurationId = opts.resourceIdSegmentValues.configurationId, this._intentId = opts.resourceIdSegmentValues.intentId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get configurationId() {\n    return this._configurationId;\n  }\n  get intentId() {\n    return this._intentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: virtualAgentIntentProjectionAriStaticOpts.qualifier,\n      platformQualifier: virtualAgentIntentProjectionAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: virtualAgentIntentProjectionAriStaticOpts.resourceOwner,\n      resourceType: virtualAgentIntentProjectionAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.configurationId}/${opts.intentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        configurationId: opts.configurationId,\n        intentId: opts.intentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentIntentProjectionAriStaticOpts);\n    return new _VirtualAgentIntentProjectionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, virtualAgentIntentProjectionAriStaticOpts);\n    return new _VirtualAgentIntentProjectionAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      configurationId: this.configurationId,\n      intentId: this.intentId\n    };\n  }\n};\n\n// src/virtual-agent/intent-question-projection/types.ts\nvar VirtualAgentIntentQuestionProjectionAriResourceOwner = \"virtual-agent\", VirtualAgentIntentQuestionProjectionAriResourceType = \"intent-question-projection\";\n\n// src/virtual-agent/intent-question-projection/manifest.ts\nvar virtualAgentIntentQuestionProjectionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: VirtualAgentIntentQuestionProjectionAriResourceOwner,\n  resourceType: VirtualAgentIntentQuestionProjectionAriResourceType,\n  resourceIdSlug: \"{activationId}/{configurationId}/{intentQuestionId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    configurationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    intentQuestionId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/virtual-agent/intent-question-projection/index.ts\nvar VirtualAgentIntentQuestionProjectionAri = class _VirtualAgentIntentQuestionProjectionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._configurationId = opts.resourceIdSegmentValues.configurationId, this._intentQuestionId = opts.resourceIdSegmentValues.intentQuestionId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get configurationId() {\n    return this._configurationId;\n  }\n  get intentQuestionId() {\n    return this._intentQuestionId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: virtualAgentIntentQuestionProjectionAriStaticOpts.qualifier,\n      platformQualifier: virtualAgentIntentQuestionProjectionAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: virtualAgentIntentQuestionProjectionAriStaticOpts.resourceOwner,\n      resourceType: virtualAgentIntentQuestionProjectionAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.configurationId}/${opts.intentQuestionId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        configurationId: opts.configurationId,\n        intentQuestionId: opts.intentQuestionId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentIntentQuestionProjectionAriStaticOpts);\n    return new _VirtualAgentIntentQuestionProjectionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, virtualAgentIntentQuestionProjectionAriStaticOpts);\n    return new _VirtualAgentIntentQuestionProjectionAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      configurationId: this.configurationId,\n      intentQuestionId: this.intentQuestionId\n    };\n  }\n};\n\n// src/virtual-agent/intent-rule-projection/types.ts\nvar VirtualAgentIntentRuleProjectionAriResourceOwner = \"virtual-agent\", VirtualAgentIntentRuleProjectionAriResourceType = \"intent-rule-projection\";\n\n// src/virtual-agent/intent-rule-projection/manifest.ts\nvar virtualAgentIntentRuleProjectionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: VirtualAgentIntentRuleProjectionAriResourceOwner,\n  resourceType: VirtualAgentIntentRuleProjectionAriResourceType,\n  resourceIdSlug: \"{activationId}/{configurationId}/{intentId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    configurationId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/,\n    // eslint-disable-line no-useless-escape\n    intentId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/virtual-agent/intent-rule-projection/index.ts\nvar VirtualAgentIntentRuleProjectionAri = class _VirtualAgentIntentRuleProjectionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._configurationId = opts.resourceIdSegmentValues.configurationId, this._intentId = opts.resourceIdSegmentValues.intentId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get configurationId() {\n    return this._configurationId;\n  }\n  get intentId() {\n    return this._intentId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: virtualAgentIntentRuleProjectionAriStaticOpts.qualifier,\n      platformQualifier: virtualAgentIntentRuleProjectionAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: virtualAgentIntentRuleProjectionAriStaticOpts.resourceOwner,\n      resourceType: virtualAgentIntentRuleProjectionAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.configurationId}/${opts.intentId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        configurationId: opts.configurationId,\n        intentId: opts.intentId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentIntentRuleProjectionAriStaticOpts);\n    return new _VirtualAgentIntentRuleProjectionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, virtualAgentIntentRuleProjectionAriStaticOpts);\n    return new _VirtualAgentIntentRuleProjectionAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      configurationId: this.configurationId,\n      intentId: this.intentId\n    };\n  }\n};\n\n// src/virtual-agent/intent-template/types.ts\nvar VirtualAgentIntentTemplateAriResourceOwner = \"virtual-agent\", VirtualAgentIntentTemplateAriResourceType = \"intent-template\";\n\n// src/virtual-agent/intent-template/manifest.ts\nvar virtualAgentIntentTemplateAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"cloud\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: VirtualAgentIntentTemplateAriResourceOwner,\n  resourceType: VirtualAgentIntentTemplateAriResourceType,\n  resourceIdSlug: \"{activationId}/{intentTemplateId}\",\n  resourceIdSegmentFormats: {\n    activationId: /[a-zA-Z0-9\\-]+/,\n    // eslint-disable-line no-useless-escape\n    intentTemplateId: /[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/virtual-agent/intent-template/index.ts\nvar VirtualAgentIntentTemplateAri = class _VirtualAgentIntentTemplateAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._activationId = opts.resourceIdSegmentValues.activationId, this._intentTemplateId = opts.resourceIdSegmentValues.intentTemplateId;\n  }\n  get activationId() {\n    return this._activationId;\n  }\n  get intentTemplateId() {\n    return this._intentTemplateId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: virtualAgentIntentTemplateAriStaticOpts.qualifier,\n      platformQualifier: virtualAgentIntentTemplateAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: virtualAgentIntentTemplateAriStaticOpts.resourceOwner,\n      resourceType: virtualAgentIntentTemplateAriStaticOpts.resourceType,\n      resourceId: `${opts.activationId}/${opts.intentTemplateId}`,\n      resourceIdSegmentValues: {\n        activationId: opts.activationId,\n        intentTemplateId: opts.intentTemplateId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, virtualAgentIntentTemplateAriStaticOpts);\n    return new _VirtualAgentIntentTemplateAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, virtualAgentIntentTemplateAriStaticOpts);\n    return new _VirtualAgentIntentTemplateAri(opts);\n  }\n  getVariables() {\n    return {\n      activationId: this.activationId,\n      intentTemplateId: this.intentTemplateId\n    };\n  }\n};\n\n// src/workato/job/types.ts\nvar WorkatoJobAriResourceOwner = \"workato\", WorkatoJobAriResourceType = \"job\";\n\n// src/workato/job/manifest.ts\nvar workatoJobAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: WorkatoJobAriResourceOwner,\n  resourceType: WorkatoJobAriResourceType,\n  resourceIdSlug: \"{workatoTenantKey}/{jobId}\",\n  resourceIdSegmentFormats: {\n    workatoTenantKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    jobId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/workato/job/index.ts\nvar WorkatoJobAri = class _WorkatoJobAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workatoTenantKey = opts.resourceIdSegmentValues.workatoTenantKey, this._jobId = opts.resourceIdSegmentValues.jobId;\n  }\n  get workatoTenantKey() {\n    return this._workatoTenantKey;\n  }\n  get jobId() {\n    return this._jobId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: workatoJobAriStaticOpts.qualifier,\n      platformQualifier: workatoJobAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: workatoJobAriStaticOpts.resourceOwner,\n      resourceType: workatoJobAriStaticOpts.resourceType,\n      resourceId: `${opts.workatoTenantKey}/${opts.jobId}`,\n      resourceIdSegmentValues: {\n        workatoTenantKey: opts.workatoTenantKey,\n        jobId: opts.jobId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, workatoJobAriStaticOpts);\n    return new _WorkatoJobAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, workatoJobAriStaticOpts);\n    return new _WorkatoJobAri(opts);\n  }\n  getVariables() {\n    return {\n      workatoTenantKey: this.workatoTenantKey,\n      jobId: this.jobId\n    };\n  }\n};\n\n// src/workato/recipe/types.ts\nvar WorkatoRecipeAriResourceOwner = \"workato\", WorkatoRecipeAriResourceType = \"recipe\";\n\n// src/workato/recipe/manifest.ts\nvar workatoRecipeAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: WorkatoRecipeAriResourceOwner,\n  resourceType: WorkatoRecipeAriResourceType,\n  resourceIdSlug: \"{workatoTenantKey}/{recipeId}\",\n  resourceIdSegmentFormats: {\n    workatoTenantKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    recipeId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/workato/recipe/index.ts\nvar WorkatoRecipeAri = class _WorkatoRecipeAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workatoTenantKey = opts.resourceIdSegmentValues.workatoTenantKey, this._recipeId = opts.resourceIdSegmentValues.recipeId;\n  }\n  get workatoTenantKey() {\n    return this._workatoTenantKey;\n  }\n  get recipeId() {\n    return this._recipeId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: workatoRecipeAriStaticOpts.qualifier,\n      platformQualifier: workatoRecipeAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: workatoRecipeAriStaticOpts.resourceOwner,\n      resourceType: workatoRecipeAriStaticOpts.resourceType,\n      resourceId: `${opts.workatoTenantKey}/${opts.recipeId}`,\n      resourceIdSegmentValues: {\n        workatoTenantKey: opts.workatoTenantKey,\n        recipeId: opts.recipeId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, workatoRecipeAriStaticOpts);\n    return new _WorkatoRecipeAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, workatoRecipeAriStaticOpts);\n    return new _WorkatoRecipeAri(opts);\n  }\n  getVariables() {\n    return {\n      workatoTenantKey: this.workatoTenantKey,\n      recipeId: this.recipeId\n    };\n  }\n};\n\n// src/workday/cost-center/types.ts\nvar WorkdayCostCenterAriResourceOwner = \"workday\", WorkdayCostCenterAriResourceType = \"cost-center\";\n\n// src/workday/cost-center/manifest.ts\nvar workdayCostCenterAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: WorkdayCostCenterAriResourceOwner,\n  resourceType: WorkdayCostCenterAriResourceType,\n  resourceIdSlug: \"{workdayTenantKey}/{costCenterWorkdayId}\",\n  resourceIdSegmentFormats: {\n    workdayTenantKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    costCenterWorkdayId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/workday/cost-center/index.ts\nvar WorkdayCostCenterAri = class _WorkdayCostCenterAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workdayTenantKey = opts.resourceIdSegmentValues.workdayTenantKey, this._costCenterWorkdayId = opts.resourceIdSegmentValues.costCenterWorkdayId;\n  }\n  get workdayTenantKey() {\n    return this._workdayTenantKey;\n  }\n  get costCenterWorkdayId() {\n    return this._costCenterWorkdayId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: workdayCostCenterAriStaticOpts.qualifier,\n      platformQualifier: workdayCostCenterAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: workdayCostCenterAriStaticOpts.resourceOwner,\n      resourceType: workdayCostCenterAriStaticOpts.resourceType,\n      resourceId: `${opts.workdayTenantKey}/${opts.costCenterWorkdayId}`,\n      resourceIdSegmentValues: {\n        workdayTenantKey: opts.workdayTenantKey,\n        costCenterWorkdayId: opts.costCenterWorkdayId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayCostCenterAriStaticOpts);\n    return new _WorkdayCostCenterAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, workdayCostCenterAriStaticOpts);\n    return new _WorkdayCostCenterAri(opts);\n  }\n  getVariables() {\n    return {\n      workdayTenantKey: this.workdayTenantKey,\n      costCenterWorkdayId: this.costCenterWorkdayId\n    };\n  }\n};\n\n// src/workday/job-profile/types.ts\nvar WorkdayJobProfileAriResourceOwner = \"workday\", WorkdayJobProfileAriResourceType = \"job-profile\";\n\n// src/workday/job-profile/manifest.ts\nvar workdayJobProfileAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: WorkdayJobProfileAriResourceOwner,\n  resourceType: WorkdayJobProfileAriResourceType,\n  resourceIdSlug: \"{workdayTenantKey}/{jobProfileWorkdayId}\",\n  resourceIdSegmentFormats: {\n    workdayTenantKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    jobProfileWorkdayId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/workday/job-profile/index.ts\nvar WorkdayJobProfileAri = class _WorkdayJobProfileAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workdayTenantKey = opts.resourceIdSegmentValues.workdayTenantKey, this._jobProfileWorkdayId = opts.resourceIdSegmentValues.jobProfileWorkdayId;\n  }\n  get workdayTenantKey() {\n    return this._workdayTenantKey;\n  }\n  get jobProfileWorkdayId() {\n    return this._jobProfileWorkdayId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: workdayJobProfileAriStaticOpts.qualifier,\n      platformQualifier: workdayJobProfileAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: workdayJobProfileAriStaticOpts.resourceOwner,\n      resourceType: workdayJobProfileAriStaticOpts.resourceType,\n      resourceId: `${opts.workdayTenantKey}/${opts.jobProfileWorkdayId}`,\n      resourceIdSegmentValues: {\n        workdayTenantKey: opts.workdayTenantKey,\n        jobProfileWorkdayId: opts.jobProfileWorkdayId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayJobProfileAriStaticOpts);\n    return new _WorkdayJobProfileAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, workdayJobProfileAriStaticOpts);\n    return new _WorkdayJobProfileAri(opts);\n  }\n  getVariables() {\n    return {\n      workdayTenantKey: this.workdayTenantKey,\n      jobProfileWorkdayId: this.jobProfileWorkdayId\n    };\n  }\n};\n\n// src/workday/position/types.ts\nvar WorkdayPositionAriResourceOwner = \"workday\", WorkdayPositionAriResourceType = \"position\";\n\n// src/workday/position/manifest.ts\nvar workdayPositionAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: WorkdayPositionAriResourceOwner,\n  resourceType: WorkdayPositionAriResourceType,\n  resourceIdSlug: \"{workdayTenantKey}/{positionWorkdayId}\",\n  resourceIdSegmentFormats: {\n    workdayTenantKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    positionWorkdayId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/workday/position/index.ts\nvar WorkdayPositionAri = class _WorkdayPositionAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workdayTenantKey = opts.resourceIdSegmentValues.workdayTenantKey, this._positionWorkdayId = opts.resourceIdSegmentValues.positionWorkdayId;\n  }\n  get workdayTenantKey() {\n    return this._workdayTenantKey;\n  }\n  get positionWorkdayId() {\n    return this._positionWorkdayId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: workdayPositionAriStaticOpts.qualifier,\n      platformQualifier: workdayPositionAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: workdayPositionAriStaticOpts.resourceOwner,\n      resourceType: workdayPositionAriStaticOpts.resourceType,\n      resourceId: `${opts.workdayTenantKey}/${opts.positionWorkdayId}`,\n      resourceIdSegmentValues: {\n        workdayTenantKey: opts.workdayTenantKey,\n        positionWorkdayId: opts.positionWorkdayId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayPositionAriStaticOpts);\n    return new _WorkdayPositionAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, workdayPositionAriStaticOpts);\n    return new _WorkdayPositionAri(opts);\n  }\n  getVariables() {\n    return {\n      workdayTenantKey: this.workdayTenantKey,\n      positionWorkdayId: this.positionWorkdayId\n    };\n  }\n};\n\n// src/workday/staff/types.ts\nvar WorkdayStaffAriResourceOwner = \"workday\", WorkdayStaffAriResourceType = \"staff\";\n\n// src/workday/staff/manifest.ts\nvar workdayStaffAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: WorkdayStaffAriResourceOwner,\n  resourceType: WorkdayStaffAriResourceType,\n  resourceIdSlug: \"{workdayTenantKey}/{staffId}\",\n  resourceIdSegmentFormats: {\n    workdayTenantKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    staffId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/workday/staff/index.ts\nvar WorkdayStaffAri = class _WorkdayStaffAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workdayTenantKey = opts.resourceIdSegmentValues.workdayTenantKey, this._staffId = opts.resourceIdSegmentValues.staffId;\n  }\n  get workdayTenantKey() {\n    return this._workdayTenantKey;\n  }\n  get staffId() {\n    return this._staffId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: workdayStaffAriStaticOpts.qualifier,\n      platformQualifier: workdayStaffAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: workdayStaffAriStaticOpts.resourceOwner,\n      resourceType: workdayStaffAriStaticOpts.resourceType,\n      resourceId: `${opts.workdayTenantKey}/${opts.staffId}`,\n      resourceIdSegmentValues: {\n        workdayTenantKey: opts.workdayTenantKey,\n        staffId: opts.staffId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayStaffAriStaticOpts);\n    return new _WorkdayStaffAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, workdayStaffAriStaticOpts);\n    return new _WorkdayStaffAri(opts);\n  }\n  getVariables() {\n    return {\n      workdayTenantKey: this.workdayTenantKey,\n      staffId: this.staffId\n    };\n  }\n};\n\n// src/workday/supervisory-org/types.ts\nvar WorkdaySupervisoryOrgAriResourceOwner = \"workday\", WorkdaySupervisoryOrgAriResourceType = \"supervisory-org\";\n\n// src/workday/supervisory-org/manifest.ts\nvar workdaySupervisoryOrgAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: WorkdaySupervisoryOrgAriResourceOwner,\n  resourceType: WorkdaySupervisoryOrgAriResourceType,\n  resourceIdSlug: \"{workdayTenantKey}/{supervisoryOrgWorkdayId}\",\n  resourceIdSegmentFormats: {\n    workdayTenantKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    supervisoryOrgWorkdayId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/workday/supervisory-org/index.ts\nvar WorkdaySupervisoryOrgAri = class _WorkdaySupervisoryOrgAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workdayTenantKey = opts.resourceIdSegmentValues.workdayTenantKey, this._supervisoryOrgWorkdayId = opts.resourceIdSegmentValues.supervisoryOrgWorkdayId;\n  }\n  get workdayTenantKey() {\n    return this._workdayTenantKey;\n  }\n  get supervisoryOrgWorkdayId() {\n    return this._supervisoryOrgWorkdayId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: workdaySupervisoryOrgAriStaticOpts.qualifier,\n      platformQualifier: workdaySupervisoryOrgAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: workdaySupervisoryOrgAriStaticOpts.resourceOwner,\n      resourceType: workdaySupervisoryOrgAriStaticOpts.resourceType,\n      resourceId: `${opts.workdayTenantKey}/${opts.supervisoryOrgWorkdayId}`,\n      resourceIdSegmentValues: {\n        workdayTenantKey: opts.workdayTenantKey,\n        supervisoryOrgWorkdayId: opts.supervisoryOrgWorkdayId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, workdaySupervisoryOrgAriStaticOpts);\n    return new _WorkdaySupervisoryOrgAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, workdaySupervisoryOrgAriStaticOpts);\n    return new _WorkdaySupervisoryOrgAri(opts);\n  }\n  getVariables() {\n    return {\n      workdayTenantKey: this.workdayTenantKey,\n      supervisoryOrgWorkdayId: this.supervisoryOrgWorkdayId\n    };\n  }\n};\n\n// src/workday/worker/types.ts\nvar WorkdayWorkerAriResourceOwner = \"workday\", WorkdayWorkerAriResourceType = \"worker\";\n\n// src/workday/worker/manifest.ts\nvar workdayWorkerAriStaticOpts = {\n  qualifier: \"ari\",\n  platformQualifier: \"third-party\",\n  cloudId: new RegExp(\"^$\"),\n  resourceOwner: WorkdayWorkerAriResourceOwner,\n  resourceType: WorkdayWorkerAriResourceType,\n  resourceIdSlug: \"{workdayTenantKey}/{workerWorkdayId}\",\n  resourceIdSegmentFormats: {\n    workdayTenantKey: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/,\n    // eslint-disable-line no-useless-escape\n    workerWorkdayId: /[!a-zA-Z0-9\\-_.~@:{}=]+(\\/[!a-zA-Z0-9\\-_.~@:{}=]+)*/\n    // eslint-disable-line no-useless-escape\n  }\n};\n\n// src/workday/worker/index.ts\nvar WorkdayWorkerAri = class _WorkdayWorkerAri extends RegisteredAri {\n  constructor(opts) {\n    super(opts);\n    this._workdayTenantKey = opts.resourceIdSegmentValues.workdayTenantKey, this._workerWorkdayId = opts.resourceIdSegmentValues.workerWorkdayId;\n  }\n  get workdayTenantKey() {\n    return this._workdayTenantKey;\n  }\n  get workerWorkdayId() {\n    return this._workerWorkdayId;\n  }\n  static create(opts) {\n    let derivedOpts = {\n      qualifier: workdayWorkerAriStaticOpts.qualifier,\n      platformQualifier: workdayWorkerAriStaticOpts.platformQualifier,\n      cloudId: void 0,\n      resourceOwner: workdayWorkerAriStaticOpts.resourceOwner,\n      resourceType: workdayWorkerAriStaticOpts.resourceType,\n      resourceId: `${opts.workdayTenantKey}/${opts.workerWorkdayId}`,\n      resourceIdSegmentValues: {\n        workdayTenantKey: opts.workdayTenantKey,\n        workerWorkdayId: opts.workerWorkdayId\n      }\n    }, ariOpts = AriParser.fromOpts(derivedOpts, workdayWorkerAriStaticOpts);\n    return new _WorkdayWorkerAri(ariOpts);\n  }\n  static parse(maybeAri) {\n    let opts = AriParser.fromString(maybeAri, workdayWorkerAriStaticOpts);\n    return new _WorkdayWorkerAri(opts);\n  }\n  getVariables() {\n    return {\n      workdayTenantKey: this.workdayTenantKey,\n      workerWorkdayId: this.workerWorkdayId\n    };\n  }\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  AnalyticsUserAri,\n  AnyAri,\n  ApprovalDeskDecisionTableAri,\n  ApprovalDeskRoleAri,\n  ApprovalDeskWorkflowAri,\n  ApprovalDeskWorkspaceAri,\n  Ari,\n  Arm,\n  Ati,\n  AtlashubIdAri,\n  AtlashubSiteAri,\n  AutomationRoleAri,\n  AutomationRuleAri,\n  AvocadoAnswerAri,\n  AvocadoQuestionAri,\n  AvocadoRoleAri,\n  AvocadoSiteAri,\n  AvocadoUserAri,\n  AvpDashboardAri,\n  AvpDatasourceAri,\n  AvpRoleAri,\n  AvpSiteAri,\n  BeaconAlertAri,\n  BeaconCustomDetectionAri,\n  BeaconDetectionAri,\n  BeaconDetectionSettingAri,\n  BeaconRoleAri,\n  BeaconSiteAri,\n  BeaconSubscriptionAri,\n  BeaconWorkspaceAri,\n  BitbucketAppAri,\n  BitbucketOauthConsumerAri,\n  BitbucketProjectAri,\n  BitbucketPullrequestAri,\n  BitbucketRepositoryAri,\n  BitbucketRepositoryTransferAri,\n  BitbucketSiteAri,\n  BitbucketTeamAri,\n  BitbucketWorkspaceAri,\n  BrieRoleAri,\n  BrieSiteAri,\n  CanvasBoardAri,\n  CanvasDatabaseAri,\n  CanvasSiteAri,\n  CanvasWorkspaceAri,\n  CmdbAttributeAri,\n  CmdbImportConfigurationAri,\n  CmdbObjectAri,\n  CmdbRoleAri,\n  CmdbSchemaAri,\n  CmdbTypeAri,\n  CmdbWorkspaceAri,\n  CommerceCatalogAccountAri,\n  CommerceChangeAri,\n  CommerceEntitlementAri,\n  CommerceEntitlementTemplateAri,\n  CommerceInitiativeAri,\n  CommerceInvoiceGroupAri,\n  CommerceOfferingAri,\n  CommerceOfferingRelationshipTemplateAri,\n  CommerceOrderAri,\n  CommercePaymentMethodAri,\n  CommercePricingPlanAri,\n  CommerceProductAri,\n  CommercePromotionAri,\n  CommerceQuoteAri,\n  CommerceRoleAri,\n  CommerceShipToPartyAri,\n  CommerceTransactionAccountAri,\n  CommerceWorkbenchResourceAri,\n  CompassAssistantAnswerAri,\n  CompassComponentAri,\n  CompassComponentLabelAri,\n  CompassComponentLinkAri,\n  CompassCustomFieldDefinitionAri,\n  CompassDocumentAri,\n  CompassDocumentationCategoryAri,\n  CompassEventSourceAri,\n  CompassIncomingWebhookAri,\n  CompassMetricDefinitionAri,\n  CompassMetricSourceAri,\n  CompassRoleAri,\n  CompassScorecardAri,\n  CompassSiteAri,\n  CompassUserDefinedParameterAri,\n  CompassWebhookAri,\n  CompassWorkspaceAri,\n  ConfluenceAdminAnnouncementBannerAri,\n  ConfluenceAttachmentAri,\n  ConfluenceBlogpostAri,\n  ConfluenceCommentAri,\n  ConfluenceContentAri,\n  ConfluenceDatabaseAri,\n  ConfluenceEmbedAri,\n  ConfluenceEventAri,\n  ConfluenceFolderAri,\n  ConfluenceLongRunningTaskAri,\n  ConfluenceNoteAri,\n  ConfluencePageAri,\n  ConfluencePublicLinkAri,\n  ConfluenceRoleAri,\n  ConfluenceSiteAri,\n  ConfluenceSpaceAri,\n  ConfluenceTaskAri,\n  ConfluenceTeamCalendarAri,\n  ConfluenceUserPropertyAri,\n  ConfluenceWhiteboardAri,\n  ConfluenceWorkspaceAri,\n  ConnectionRegistryLinkAri,\n  ConversationalHelpConversationAri,\n  ConversationalHelpConversationMessageAri,\n  DataLakeLakeConnectionAri,\n  DevopsContainerAri,\n  DevopsNamespaceAri,\n  DevopsProviderAri,\n  DevopsRelationshipAri,\n  DevopsToolAri,\n  EcosystemAppAri,\n  EcosystemAppEnvironmentVersionAri,\n  EcosystemConnectAppAri,\n  EcosystemEnvironmentAri,\n  EcosystemExtensionAri,\n  EcosystemExtensionGroupAri,\n  EcosystemInstallationAri,\n  ElementsCustomEmojiMetadataAri,\n  ElementsWorkspaceAri,\n  ExusExternalUserAri,\n  FigmaFileAri,\n  GoogleDocumentAri,\n  GoogleFormAri,\n  GooglePresentationAri,\n  GoogleSpreadsheetAri,\n  GraphBranchAri,\n  GraphBranchHistoryAri,\n  GraphBuildAri,\n  GraphBuildHistoryAri,\n  GraphCommitAri,\n  GraphContentAri,\n  GraphDeploymentAri,\n  GraphDeploymentHistoryAri,\n  GraphDesignAri,\n  GraphDesignHistoryAri,\n  GraphDevopsComponentAri,\n  GraphDocumentAri,\n  GraphDocumentHistoryAri,\n  GraphEmployeeAri,\n  GraphEmployeeHistoryAri,\n  GraphFeatureFlagAri,\n  GraphFeatureFlagHistoryAri,\n  GraphIncidentAri,\n  GraphIncidentHistoryAri,\n  GraphJiraProjectAndDevopsToolRelationshipAri,\n  GraphJiraProjectAndDocumentationSpaceRelationshipAri,\n  GraphJiraProjectAndOperationsTeamRelationshipAri,\n  GraphJiraProjectAndVcsRepositoryRelationshipAri,\n  GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAri,\n  GraphOperationsWorkspaceAri,\n  GraphPostIncidentReviewAri,\n  GraphPostIncidentReviewHistoryAri,\n  GraphProjectAri,\n  GraphPullRequestAri,\n  GraphPullRequestHistoryAri,\n  GraphRemoteLinkAri,\n  GraphRemoteLinkHistoryAri,\n  GraphRepositoryAri,\n  GraphSecurityContainerAri,\n  GraphSecurityWorkspaceAri,\n  GraphServiceAndJiraProjectRelationshipAri,\n  GraphServiceAndOperationsTeamRelationshipAri,\n  GraphServiceAndVcsRepositoryRelationshipAri,\n  GraphServiceAri,\n  GraphServiceRelationshipAri,\n  GraphVideoAri,\n  GraphVideoHistoryAri,\n  GraphVulnerabilityAri,\n  GraphVulnerabilityHistoryAri,\n  GraphWorkspaceAri,\n  HelpArticleAri,\n  HelpChannelAri,\n  HelpHelpCenterAri,\n  HelpHelpDeskAri,\n  HelpLayoutAri,\n  HelpPortalAri,\n  HelpRequestFormAri,\n  IdentityAppAri,\n  IdentityAuthPolicyAri,\n  IdentityCustomerDirectoryAri,\n  IdentityCustomerOrganizationAri,\n  IdentityDirectoryAri,\n  IdentityDomainAri,\n  IdentityGroupAri,\n  IdentityOauthClientAri,\n  IdentityRoleAri,\n  IdentitySiteAri,\n  IdentityTeamAri,\n  IdentityTeamMemberAri,\n  IdentityThirdPartyGroupAri,\n  IdentityThirdPartyUserAri,\n  IdentityUserAri,\n  IdentityUserGrantAri,\n  IdentityUserbaseAri,\n  JiraAlignEpicAri,\n  JiraAlignInstanceAri,\n  JiraAnnouncementBannerAri,\n  JiraAvailableFieldsAri,\n  JiraBranchAri,\n  JiraBranchHistoryAri,\n  JiraBuildAri,\n  JiraBuildHistoryAri,\n  JiraBulkOperationTaskAri,\n  JiraCommentAri,\n  JiraCommitAri,\n  JiraComponentAri,\n  JiraConnectAppAri,\n  JiraCoreRoleAri,\n  JiraCoreSiteAri,\n  JiraDashboardAri,\n  JiraDeploymentAri,\n  JiraDeploymentHistoryAri,\n  JiraDesignAri,\n  JiraDesignHistoryAri,\n  JiraDevopsComponentAri,\n  JiraDocumentAri,\n  JiraDocumentHistoryAri,\n  JiraEntitlementAri,\n  JiraEntityPropertyAri,\n  JiraFavouriteAri,\n  JiraFeatureFlagAri,\n  JiraFeatureFlagHistoryAri,\n  JiraFilterAri,\n  JiraFilterEmailSubscriptionAri,\n  JiraIncidentAri,\n  JiraIncidentHistoryAri,\n  JiraIssueAri,\n  JiraIssueAttachmentAri,\n  JiraIssueCommentAri,\n  JiraIssueFieldMetadataAri,\n  JiraIssueFieldOptionAri,\n  JiraIssueHistoryAri,\n  JiraIssueLinkAri,\n  JiraIssueLinkTypeAri,\n  JiraIssueRemoteLinkAri,\n  JiraIssueSearchViewAri,\n  JiraIssueStatusAri,\n  JiraIssueTypeAri,\n  JiraIssueTypeSchemeAri,\n  JiraIssueTypeSchemeMappingAri,\n  JiraIssueWorklogAri,\n  JiraIssuefieldvalueAri,\n  JiraNavigationConfigAri,\n  JiraNavigationItemAri,\n  JiraNotificationTypeAri,\n  JiraNotificationTypeSchemeAri,\n  JiraNotificationUserPreferenceAri,\n  JiraOperationsWorkspaceAri,\n  JiraPermissionSchemeAri,\n  JiraPlanAri,\n  JiraPlanCrossProjectScenarioVersionAri,\n  JiraPlanCrossProjectVersionAri,\n  JiraPlanScenarioAri,\n  JiraPlanScenarioIssueAri,\n  JiraPlanScenarioIssueFieldAri,\n  JiraPlanScenarioVersionAri,\n  JiraPostIncidentReviewAri,\n  JiraPostIncidentReviewHistoryAri,\n  JiraPostIncidentReviewLinkAri,\n  JiraPriorityAri,\n  JiraProductAri,\n  JiraProjectAri,\n  JiraProjectCategoryAri,\n  JiraProjectFeatureAri,\n  JiraProjectOverviewAri,\n  JiraProjectRoleActorAri,\n  JiraProjectShortcutAri,\n  JiraProjectTypeAri,\n  JiraPullRequestAri,\n  JiraPullRequestHistoryAri,\n  JiraRemoteLinkAri,\n  JiraRemoteLinkHistoryAri,\n  JiraRepositoryAri,\n  JiraResolutionAri,\n  JiraResourceUsageMetricAri,\n  JiraResourceUsageRecommendationAri,\n  JiraRoleAri,\n  JiraScreenTabAri,\n  JiraSecurityContainerAri,\n  JiraSecurityLevelAri,\n  JiraSecurityWorkspaceAri,\n  JiraServicedeskApprovalAri,\n  JiraServicedeskCalendarEventAri,\n  JiraServicedeskCannedResponseAri,\n  JiraServicedeskOrganizationAri,\n  JiraServicedeskQueueAri,\n  JiraServicedeskRequestTypeAri,\n  JiraServicedeskRoleAri,\n  JiraServicedeskSiteAri,\n  JiraServicedeskSlaAri,\n  JiraSiteAri,\n  JiraSoftwareBoardAri,\n  JiraSoftwareBoardFeatureAri,\n  JiraSoftwareBoardIssueListAri,\n  JiraSoftwareCardAri,\n  JiraSoftwareCardColorAri,\n  JiraSoftwareCardLayoutAri,\n  JiraSoftwareCardParentAri,\n  JiraSoftwareColumnAri,\n  JiraSoftwareCustomFilterAri,\n  JiraSoftwareRoleAri,\n  JiraSoftwareSiteAri,\n  JiraSoftwareSwimlaneAri,\n  JiraSoftwareUserBoardConfigAri,\n  JiraSoftwareViewConfigAri,\n  JiraSprintAri,\n  JiraUserBroadcastMessageAri,\n  JiraVersionApproverAri,\n  JiraVersionAri,\n  JiraVulnerabilityAri,\n  JiraVulnerabilityHistoryAri,\n  JiraWorkflowAri,\n  JiraWorkflowSchemeAri,\n  JiraWorklogAri,\n  JiraWorkspaceAri,\n  LinkingPlatformDatasourceAri,\n  LoomSiteAri,\n  MakerSpaceGroupAri,\n  MapiRoleAri,\n  MarketingCustomerDomainAri,\n  MarketplaceTeamAri,\n  MeasurementEmailUuidAri,\n  MeasurementSiteUserAri,\n  MeasurementUserAri,\n  MediaFileAri,\n  MercuryCommentAri,\n  MercuryFocusAreaAri,\n  MercuryFocusAreaStatusUpdateAri,\n  MercuryProgramAri,\n  MercuryProgramStatusUpdateAri,\n  MercuryRoleAri,\n  MercurySiteAri,\n  MercuryWorkspaceAri,\n  MicrosoftChannelAri,\n  MicrosoftSharepointDocumentAri,\n  OauthClientAri,\n  OpsgenieAccountLoginAri,\n  OpsgenieAccountSettingsAri,\n  OpsgenieAlertAri,\n  OpsgenieAlertRecipientLinkAri,\n  OpsgenieApiRequestMetricAri,\n  OpsgenieCallRoutingAri,\n  OpsgenieCustomRoleAri,\n  OpsgenieDeploymentAri,\n  OpsgenieDeploymentServiceLinkAri,\n  OpsgenieEscalationAri,\n  OpsgenieEventAri,\n  OpsgenieIncidentAlertLinkAri,\n  OpsgenieIncidentAri,\n  OpsgenieIncidentStatusUpdateAri,\n  OpsgenieIncomingCallHistoryAri,\n  OpsgenieIntegrationAri,\n  OpsgenieNotificationAri,\n  OpsgenieRoleAri,\n  OpsgenieScheduleAri,\n  OpsgenieScheduleRotationAri,\n  OpsgenieSiteAri,\n  OpsgenieTeamAri,\n  OpsgenieTimelineAri,\n  OpsgenieWorkspaceAri,\n  OrgPolicyPolicyAri,\n  PapiApiAri,\n  PapiRoleAri,\n  PassionfruitUserAri,\n  PeopleDataCostCenterAri,\n  PeopleDataJobProfileAri,\n  PeopleDataPositionAri,\n  PeopleDataSupervisoryOrgAri,\n  PeopleDataWorkerAri,\n  PeoplePerftoolCalibrationAri,\n  PeoplePerftoolFeedbackAri,\n  PeoplePerftoolPerformanceAri,\n  PlatformClassificationTagAri,\n  PlatformIntegrationAri,\n  PlatformLifecycleResourceAri,\n  PlatformLifecycleResourcePackageAri,\n  PlatformLifecycleResourcePackageTypeAri,\n  PlatformOrgAri,\n  PlatformOrgUserAri,\n  PlatformSecureTunnelAri,\n  PlatformServicesStreamhubSchemaAri,\n  PlatformSiteAri,\n  PollinatorCheckAri,\n  PostOfficeMessageInstanceAri,\n  PostOfficeMessageTemplateAri,\n  ResourceOwner,\n  ResourceType,\n  RovoSiteAri,\n  RuntimeAuthClientRoleAri,\n  SearchEventAri,\n  SearchForwardDocumentAri,\n  SearchForwardDocumentSubscriptionAri,\n  SlackChannelAri,\n  SlackMessageAri,\n  StatuspageRoleAri,\n  StatuspageSiteAri,\n  SupportCustomerAri,\n  TeamsTeamAri,\n  TownsquareCommentAri,\n  TownsquareGoalAri,\n  TownsquareHelpPointerAri,\n  TownsquareLearningAri,\n  TownsquareProjectAri,\n  TownsquareQuestionAri,\n  TownsquareRoleAri,\n  TownsquareSiteAri,\n  TownsquareTagAri,\n  TownsquareWorkspaceAri,\n  TrelloAttachmentAri,\n  TrelloBoardAri,\n  TrelloCardAri,\n  TrelloEnterpriseAri,\n  TrelloListAri,\n  TrelloRoleAri,\n  TrelloSiteAri,\n  TrelloUserAri,\n  TrelloWorkspaceAri,\n  UnifiedHelpRoleAri,\n  UnifiedHelpSiteAri,\n  UnifiedHelpWorkspaceAri,\n  UnifiedPortableProfileLinkedAccountAri,\n  UnifiedPortableProfileParentAccountAri,\n  UnifiedPortableProfileUnifiedAccountAri,\n  UnifiedPortableProfileUnifiedProfileAri,\n  ValidationError,\n  VirtualAgentConfigurationAri,\n  VirtualAgentConversationAri,\n  VirtualAgentFlowEditorAri,\n  VirtualAgentIntentProjectionAri,\n  VirtualAgentIntentQuestionProjectionAri,\n  VirtualAgentIntentRuleProjectionAri,\n  VirtualAgentIntentTemplateAri,\n  WorkatoJobAri,\n  WorkatoRecipeAri,\n  WorkdayCostCenterAri,\n  WorkdayJobProfileAri,\n  WorkdayPositionAri,\n  WorkdayStaffAri,\n  WorkdaySupervisoryOrgAri,\n  WorkdayWorkerAri\n});\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n"],"names":["Object","defineProperty","exports","value","getInstallationAri","getEnvironmentAri","getAppAri","ari_1","require","appId","EcosystemAppAri","create","environmentId","EcosystemEnvironmentAri","installationId","EcosystemInstallationAri","ProxyRequestError","InvalidRemoteError","NeedsAuthenticationError","InvalidWorkspaceRequestedError","RequestProductNotAllowedError","ProductEndpointNotAllowedError","ExternalEndpointNotAllowedError","NotAllowedError","FetchError","HttpError","isExpectedError","isHostedCodeError","isForgePlatformError","PROXY_ERR","INVALID_REMOTE_ERR","NEEDS_AUTHENTICATION_ERR","FUNCTION_FETCH_ERR","REQUEST_EGRESS_ALLOWLIST_ERR","FUNCTION_ERR","err","includes","name","options","Error","status","constructor","message","super","cause","this","stack","undefined","failedURL","requestedProduct","invocationProduct","serviceKey","error","remoteKey","errorCode","getSandboxRuntimeAPI","getNodeRuntimeAPI","addMagicAgent","handleProxyResponseErrors","getForgeProxyError","createRemoteUrlWithPath","fetchRemote","__fetchProduct","node_fetch_1","__importStar","_1","runtime_1","polyfill_response_1","errors_1","async","wrapInMetrics","cb","metrics","__getRuntime","counter","tags","incr","timer","timing","measure","stop","args","path","init","url","remote","startsWith","productURL","defaultHeaders","getDefaultHeaders","headers","response","default","remoteUrl","authorization","provider","account","baseUrl","URL","hostname","searchParams","append","getDefaultRemote","externalAuthProvider","findExternalAuthProviderConfigOrThrow","remotes","length","key","externalAuth","find","externalAuthMetaData","service","get","errorReason","headersInit","Headers","has","lazyThrowNeedsAuthenticationError","passingScopes","String","scopes","agentOverride","agent","throwNotImplementedError","withProvider","accountsInfo","accounts","buildExternalAuthAccountMethods","outboundAuthAccountId","hasCredentials","every","scope","requestCredentials","getAccount","fetch","wrapWithRouteUnwrapper","map","authAccount","externalAccountId","id","rest","buildAccountModel","methods","buildExternalAuthAccountsInfo","defaultAccountInfo","listCredentials","listAccounts","_ref","asAccount","accountInfo","_ref2","requestJira","wrapRequestProduct","requestConfluence","requestBitbucket","asUser","requestGraph","wrapRequestGraph","requestConnectedData","wrapRequestConnectedData","asApp","api","wrapFetchApiMethods","transformResponse","safeUrl_1","requestGraphApi","query","variables","method","arguments","body","JSON","stringify","safeUrl","requireSafeUrl","replace","requestProduct","stringPath","isRoute","wrapFetch","remoteName","tokenId","withProviderFetch","fetchApi","invokeRemote","__importDefault","fetch_1","fetchOptions","set","forgeProxyError","handleResponseErrors","bindInvocationContext","getAppContext","runtime","global","__forge_runtime__","appVersion","environmentType","invocationId","moduleKey","license","appContext","appAri","environmentAri","installationAri","fn","success","e","toString","bind","authorize","auth_1","__1","accountId","process","__CURRENT_USER_ACCOUNT_ID","aaid","authorizeConfluenceWithFetch","opts","assumeTrustedRoute","json","authorizeJiraWithFetch","routeFromAbsolute","route","SortOrder","FilterConditions","WhereConditions","createRequestStargateAsApp","__requestAtlassianAsUser","__requestAtlassianAsApp","webTrigger","storage","privacy","storage_1","authorization_1","enumerable","privacy_1","webTrigger_1","fetch_and_storage_1","remote_1","fetchAPI","getFetchAPI","getStorageInstanceWithQuery","GlobalStorage","getContextAri","getMetrics","API","reportPersonalData","createReportPersonalData","storage_2","LIMIT","requestAtlassian","fetchUpdates","Promise","resolve","request","slice","then","resp","reject","all","first","second","concat","getRequestStargate","sandboxApi","__requestAtlassian","__getAppAri","contextAri","sandboxAPI","keys","ReadonlyRoute","value_","_","x","absolutePath","absoluteURL","pathname","search","DOUBLE_DOT","DIRECTORY_PATH","ENDS_PATH","containsOneOf","needles","haystack","some","needle","escapeParameter","parameter","mode","encodeURIComponent","URLSearchParams","template","result","i","templateFragment","proxyGetWebTriggerURL","webTriggerModuleKey","forceCreate","input","envId","triggerKey","contextId","ok","statusText","responseBody","data","createWebTriggerUrl","proxyDeleteWebTriggerURL","callDelete","webTriggerUrlId","deleteWebTriggerUrl","urlIds","getUrlIds","webTriggerUrl","urlId","proxyGetWebTriggerUrlIds","webTriggerUrlsByAppContext","filter","webTriggerResult","getUrl","deleteUrl","createApiMethods","methodToPermissionMap","permissionCheckFactory","apiMethodEntries","entries","methodName","permission","reduce","acc","tslib_1","api_1","permissions_1","getPermissionsCheckFactory","contentId","res","subject","type","identifier","operation","checkConfluencePermissions","Boolean","hasPermission","onConfluenceContent","canRead","canUpdate","canDelete","confluence_1","jira_1","checkJiraPermissions","projectPermissions","hasPermissionsForEntities","entities","_a","allowedEntities","permissionResponse","a","b","Array","from","sort","arrayEquals","getPermissionCheckFactory","permissions","toArray","isArray","onJira","projectPermissionsInput","onJiraProject","projects","API_PROJECTS_PERMISSIONS_MAP","onJiraIssue","issues","API_ISSUES_PERMISSIONS_MAP","canAssign","canCreate","canEdit","canMove","canAddComments","canEditAllComments","canDeleteAllComments","canCreateAttachments","canDeleteAllAttachments","canAssignIssues","canCreateIssues","canEditIssues","canMoveIssues","canDeleteIssues","getCallBridge","bridge","window","__bridge","callBridge","BridgeAPIError","events","emit","event","payload","on","callback","__exportStar","productFetchApi","blobParser_1","parseRequest","isFormData","FormData","requestBody","parsed","form","fileName","fileType","blobToBase64","parseFormData","req","Request","fromEntries","text","isMultipartFormData","product","restPath","requestHeaders","fetchPayload","fetchRequestInit","isAttachment","base64ToBlob","Response","bridge_1","showFlag","close","flag_1","createTranslationFunction","getTranslations","resetTranslationsCache","i18n_1","view_1","frontendResourcesAccessor","getI18nInfoConfig","I18N_BUNDLE_FOLDER_NAME","I18N_INFO_FILE_NAME","config","getTranslationResource","locale","translationsGetter","TranslationsGetter","reset","fallback","targetLocale","view","getContext","translator","Translator","i18nKey","defaultValue","_b","translate","i18n","getFrameId","utils_1","withRateLimiter","values","val","validatePayload","header","join","invoke","_invoke","functionKey","Modal","noop","resource","onClose","size","context","closeOnEscape","closeOnOverlayClick","open","router","navigate","reload","b64string","mimeType","base64Data","split","byteCharacters","atob","byteNumbers","charCodeAt","byteArray","Uint8Array","Blob","blob","reader","FileReader","onloadend","onerror","readAsDataURL","wrappedFn","maxOps","intervalInMs","exceededErrorMessage","start","Date","now","numOps","changeWindowTitle","title","createHistory","history","listen","location","frame","internal_1","events_1","frameEventKey","eventKey","frameId","onPropsUpdate","sub","handler","loaded","unsubscribe","ensureLocale","refresh","submit","theme","enable","submit_1","close_1","refresh_1","createHistory_1","getContext_1","changeWindowTitle_1","theme_1","frame_1","FORGE_SUPPORTED_LOCALE_CODES","constants_1","forgeSupportedLocaleCodesSet","Set","localeFallbacks","rawLocale","getI18nSupportedModuleEntries","extractI18nPropertiesFromModules","extractI18nKeysFromModules","getTranslationValue","translationValueGetter_1","moduleI18nHelper_1","getI18nKeysFromObject","obj","visited","visit","i18nPath","isObject","add","flatMap","propKey","propValue","currentPath","isI18nValue","propertyPath","item","modules","moduleEntries","isConnectModuleKey","isCoreModuleKey","moduleEntry","i18nKeys","i18nKeysForEntryValue","moduleI18nProperties","i18nObj","push","moduleName","getTranslationValueFromContent","get_1","translationLookup","translation","translationContent","translationValue","keyTokens","resourcesAccessor","i18nInfoConfig","translationResources","Map","translationResource","locales","translations","getLocaleLookupOrder","getTranslationsByLocaleLookupOrder","lookupOrder","clear","fallbackLocales","pushIfNotExists","array","localeLookupOrderedTranslations","cache","condition","beginsWith","between","isGreaterThan","isGreaterThanEqualTo","isLessThan","isLessThanEqualTo","equalsTo","isIn","isNotEqualTo","contains","doesNotContain","notEqualsTo","exists","doesNotExist","EntityStorageBuilder","storage_builder_1","CustomEntityBuilder","CustomEntityIndexBuilder","CustomEntityQueryBuilder","globalStorage","queryOptions","clone","overrides","getPrototypeOf","where","range","cursor","limit","getOne","results","getMany","entityName","indexName","filterOperator","filters","listCustomEntities","CustomEntityAndFilterQueryBuilder","andFilter","field","newQueryOptions","property","CustomEntityOrFilterQueryBuilder","orFilter","CustomEntityFilterQueryBuilder","index","indexOptions","indexProperties","entity","query_api_1","entityKey","getEntity","setEntity","delete","deleteEntity","APIError","getErrorMessage","getErrorMessageFromCode","code","statusCode","forStatus","forErrorCode","forUnexpected","gql_queries_1","assertNoErrors","errors","extensions","errorType","getResponseBody","responseText","parse","getAppContextAri","apiClient","endpoint","doGetAppContextAri","getInternal","getSecret","list","IS_CLEANUP_FUNCTION","UntypedQueries","listQueryForCleanup","listQuery","wrapInMetric","edges","appStoredEntitiesForCleanup","appStoredEntities","nextCursor","node","CustomEntityQueries","appStoredCustomEntities","mutation","setSecret","deleteSecret","getEntityInternal","encrypted","appStoredEntity","appStoredCustomEntity","buildRequest","namespace","mutationMethod","store","static","partition","entity_storage_1","adapter","DefaultQueryBuilder","global_storage_1","conditions_1","conditions_2","entity_storage_2","query_interfaces_1","query_api_2","mod","__defProp","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","src_exports","__export","target","AnalyticsUserAri","AnyAri","ApprovalDeskDecisionTableAri","ApprovalDeskRoleAri","ApprovalDeskWorkflowAri","ApprovalDeskWorkspaceAri","Ari","Arm","Ati","AtlashubIdAri","AtlashubSiteAri","AutomationRoleAri","AutomationRuleAri","AvocadoAnswerAri","AvocadoQuestionAri","AvocadoRoleAri","AvocadoSiteAri","AvocadoUserAri","AvpDashboardAri","AvpDatasourceAri","AvpRoleAri","AvpSiteAri","BeaconAlertAri","BeaconCustomDetectionAri","BeaconDetectionAri","BeaconDetectionSettingAri","BeaconRoleAri","BeaconSiteAri","BeaconSubscriptionAri","BeaconWorkspaceAri","BitbucketAppAri","BitbucketOauthConsumerAri","BitbucketProjectAri","BitbucketPullrequestAri","BitbucketRepositoryAri","BitbucketRepositoryTransferAri","BitbucketSiteAri","BitbucketTeamAri","BitbucketWorkspaceAri","BrieRoleAri","BrieSiteAri","CanvasBoardAri","CanvasDatabaseAri","CanvasSiteAri","CanvasWorkspaceAri","CmdbAttributeAri","CmdbImportConfigurationAri","CmdbObjectAri","CmdbRoleAri","CmdbSchemaAri","CmdbTypeAri","CmdbWorkspaceAri","CommerceCatalogAccountAri","CommerceChangeAri","CommerceEntitlementAri","CommerceEntitlementTemplateAri","CommerceInitiativeAri","CommerceInvoiceGroupAri","CommerceOfferingAri","CommerceOfferingRelationshipTemplateAri","CommerceOrderAri","CommercePaymentMethodAri","CommercePricingPlanAri","CommerceProductAri","CommercePromotionAri","CommerceQuoteAri","CommerceRoleAri","CommerceShipToPartyAri","CommerceTransactionAccountAri","CommerceWorkbenchResourceAri","CompassAssistantAnswerAri","CompassComponentAri","CompassComponentLabelAri","CompassComponentLinkAri","CompassCustomFieldDefinitionAri","CompassDocumentAri","CompassDocumentationCategoryAri","CompassEventSourceAri","CompassIncomingWebhookAri","CompassMetricDefinitionAri","CompassMetricSourceAri","CompassRoleAri","CompassScorecardAri","CompassSiteAri","CompassUserDefinedParameterAri","CompassWebhookAri","CompassWorkspaceAri","ConfluenceAdminAnnouncementBannerAri","ConfluenceAttachmentAri","ConfluenceBlogpostAri","ConfluenceCommentAri","ConfluenceContentAri","ConfluenceDatabaseAri","ConfluenceEmbedAri","ConfluenceEventAri","ConfluenceFolderAri","ConfluenceLongRunningTaskAri","ConfluenceNoteAri","ConfluencePageAri","ConfluencePublicLinkAri","ConfluenceRoleAri","ConfluenceSiteAri","ConfluenceSpaceAri","ConfluenceTaskAri","ConfluenceTeamCalendarAri","ConfluenceUserPropertyAri","ConfluenceWhiteboardAri","ConfluenceWorkspaceAri","ConnectionRegistryLinkAri","ConversationalHelpConversationAri","ConversationalHelpConversationMessageAri","DataLakeLakeConnectionAri","DevopsContainerAri","DevopsNamespaceAri","DevopsProviderAri","DevopsRelationshipAri","DevopsToolAri","EcosystemAppEnvironmentVersionAri","EcosystemConnectAppAri","EcosystemExtensionAri","EcosystemExtensionGroupAri","ElementsCustomEmojiMetadataAri","ElementsWorkspaceAri","ExusExternalUserAri","FigmaFileAri","GoogleDocumentAri","GoogleFormAri","GooglePresentationAri","GoogleSpreadsheetAri","GraphBranchAri","GraphBranchHistoryAri","GraphBuildAri","GraphBuildHistoryAri","GraphCommitAri","GraphContentAri","GraphDeploymentAri","GraphDeploymentHistoryAri","GraphDesignAri","GraphDesignHistoryAri","GraphDevopsComponentAri","GraphDocumentAri","GraphDocumentHistoryAri","GraphEmployeeAri","GraphEmployeeHistoryAri","GraphFeatureFlagAri","GraphFeatureFlagHistoryAri","GraphIncidentAri","GraphIncidentHistoryAri","GraphJiraProjectAndDevopsToolRelationshipAri","GraphJiraProjectAndDocumentationSpaceRelationshipAri","GraphJiraProjectAndOperationsTeamRelationshipAri","GraphJiraProjectAndVcsRepositoryRelationshipAri","GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAri","GraphOperationsWorkspaceAri","GraphPostIncidentReviewAri","GraphPostIncidentReviewHistoryAri","GraphProjectAri","GraphPullRequestAri","GraphPullRequestHistoryAri","GraphRemoteLinkAri","GraphRemoteLinkHistoryAri","GraphRepositoryAri","GraphSecurityContainerAri","GraphSecurityWorkspaceAri","GraphServiceAndJiraProjectRelationshipAri","GraphServiceAndOperationsTeamRelationshipAri","GraphServiceAndVcsRepositoryRelationshipAri","GraphServiceAri","GraphServiceRelationshipAri","GraphVideoAri","GraphVideoHistoryAri","GraphVulnerabilityAri","GraphVulnerabilityHistoryAri","GraphWorkspaceAri","HelpArticleAri","HelpChannelAri","HelpHelpCenterAri","HelpHelpDeskAri","HelpLayoutAri","HelpPortalAri","HelpRequestFormAri","IdentityAppAri","IdentityAuthPolicyAri","IdentityCustomerDirectoryAri","IdentityCustomerOrganizationAri","IdentityDirectoryAri","IdentityDomainAri","IdentityGroupAri","IdentityOauthClientAri","IdentityRoleAri","IdentitySiteAri","IdentityTeamAri","IdentityTeamMemberAri","IdentityThirdPartyGroupAri","IdentityThirdPartyUserAri","IdentityUserAri","IdentityUserGrantAri","IdentityUserbaseAri","JiraAlignEpicAri","JiraAlignInstanceAri","JiraAnnouncementBannerAri","JiraAvailableFieldsAri","JiraBranchAri","JiraBranchHistoryAri","JiraBuildAri","JiraBuildHistoryAri","JiraBulkOperationTaskAri","JiraCommentAri","JiraCommitAri","JiraComponentAri","JiraConnectAppAri","JiraCoreRoleAri","JiraCoreSiteAri","JiraDashboardAri","JiraDeploymentAri","JiraDeploymentHistoryAri","JiraDesignAri","JiraDesignHistoryAri","JiraDevopsComponentAri","JiraDocumentAri","JiraDocumentHistoryAri","JiraEntitlementAri","JiraEntityPropertyAri","JiraFavouriteAri","JiraFeatureFlagAri","JiraFeatureFlagHistoryAri","JiraFilterAri","JiraFilterEmailSubscriptionAri","JiraIncidentAri","JiraIncidentHistoryAri","JiraIssueAri","JiraIssueAttachmentAri","JiraIssueCommentAri","JiraIssueFieldMetadataAri","JiraIssueFieldOptionAri","JiraIssueHistoryAri","JiraIssueLinkAri","JiraIssueLinkTypeAri","JiraIssueRemoteLinkAri","JiraIssueSearchViewAri","JiraIssueStatusAri","JiraIssueTypeAri","JiraIssueTypeSchemeAri","JiraIssueTypeSchemeMappingAri","JiraIssueWorklogAri","JiraIssuefieldvalueAri","JiraNavigationConfigAri","JiraNavigationItemAri","JiraNotificationTypeAri","JiraNotificationTypeSchemeAri","JiraNotificationUserPreferenceAri","JiraOperationsWorkspaceAri","JiraPermissionSchemeAri","JiraPlanAri","JiraPlanCrossProjectScenarioVersionAri","JiraPlanCrossProjectVersionAri","JiraPlanScenarioAri","JiraPlanScenarioIssueAri","JiraPlanScenarioIssueFieldAri","JiraPlanScenarioVersionAri","JiraPostIncidentReviewAri","JiraPostIncidentReviewHistoryAri","JiraPostIncidentReviewLinkAri","JiraPriorityAri","JiraProductAri","JiraProjectAri","JiraProjectCategoryAri","JiraProjectFeatureAri","JiraProjectOverviewAri","JiraProjectRoleActorAri","JiraProjectShortcutAri","JiraProjectTypeAri","JiraPullRequestAri","JiraPullRequestHistoryAri","JiraRemoteLinkAri","JiraRemoteLinkHistoryAri","JiraRepositoryAri","JiraResolutionAri","JiraResourceUsageMetricAri","JiraResourceUsageRecommendationAri","JiraRoleAri","JiraScreenTabAri","JiraSecurityContainerAri","JiraSecurityLevelAri","JiraSecurityWorkspaceAri","JiraServicedeskApprovalAri","JiraServicedeskCalendarEventAri","JiraServicedeskCannedResponseAri","JiraServicedeskOrganizationAri","JiraServicedeskQueueAri","JiraServicedeskRequestTypeAri","JiraServicedeskRoleAri","JiraServicedeskSiteAri","JiraServicedeskSlaAri","JiraSiteAri","JiraSoftwareBoardAri","JiraSoftwareBoardFeatureAri","JiraSoftwareBoardIssueListAri","JiraSoftwareCardAri","JiraSoftwareCardColorAri","JiraSoftwareCardLayoutAri","JiraSoftwareCardParentAri","JiraSoftwareColumnAri","JiraSoftwareCustomFilterAri","JiraSoftwareRoleAri","JiraSoftwareSiteAri","JiraSoftwareSwimlaneAri","JiraSoftwareUserBoardConfigAri","JiraSoftwareViewConfigAri","JiraSprintAri","JiraUserBroadcastMessageAri","JiraVersionApproverAri","JiraVersionAri","JiraVulnerabilityAri","JiraVulnerabilityHistoryAri","JiraWorkflowAri","JiraWorkflowSchemeAri","JiraWorklogAri","JiraWorkspaceAri","LinkingPlatformDatasourceAri","LoomSiteAri","MakerSpaceGroupAri","MapiRoleAri","MarketingCustomerDomainAri","MarketplaceTeamAri","MeasurementEmailUuidAri","MeasurementSiteUserAri","MeasurementUserAri","MediaFileAri","MercuryCommentAri","MercuryFocusAreaAri","MercuryFocusAreaStatusUpdateAri","MercuryProgramAri","MercuryProgramStatusUpdateAri","MercuryRoleAri","MercurySiteAri","MercuryWorkspaceAri","MicrosoftChannelAri","MicrosoftSharepointDocumentAri","OauthClientAri","OpsgenieAccountLoginAri","OpsgenieAccountSettingsAri","OpsgenieAlertAri","OpsgenieAlertRecipientLinkAri","OpsgenieApiRequestMetricAri","OpsgenieCallRoutingAri","OpsgenieCustomRoleAri","OpsgenieDeploymentAri","OpsgenieDeploymentServiceLinkAri","OpsgenieEscalationAri","OpsgenieEventAri","OpsgenieIncidentAlertLinkAri","OpsgenieIncidentAri","OpsgenieIncidentStatusUpdateAri","OpsgenieIncomingCallHistoryAri","OpsgenieIntegrationAri","OpsgenieNotificationAri","OpsgenieRoleAri","OpsgenieScheduleAri","OpsgenieScheduleRotationAri","OpsgenieSiteAri","OpsgenieTeamAri","OpsgenieTimelineAri","OpsgenieWorkspaceAri","OrgPolicyPolicyAri","PapiApiAri","PapiRoleAri","PassionfruitUserAri","PeopleDataCostCenterAri","PeopleDataJobProfileAri","PeopleDataPositionAri","PeopleDataSupervisoryOrgAri","PeopleDataWorkerAri","PeoplePerftoolCalibrationAri","PeoplePerftoolFeedbackAri","PeoplePerftoolPerformanceAri","PlatformClassificationTagAri","PlatformIntegrationAri","PlatformLifecycleResourceAri","PlatformLifecycleResourcePackageAri","PlatformLifecycleResourcePackageTypeAri","PlatformOrgAri","PlatformOrgUserAri","PlatformSecureTunnelAri","PlatformServicesStreamhubSchemaAri","PlatformSiteAri","PollinatorCheckAri","PostOfficeMessageInstanceAri","PostOfficeMessageTemplateAri","ResourceOwner","ResourceOwnerEnum","ResourceType","ResourceTypeEnum","RovoSiteAri","RuntimeAuthClientRoleAri","SearchEventAri","SearchForwardDocumentAri","SearchForwardDocumentSubscriptionAri","SlackChannelAri","SlackMessageAri","StatuspageRoleAri","StatuspageSiteAri","SupportCustomerAri","TeamsTeamAri","TownsquareCommentAri","TownsquareGoalAri","TownsquareHelpPointerAri","TownsquareLearningAri","TownsquareProjectAri","TownsquareQuestionAri","TownsquareRoleAri","TownsquareSiteAri","TownsquareTagAri","TownsquareWorkspaceAri","TrelloAttachmentAri","TrelloBoardAri","TrelloCardAri","TrelloEnterpriseAri","TrelloListAri","TrelloRoleAri","TrelloSiteAri","TrelloUserAri","TrelloWorkspaceAri","UnifiedHelpRoleAri","UnifiedHelpSiteAri","UnifiedHelpWorkspaceAri","UnifiedPortableProfileLinkedAccountAri","UnifiedPortableProfileParentAccountAri","UnifiedPortableProfileUnifiedAccountAri","UnifiedPortableProfileUnifiedProfileAri","ValidationError","VirtualAgentConfigurationAri","VirtualAgentConversationAri","VirtualAgentFlowEditorAri","VirtualAgentIntentProjectionAri","VirtualAgentIntentQuestionProjectionAri","VirtualAgentIntentRuleProjectionAri","VirtualAgentIntentTemplateAri","WorkatoJobAri","WorkatoRecipeAri","WorkdayCostCenterAri","WorkdayJobProfileAri","WorkdayPositionAri","WorkdayStaffAri","WorkdaySupervisoryOrgAri","WorkdayWorkerAri","module","__copyProps","to","except","desc","call","validatePlatformQualifier","qualifier","validateAtiQualifier","validateResourceIdSegments","resourceIdSegmentValues","resourceIdSegmentFormats","forEach","resourceIdKey","resourceIdValue","format","RegExp","formatWithCarets","source","match","validateResourceId","validateResourceOwner","owner","expectedResourceOwner","validateResourceType","expectedResourceType","BaseParser","getIdentifierSegments","inputStr","numberOfSegmentsRequired","allSegments","NUMBER_OF_BASE_SEGMENTS","AriParser","fromString","maybeAri","ariProperties","segments","platformQualifier","resourceOwner","cloudId","resourceTypeAndId","resourceType","resourceIdSegments","maybeAriDerivedProperties","resourceId","resourceIdSlug","ariSegmentValuesFromSlug","fromOpts","maybeAriOpts","validateAriQualifier","validateCloudId","slug","incomingSegments","expectedKeys","regexpResult","exec","expectedKey","groups","AtiParser","atiOpts","maybeAtiOpts","_Ati","_platformQualifier","_resourceOwner","_resourceType","maybeAti","toJSON","toOpts","_ati","_cloudId","_resourceId","ati","equals","other","_AnyAri","ariOpts","ariStaticOpts","ariOptsWithDefaults","validatedOpts","check","asAnyAri","validateResourceMatcher","maybeMatcher","validateMatcher","ArmParser","maybeArm","resourceOwnerMatcher","cloudIdMatcher","resourceTypeAndIdMatchers","resourceTypeMatcher","resourceIdMatcher","maybeArmOpts","validateArmQualifier","_Arm","armOpts","_cloudIdMatcher","_resourceOwnerMatcher","_resourceTypeMatcher","_resourceIdMatcher","ari","test","ResourceOwnerEnum2","Analytics","ApprovalDesk","Atlashub","Automation","Avocado","Avp","Beacon","Bitbucket","Brie","Canvas","Cmdb","Commerce","Compass","Confluence","ConnectionRegistry","ConversationalHelp","DataLake","Devops","Ecosystem","Elements","ExusExternal","Figma","Google","Graph","Help","Identity","Jira","JiraAlign","JiraCore","JiraServicedesk","JiraSoftware","LinkingPlatform","Loom","MakerSpace","Mapi","Marketing","Marketplace","Measurement","Media","Mercury","Microsoft","Oauth","Opsgenie","OrgPolicy","Papi","Passionfruit","PeopleData","PeoplePerftool","Platform","PlatformServices","Pollinator","PostOffice","Rovo","RuntimeAuthClient","Search","Slack","Statuspage","Support","Teams","Townsquare","Trello","UnifiedHelp","UnifiedPortableProfile","VirtualAgent","Workato","Workday","ResourceTypeEnum2","AccountLogin","AccountSettings","AdminAnnouncementBanner","Alert","AlertRecipientLink","AnnouncementBanner","Answer","Api","ApiRequestMetric","App","AppEnvironmentVersion","Approval","Article","AssistantAnswer","Attachment","Attribute","AuthPolicy","AvailableFields","Blogpost","Board","BoardFeature","BoardIssueList","Branch","BranchHistory","Build","BuildHistory","BulkOperationTask","CalendarEvent","Calibration","CallRouting","CannedResponse","Card","CardColor","CardLayout","CardParent","CatalogAccount","Change","Channel","Check","ClassificationTag","Client","Column","Comment","Commit","Component","ComponentLabel","ComponentLink","Configuration","ConnectApp","Container","Content","Conversation","ConversationMessage","CostCenter","CustomDetection","CustomEmojiMetadata","Customer","CustomerDirectory","CustomerDomain","CustomerOrganization","CustomFieldDefinition","CustomFilter","CustomRole","Dashboard","Database","Datasource","DecisionTable","Deployment","DeploymentHistory","DeploymentServiceLink","Design","DesignHistory","Detection","DetectionSetting","DevopsComponent","Directory","Document","DocumentationCategory","DocumentHistory","Domain","EmailUuid","Embed","Employee","EmployeeHistory","Enterprise","Entitlement","EntitlementTemplate","EntityProperty","Environment","Epic","Escalation","Event","EventSource","Extension","ExtensionGroup","Favourite","FeatureFlag","FeatureFlagHistory","Feedback","File","Filter","FilterEmailSubscription","FlowEditor","FocusArea","FocusAreaStatusUpdate","Folder","Form","ForwardDocument","ForwardDocumentSubscription","Goal","Group","HelpCenter","HelpDesk","HelpPointer","Id","ImportConfiguration","Incident","IncidentAlertLink","IncidentHistory","IncidentStatusUpdate","IncomingCallHistory","IncomingWebhook","Initiative","Installation","Instance","Integration","IntentProjection","IntentQuestionProjection","IntentRuleProjection","IntentTemplate","InvoiceGroup","Issue","IssueAttachment","IssueComment","IssueFieldMetadata","IssueFieldOption","Issuefieldvalue","IssueHistory","IssueLink","IssueLinkType","IssueRemoteLink","IssueSearchView","IssueStatus","IssueType","IssueTypeScheme","IssueTypeSchemeMapping","IssueWorklog","JiraProjectAndDevopsToolRelationship","JiraProjectAndDocumentationSpaceRelationship","JiraProjectAndOperationsTeamRelationship","JiraProjectAndVcsRepositoryRelationship","JiraProjectAndVcsRepositoryRelationshipTempMigration","Job","JobProfile","LakeConnection","Layout","Learning","LifecycleResource","LifecycleResourcePackage","LifecycleResourcePackageType","Link","LinkedAccount","List","LongRunningTask","Message","MessageInstance","MessageTemplate","MetricDefinition","MetricSource","Namespace","NavigationConfig","NavigationItem","Note","Notification","NotificationType","NotificationTypeScheme","NotificationUserPreference","OauthClient","OauthConsumer","Offering","OfferingRelationshipTemplate","OperationsWorkspace","Order","Org","Organization","OrgUser","Page","ParentAccount","PaymentMethod","Performance","PermissionScheme","Plan","PlanCrossProjectScenarioVersion","PlanCrossProjectVersion","PlanScenario","PlanScenarioIssue","PlanScenarioIssueField","PlanScenarioVersion","Policy","Portal","Position","PostIncidentReview","PostIncidentReviewHistory","PostIncidentReviewLink","Presentation","PricingPlan","Priority","Product","Program","ProgramStatusUpdate","Project","ProjectCategory","ProjectFeature","ProjectOverview","ProjectRoleActor","ProjectShortcut","ProjectType","Promotion","Provider","PublicLink","Pullrequest","PullRequest","PullRequestHistory","Question","Queue","Quote","Recipe","Relationship","RemoteLink","RemoteLinkHistory","Repository","RepositoryTransfer","RequestForm","RequestType","Resolution","ResourceUsageMetric","ResourceUsageRecommendation","Role","Rule","Schedule","ScheduleRotation","Schema","Scorecard","ScreenTab","SecureTunnel","SecurityContainer","SecurityLevel","SecurityWorkspace","Service","ServiceAndJiraProjectRelationship","ServiceAndOperationsTeamRelationship","ServiceAndVcsRepositoryRelationship","ServiceRelationship","SharepointDocument","ShipToParty","Site","SiteUser","Sla","Space","Spreadsheet","Sprint","Staff","StreamhubSchema","Subscription","SupervisoryOrg","Swimlane","Tag","Task","Team","TeamCalendar","TeamMember","ThirdPartyGroup","ThirdPartyUser","Timeline","Tool","TransactionAccount","Type","UnifiedAccount","UnifiedProfile","User","Userbase","UserBoardConfig","UserBroadcastMessage","UserDefinedParameter","UserGrant","UserProperty","Version","VersionApprover","Video","VideoHistory","ViewConfig","Vulnerability","VulnerabilityHistory","Webhook","Whiteboard","WorkbenchResource","Worker","Workflow","WorkflowScheme","Worklog","Workspace","RegisteredAri","analyticsUserAriStaticOpts","anonUserId","_AnalyticsUserAri","_anonUserId","derivedOpts","getVariables","approvalDeskDecisionTableAriStaticOpts","workspaceId","workflowId","decisionTableId","_ApprovalDeskDecisionTableAri","_workspaceId","_workflowId","_decisionTableId","approvalDeskRoleAriStaticOpts","roleId","_ApprovalDeskRoleAri","_scope","_roleId","approvalDeskWorkflowAriStaticOpts","_ApprovalDeskWorkflowAri","approvalDeskWorkspaceAriStaticOpts","_ApprovalDeskWorkspaceAri","atlashubIdAriStaticOpts","_AtlashubIdAri","_id","atlashubSiteAriStaticOpts","siteId","_AtlashubSiteAri","_siteId","automationRoleAriStaticOpts","_AutomationRoleAri","automationRuleAriStaticOpts","ruleId","_AutomationRuleAri","_ruleId","avocadoAnswerAriStaticOpts","answerId","_AvocadoAnswerAri","_answerId","avocadoQuestionAriStaticOpts","questionId","_AvocadoQuestionAri","_questionId","avocadoRoleAriStaticOpts","roleType","_AvocadoRoleAri","_roleType","avocadoSiteAriStaticOpts","_AvocadoSiteAri","avocadoUserAriStaticOpts","userId","_AvocadoUserAri","_userId","avpDashboardAriStaticOpts","activationId","dashboardId","_AvpDashboardAri","_activationId","_dashboardId","avpDatasourceAriStaticOpts","datasourceId","_AvpDatasourceAri","_datasourceId","avpRoleAriStaticOpts","_AvpRoleAri","avpSiteAriStaticOpts","_AvpSiteAri","beaconAlertAriStaticOpts","alertId","_BeaconAlertAri","_alertId","beaconCustomDetectionAriStaticOpts","customDetectionId","_BeaconCustomDetectionAri","_customDetectionId","beaconDetectionAriStaticOpts","detectionId","_BeaconDetectionAri","_detectionId","beaconDetectionSettingAriStaticOpts","detectionType","settingId","_BeaconDetectionSettingAri","_detectionType","_settingId","beaconRoleAriStaticOpts","_BeaconRoleAri","beaconSiteAriStaticOpts","_BeaconSiteAri","beaconSubscriptionAriStaticOpts","subscriptionId","_BeaconSubscriptionAri","_subscriptionId","beaconWorkspaceAriStaticOpts","_BeaconWorkspaceAri","bitbucketAppAriStaticOpts","_BitbucketAppAri","_appId","bitbucketOauthConsumerAriStaticOpts","clientId","_BitbucketOauthConsumerAri","_clientId","bitbucketProjectAriStaticOpts","projectId","_BitbucketProjectAri","_projectId","bitbucketPullrequestAriStaticOpts","pullRequestId","_BitbucketPullrequestAri","_pullRequestId","bitbucketRepositoryAriStaticOpts","repositoryId","_BitbucketRepositoryAri","_repositoryId","bitbucketRepositoryTransferAriStaticOpts","transferId","_BitbucketRepositoryTransferAri","_transferId","bitbucketSiteAriStaticOpts","_BitbucketSiteAri","bitbucketTeamAriStaticOpts","teamId","_BitbucketTeamAri","_teamId","bitbucketWorkspaceAriStaticOpts","_BitbucketWorkspaceAri","brieRoleAriStaticOpts","roleTypeId","_BrieRoleAri","_roleTypeId","brieSiteAriStaticOpts","_BrieSiteAri","canvasBoardAriStaticOpts","boardId","_CanvasBoardAri","_boardId","canvasDatabaseAriStaticOpts","databaseId","_CanvasDatabaseAri","_databaseId","canvasSiteAriStaticOpts","_CanvasSiteAri","canvasWorkspaceAriStaticOpts","_CanvasWorkspaceAri","cmdbAttributeAriStaticOpts","attributeId","_CmdbAttributeAri","_attributeId","cmdbImportConfigurationAriStaticOpts","importConfigId","_CmdbImportConfigurationAri","_importConfigId","cmdbObjectAriStaticOpts","objectId","_CmdbObjectAri","_objectId","cmdbRoleAriStaticOpts","roleGroup","_CmdbRoleAri","_roleGroup","cmdbSchemaAriStaticOpts","schemaId","_CmdbSchemaAri","_schemaId","cmdbTypeAriStaticOpts","typeId","_CmdbTypeAri","_typeId","cmdbWorkspaceAriStaticOpts","_CmdbWorkspaceAri","commerceCatalogAccountAriStaticOpts","catalogAccountId","_CommerceCatalogAccountAri","_catalogAccountId","commerceChangeAriStaticOpts","changeUuid","_CommerceChangeAri","_changeUuid","commerceEntitlementAriStaticOpts","entitlementId","_CommerceEntitlementAri","_entitlementId","commerceEntitlementTemplateAriStaticOpts","entitlementTemplateId","_CommerceEntitlementTemplateAri","_entitlementTemplateId","commerceInitiativeAriStaticOpts","initiativeUuid","_CommerceInitiativeAri","_initiativeUuid","commerceInvoiceGroupAriStaticOpts","invoiceGroupId","_CommerceInvoiceGroupAri","_txaId","_invoiceGroupId","txaId","commerceOfferingAriStaticOpts","offeringId","_CommerceOfferingAri","_offeringId","commerceOfferingRelationshipTemplateAriStaticOpts","offeringRelationshipTemplateId","_CommerceOfferingRelationshipTemplateAri","_offeringRelationshipTemplateId","commerceOrderAriStaticOpts","orderId","_CommerceOrderAri","_orderId","commercePaymentMethodAriStaticOpts","paymentMethodId","_CommercePaymentMethodAri","_paymentMethodId","commercePricingPlanAriStaticOpts","pricingPlanId","_CommercePricingPlanAri","_pricingPlanId","commerceProductAriStaticOpts","productId","_CommerceProductAri","_productId","commercePromotionAriStaticOpts","promotionId","_CommercePromotionAri","_promotionId","commerceQuoteAriStaticOpts","quoteId","_CommerceQuoteAri","_quoteId","commerceRoleAriStaticOpts","_CommerceRoleAri","commerceShipToPartyAriStaticOpts","shipToPartyId","_CommerceShipToPartyAri","_shipToPartyId","commerceTransactionAccountAriStaticOpts","_CommerceTransactionAccountAri","commerceWorkbenchResourceAriStaticOpts","resourceName","_CommerceWorkbenchResourceAri","_resourceName","compassAssistantAnswerAriStaticOpts","_CompassAssistantAnswerAri","compassComponentAriStaticOpts","componentId","_CompassComponentAri","_componentId","compassComponentLabelAriStaticOpts","labelId","_CompassComponentLabelAri","_labelId","compassComponentLinkAriStaticOpts","componentLinkId","_CompassComponentLinkAri","_componentLinkId","compassCustomFieldDefinitionAriStaticOpts","definitionId","_CompassCustomFieldDefinitionAri","_definitionId","compassDocumentAriStaticOpts","documentId","_CompassDocumentAri","_documentId","compassDocumentationCategoryAriStaticOpts","documentationCategoryId","_CompassDocumentationCategoryAri","_documentationCategoryId","compassEventSourceAriStaticOpts","eventSourceId","_CompassEventSourceAri","_eventSourceId","compassIncomingWebhookAriStaticOpts","incomingWebhookId","_CompassIncomingWebhookAri","_incomingWebhookId","compassMetricDefinitionAriStaticOpts","containerId","_CompassMetricDefinitionAri","_optionalSiteId","_containerId","optionalSiteId","compassMetricSourceAriStaticOpts","metricSourceId","_CompassMetricSourceAri","_metricSourceId","compassRoleAriStaticOpts","_CompassRoleAri","compassScorecardAriStaticOpts","scorecardId","_CompassScorecardAri","_scorecardId","compassSiteAriStaticOpts","_CompassSiteAri","compassUserDefinedParameterAriStaticOpts","userDefinedParameterId","_CompassUserDefinedParameterAri","_userDefinedParameterId","compassWebhookAriStaticOpts","webhookId","_CompassWebhookAri","_webhookId","compassWorkspaceAriStaticOpts","_CompassWorkspaceAri","confluenceAdminAnnouncementBannerAriStaticOpts","bannerId","_ConfluenceAdminAnnouncementBannerAri","_bannerId","confluenceAttachmentAriStaticOpts","attachmentId","_ConfluenceAttachmentAri","_attachmentId","confluenceBlogpostAriStaticOpts","blogpostId","_ConfluenceBlogpostAri","_blogpostId","confluenceCommentAriStaticOpts","commentId","_ConfluenceCommentAri","_commentId","confluenceContentAriStaticOpts","_ConfluenceContentAri","_contentId","confluenceDatabaseAriStaticOpts","_ConfluenceDatabaseAri","confluenceEmbedAriStaticOpts","embedId","_ConfluenceEmbedAri","_embedId","confluenceEventAriStaticOpts","eventType","eventId","_ConfluenceEventAri","_eventType","_eventId","confluenceFolderAriStaticOpts","folderId","_ConfluenceFolderAri","_folderId","confluenceLongRunningTaskAriStaticOpts","taskId","_ConfluenceLongRunningTaskAri","_taskId","confluenceNoteAriStaticOpts","noteId","_ConfluenceNoteAri","_noteId","confluencePageAriStaticOpts","pageId","_ConfluencePageAri","_pageId","confluencePublicLinkAriStaticOpts","publicLinkId","_ConfluencePublicLinkAri","_publicLinkId","confluenceRoleAriStaticOpts","_ConfluenceRoleAri","confluenceSiteAriStaticOpts","_ConfluenceSiteAri","confluenceSpaceAriStaticOpts","spaceId","_ConfluenceSpaceAri","_spaceId","confluenceTaskAriStaticOpts","_ConfluenceTaskAri","confluenceTeamCalendarAriStaticOpts","calendarId","_ConfluenceTeamCalendarAri","_calendarId","confluenceUserPropertyAriStaticOpts","userPropertyId","_ConfluenceUserPropertyAri","_userPropertyId","confluenceWhiteboardAriStaticOpts","whiteboardId","_ConfluenceWhiteboardAri","_whiteboardId","confluenceWorkspaceAriStaticOpts","_ConfluenceWorkspaceAri","connectionRegistryLinkAriStaticOpts","linkId","_ConnectionRegistryLinkAri","_linkId","conversationalHelpConversationAriStaticOpts","conversationId","_ConversationalHelpConversationAri","_conversationId","conversationalHelpConversationMessageAriStaticOpts","conversationMessageId","_ConversationalHelpConversationMessageAri","_conversationMessageId","dataLakeLakeConnectionAriStaticOpts","lakeConnectionId","_DataLakeLakeConnectionAri","_lakeConnectionId","devopsContainerAriStaticOpts","_DevopsContainerAri","devopsNamespaceAriStaticOpts","namespaceId","_DevopsNamespaceAri","_namespaceId","devopsProviderAriStaticOpts","providerNamespace","providerAppId","_DevopsProviderAri","_providerNamespace","_providerAppId","devopsRelationshipAriStaticOpts","relationshipId","_DevopsRelationshipAri","_relationshipId","devopsToolAriStaticOpts","toolId","_DevopsToolAri","_toolId","ecosystemAppAriStaticOpts","_EcosystemAppAri","ecosystemAppEnvironmentVersionAriStaticOpts","versionId","_EcosystemAppEnvironmentVersionAri","_environmentId","_versionId","ecosystemConnectAppAriStaticOpts","appKey","_EcosystemConnectAppAri","_appKey","ecosystemEnvironmentAriStaticOpts","_EcosystemEnvironmentAri","ecosystemExtensionAriStaticOpts","groupId","extensionKey","_EcosystemExtensionAri","_groupId","_extensionKey","ecosystemExtensionGroupAriStaticOpts","_EcosystemExtensionGroupAri","ecosystemInstallationAriStaticOpts","_EcosystemInstallationAri","_installationId","elementsCustomEmojiMetadataAriStaticOpts","customEmojiMetadataId","_ElementsCustomEmojiMetadataAri","_customEmojiMetadataId","elementsWorkspaceAriStaticOpts","_ElementsWorkspaceAri","exusExternalUserAriStaticOpts","thirdPartySource","thirdPartyUserId","_ExusExternalUserAri","_thirdPartySource","_thirdPartyUserId","figmaFileAriStaticOpts","fileId","_FigmaFileAri","_fileId","googleDocumentAriStaticOpts","docId","_GoogleDocumentAri","_docId","googleFormAriStaticOpts","_GoogleFormAri","googlePresentationAriStaticOpts","_GooglePresentationAri","googleSpreadsheetAriStaticOpts","_GoogleSpreadsheetAri","graphBranchAriStaticOpts","branchId","_GraphBranchAri","_branchId","graphBranchHistoryAriStaticOpts","updateSequenceNumber","_GraphBranchHistoryAri","_updateSequenceNumber","graphBuildAriStaticOpts","buildId","_GraphBuildAri","_buildId","graphBuildHistoryAriStaticOpts","_GraphBuildHistoryAri","graphCommitAriStaticOpts","commitId","_GraphCommitAri","_commitId","graphContentAriStaticOpts","_GraphContentAri","graphDeploymentAriStaticOpts","deploymentId","_GraphDeploymentAri","_deploymentId","graphDeploymentHistoryAriStaticOpts","_GraphDeploymentHistoryAri","graphDesignAriStaticOpts","designId","_GraphDesignAri","_designId","graphDesignHistoryAriStaticOpts","_GraphDesignHistoryAri","graphDevopsComponentAriStaticOpts","devopsComponentId","_GraphDevopsComponentAri","_devopsComponentId","graphDocumentAriStaticOpts","_GraphDocumentAri","graphDocumentHistoryAriStaticOpts","_GraphDocumentHistoryAri","graphEmployeeAriStaticOpts","employeeId","_GraphEmployeeAri","_employeeId","graphEmployeeHistoryAriStaticOpts","_GraphEmployeeHistoryAri","graphFeatureFlagAriStaticOpts","featureFlagId","_GraphFeatureFlagAri","_featureFlagId","graphFeatureFlagHistoryAriStaticOpts","_GraphFeatureFlagHistoryAri","graphIncidentAriStaticOpts","incidentId","_GraphIncidentAri","_incidentId","graphIncidentHistoryAriStaticOpts","_GraphIncidentHistoryAri","graphJiraProjectAndDevopsToolRelationshipAriStaticOpts","_GraphJiraProjectAndDevopsToolRelationshipAri","graphJiraProjectAndDocumentationSpaceRelationshipAriStaticOpts","_GraphJiraProjectAndDocumentationSpaceRelationshipAri","graphJiraProjectAndOperationsTeamRelationshipAriStaticOpts","_GraphJiraProjectAndOperationsTeamRelationshipAri","graphJiraProjectAndVcsRepositoryRelationshipAriStaticOpts","_GraphJiraProjectAndVcsRepositoryRelationshipAri","graphJiraProjectAndVcsRepositoryRelationshipTempMigrationAriStaticOpts","_GraphJiraProjectAndVcsRepositoryRelationshipTempMigrationAri","graphOperationsWorkspaceAriStaticOpts","operationsWorkspaceId","_GraphOperationsWorkspaceAri","_operationsWorkspaceId","graphPostIncidentReviewAriStaticOpts","postIncidentReviewId","_GraphPostIncidentReviewAri","_postIncidentReviewId","graphPostIncidentReviewHistoryAriStaticOpts","_GraphPostIncidentReviewHistoryAri","graphProjectAriStaticOpts","_GraphProjectAri","graphPullRequestAriStaticOpts","_GraphPullRequestAri","graphPullRequestHistoryAriStaticOpts","_GraphPullRequestHistoryAri","graphRemoteLinkAriStaticOpts","remoteLinkId","_GraphRemoteLinkAri","_remoteLinkId","graphRemoteLinkHistoryAriStaticOpts","_GraphRemoteLinkHistoryAri","graphRepositoryAriStaticOpts","_GraphRepositoryAri","graphSecurityContainerAriStaticOpts","securityContainerId","_GraphSecurityContainerAri","_securityContainerId","graphSecurityWorkspaceAriStaticOpts","securityWorkspaceId","_GraphSecurityWorkspaceAri","_securityWorkspaceId","graphServiceAriStaticOpts","serviceId","_GraphServiceAri","_serviceId","graphServiceAndJiraProjectRelationshipAriStaticOpts","_GraphServiceAndJiraProjectRelationshipAri","graphServiceAndOperationsTeamRelationshipAriStaticOpts","_GraphServiceAndOperationsTeamRelationshipAri","graphServiceAndVcsRepositoryRelationshipAriStaticOpts","_GraphServiceAndVcsRepositoryRelationshipAri","graphServiceRelationshipAriStaticOpts","_GraphServiceRelationshipAri","graphVideoAriStaticOpts","entityUUID","_GraphVideoAri","_entityUUID","graphVideoHistoryAriStaticOpts","_GraphVideoHistoryAri","graphVulnerabilityAriStaticOpts","vulnerabilityId","_GraphVulnerabilityAri","_vulnerabilityId","graphVulnerabilityHistoryAriStaticOpts","_GraphVulnerabilityHistoryAri","graphWorkspaceAriStaticOpts","_GraphWorkspaceAri","helpArticleAriStaticOpts","helpObjectId","_HelpArticleAri","_helpObjectId","helpChannelAriStaticOpts","_HelpChannelAri","helpHelpCenterAriStaticOpts","helpCenterId","_HelpHelpCenterAri","_helpCenterId","helpHelpDeskAriStaticOpts","helpDeskId","_HelpHelpDeskAri","_helpDeskId","helpLayoutAriStaticOpts","layoutId","_HelpLayoutAri","_layoutId","helpPortalAriStaticOpts","_HelpPortalAri","helpRequestFormAriStaticOpts","_HelpRequestFormAri","identityAppAriStaticOpts","platform","_IdentityAppAri","_platform","identityAuthPolicyAriStaticOpts","authPolicyId","_IdentityAuthPolicyAri","_authPolicyId","identityCustomerDirectoryAriStaticOpts","customerDirectoryId","_IdentityCustomerDirectoryAri","_customerDirectoryId","identityCustomerOrganizationAriStaticOpts","customerOrganizationId","_IdentityCustomerOrganizationAri","_customerOrganizationId","identityDirectoryAriStaticOpts","directoryId","_IdentityDirectoryAri","_directoryId","identityDomainAriStaticOpts","base64Domain","_IdentityDomainAri","_base64Domain","identityGroupAriStaticOpts","_IdentityGroupAri","identityOauthClientAriStaticOpts","_IdentityOauthClientAri","identityRoleAriStaticOpts","_IdentityRoleAri","identitySiteAriStaticOpts","_IdentitySiteAri","identityTeamAriStaticOpts","_IdentityTeamAri","identityTeamMemberAriStaticOpts","_IdentityTeamMemberAri","identityThirdPartyGroupAriStaticOpts","_IdentityThirdPartyGroupAri","identityThirdPartyUserAriStaticOpts","_IdentityThirdPartyUserAri","identityUserAriStaticOpts","_IdentityUserAri","identityUserbaseAriStaticOpts","userbaseId","_IdentityUserbaseAri","_userbaseId","identityUserGrantAriStaticOpts","_IdentityUserGrantAri","jiraAnnouncementBannerAriStaticOpts","announcementBannerHashId","_JiraAnnouncementBannerAri","_announcementBannerHashId","jiraAvailableFieldsAriStaticOpts","issueTypeId","_JiraAvailableFieldsAri","_issueTypeId","jiraBranchAriStaticOpts","_JiraBranchAri","jiraBranchHistoryAriStaticOpts","_JiraBranchHistoryAri","jiraBuildAriStaticOpts","_JiraBuildAri","jiraBuildHistoryAriStaticOpts","_JiraBuildHistoryAri","jiraBulkOperationTaskAriStaticOpts","_JiraBulkOperationTaskAri","jiraCommentAriStaticOpts","_JiraCommentAri","jiraCommitAriStaticOpts","_JiraCommitAri","jiraComponentAriStaticOpts","_JiraComponentAri","jiraConnectAppAriStaticOpts","_JiraConnectAppAri","jiraDashboardAriStaticOpts","_JiraDashboardAri","jiraDeploymentAriStaticOpts","_JiraDeploymentAri","jiraDeploymentHistoryAriStaticOpts","_JiraDeploymentHistoryAri","jiraDesignAriStaticOpts","_JiraDesignAri","jiraDesignHistoryAriStaticOpts","_JiraDesignHistoryAri","jiraDevopsComponentAriStaticOpts","_JiraDevopsComponentAri","jiraDocumentAriStaticOpts","_JiraDocumentAri","jiraDocumentHistoryAriStaticOpts","_JiraDocumentHistoryAri","jiraEntitlementAriStaticOpts","_JiraEntitlementAri","jiraEntityPropertyAriStaticOpts","entityType","entityId","propertyKey","_JiraEntityPropertyAri","_entityType","_entityId","_propertyKey","jiraFavouriteAriStaticOpts","favouriteId","_JiraFavouriteAri","_favouriteId","jiraFeatureFlagAriStaticOpts","_JiraFeatureFlagAri","jiraFeatureFlagHistoryAriStaticOpts","_JiraFeatureFlagHistoryAri","jiraFilterAriStaticOpts","filterId","_JiraFilterAri","_filterId","jiraFilterEmailSubscriptionAriStaticOpts","filterEmailSubscriptionId","_JiraFilterEmailSubscriptionAri","_filterEmailSubscriptionId","jiraIncidentAriStaticOpts","_JiraIncidentAri","jiraIncidentHistoryAriStaticOpts","_JiraIncidentHistoryAri","jiraIssueAriStaticOpts","issueId","_JiraIssueAri","_issueId","jiraIssueAttachmentAriStaticOpts","_JiraIssueAttachmentAri","jiraIssueCommentAriStaticOpts","_JiraIssueCommentAri","jiraIssueFieldMetadataAriStaticOpts","fieldId","_JiraIssueFieldMetadataAri","_fieldId","jiraIssueFieldOptionAriStaticOpts","optionId","_JiraIssueFieldOptionAri","_optionId","jiraIssueHistoryAriStaticOpts","changeGroupId","_JiraIssueHistoryAri","_changeGroupId","jiraIssueLinkAriStaticOpts","_JiraIssueLinkAri","jiraIssueLinkTypeAriStaticOpts","issueLinkTypeId","_JiraIssueLinkTypeAri","_issueLinkTypeId","jiraIssueRemoteLinkAriStaticOpts","_JiraIssueRemoteLinkAri","jiraIssueSearchViewAriStaticOpts","viewId","_JiraIssueSearchViewAri","_viewId","jiraIssueStatusAriStaticOpts","issuestatusId","_JiraIssueStatusAri","_issuestatusId","jiraIssueTypeAriStaticOpts","_JiraIssueTypeAri","jiraIssueTypeSchemeAriStaticOpts","issueTypeSchemeId","_JiraIssueTypeSchemeAri","_issueTypeSchemeId","jiraIssueTypeSchemeMappingAriStaticOpts","_JiraIssueTypeSchemeMappingAri","jiraIssueWorklogAriStaticOpts","worklogId","_JiraIssueWorklogAri","_worklogId","jiraIssuefieldvalueAriStaticOpts","_JiraIssuefieldvalueAri","jiraNavigationConfigAriStaticOpts","navKey","_JiraNavigationConfigAri","_navKey","jiraNavigationItemAriStaticOpts","scopeType","scopeId","itemId","_JiraNavigationItemAri","_scopeType","_scopeId","_itemId","jiraNotificationTypeAriStaticOpts","notificationTypeId","_JiraNotificationTypeAri","_notificationTypeId","jiraNotificationTypeSchemeAriStaticOpts","notificationTypeSchemeId","_JiraNotificationTypeSchemeAri","_notificationTypeSchemeId","jiraNotificationUserPreferenceAriStaticOpts","notificationUserPreferenceId","_JiraNotificationUserPreferenceAri","_notificationUserPreferenceId","jiraOperationsWorkspaceAriStaticOpts","_JiraOperationsWorkspaceAri","jiraPermissionSchemeAriStaticOpts","schemeId","_JiraPermissionSchemeAri","_schemeId","jiraPlanAriStaticOpts","planId","_JiraPlanAri","_planId","jiraPlanCrossProjectScenarioVersionAriStaticOpts","crossProjectScenarioVersionId","_JiraPlanCrossProjectScenarioVersionAri","_crossProjectScenarioVersionId","jiraPlanCrossProjectVersionAriStaticOpts","crossProjectVersionId","_JiraPlanCrossProjectVersionAri","_crossProjectVersionId","jiraPlanScenarioAriStaticOpts","scenarioId","_JiraPlanScenarioAri","_scenarioId","jiraPlanScenarioIssueAriStaticOpts","scenarioIssueId","_JiraPlanScenarioIssueAri","_scenarioIssueId","jiraPlanScenarioIssueFieldAriStaticOpts","_JiraPlanScenarioIssueFieldAri","jiraPlanScenarioVersionAriStaticOpts","scenarioVersionId","_JiraPlanScenarioVersionAri","_scenarioVersionId","jiraPostIncidentReviewAriStaticOpts","_JiraPostIncidentReviewAri","jiraPostIncidentReviewHistoryAriStaticOpts","_JiraPostIncidentReviewHistoryAri","jiraPostIncidentReviewLinkAriStaticOpts","postIncidentReviewLinkId","_JiraPostIncidentReviewLinkAri","_postIncidentReviewLinkId","jiraPriorityAriStaticOpts","priorityId","_JiraPriorityAri","_priorityId","jiraProductAriStaticOpts","_JiraProductAri","jiraProjectAriStaticOpts","_JiraProjectAri","jiraProjectCategoryAriStaticOpts","projectCategoryId","_JiraProjectCategoryAri","_projectCategoryId","jiraProjectFeatureAriStaticOpts","featureKey","_JiraProjectFeatureAri","_featureKey","jiraProjectOverviewAriStaticOpts","overviewId","_JiraProjectOverviewAri","_overviewId","jiraProjectRoleActorAriStaticOpts","projectRoleActorId","_JiraProjectRoleActorAri","_projectRoleActorId","jiraProjectShortcutAriStaticOpts","shortcutId","_JiraProjectShortcutAri","_shortcutId","jiraProjectTypeAriStaticOpts","projectTypeId","_JiraProjectTypeAri","_projectTypeId","jiraPullRequestAriStaticOpts","_JiraPullRequestAri","jiraPullRequestHistoryAriStaticOpts","_JiraPullRequestHistoryAri","jiraRemoteLinkAriStaticOpts","_JiraRemoteLinkAri","jiraRemoteLinkHistoryAriStaticOpts","_JiraRemoteLinkHistoryAri","jiraRepositoryAriStaticOpts","_JiraRepositoryAri","jiraResolutionAriStaticOpts","resolutionId","_JiraResolutionAri","_resolutionId","jiraResourceUsageMetricAriStaticOpts","metricKey","_JiraResourceUsageMetricAri","_metricKey","jiraResourceUsageRecommendationAriStaticOpts","recommendationId","_JiraResourceUsageRecommendationAri","_recommendationId","jiraRoleAriStaticOpts","jiraRoleType","jiraRoleTypeId","_JiraRoleAri","_jiraRoleType","_jiraRoleTypeId","jiraScreenTabAriStaticOpts","screenId","tabId","_JiraScreenTabAri","_screenId","_tabId","jiraSecurityContainerAriStaticOpts","_JiraSecurityContainerAri","jiraSecurityLevelAriStaticOpts","securityLevelId","_JiraSecurityLevelAri","_securityLevelId","jiraSecurityWorkspaceAriStaticOpts","_JiraSecurityWorkspaceAri","jiraSiteAriStaticOpts","_JiraSiteAri","jiraSprintAriStaticOpts","sprintId","_JiraSprintAri","_sprintId","jiraUserBroadcastMessageAriStaticOpts","broadcastMessageId","_JiraUserBroadcastMessageAri","_broadcastMessageId","jiraVersionAriStaticOpts","_JiraVersionAri","jiraVersionApproverAriStaticOpts","approverId","_JiraVersionApproverAri","_approverId","jiraVulnerabilityAriStaticOpts","_JiraVulnerabilityAri","jiraVulnerabilityHistoryAriStaticOpts","_JiraVulnerabilityHistoryAri","jiraWorkflowAriStaticOpts","_JiraWorkflowAri","jiraWorkflowSchemeAriStaticOpts","workflowSchemeId","_JiraWorkflowSchemeAri","_workflowSchemeId","jiraWorklogAriStaticOpts","_JiraWorklogAri","jiraWorkspaceAriStaticOpts","_JiraWorkspaceAri","jiraAlignEpicAriStaticOpts","epicId","_JiraAlignEpicAri","_instanceId","_epicId","instanceId","jiraAlignInstanceAriStaticOpts","_JiraAlignInstanceAri","jiraCoreRoleAriStaticOpts","_JiraCoreRoleAri","jiraCoreSiteAriStaticOpts","_JiraCoreSiteAri","jiraServicedeskApprovalAriStaticOpts","approvalId","_JiraServicedeskApprovalAri","_approvalId","jiraServicedeskCalendarEventAriStaticOpts","calendarEventId","_JiraServicedeskCalendarEventAri","_calendarEventId","jiraServicedeskCannedResponseAriStaticOpts","cannedResponseId","_JiraServicedeskCannedResponseAri","_cannedResponseId","jiraServicedeskOrganizationAriStaticOpts","organizationId","_JiraServicedeskOrganizationAri","_organizationId","jiraServicedeskQueueAriStaticOpts","queueId","_JiraServicedeskQueueAri","_queueId","jiraServicedeskRequestTypeAriStaticOpts","requestTypeId","_JiraServicedeskRequestTypeAri","_requestTypeId","jiraServicedeskRoleAriStaticOpts","_JiraServicedeskRoleAri","jiraServicedeskSiteAriStaticOpts","_JiraServicedeskSiteAri","jiraServicedeskSlaAriStaticOpts","slaId","_JiraServicedeskSlaAri","_slaId","jiraSoftwareBoardAriStaticOpts","_JiraSoftwareBoardAri","jiraSoftwareBoardFeatureAriStaticOpts","_JiraSoftwareBoardFeatureAri","jiraSoftwareBoardIssueListAriStaticOpts","issueListId","_JiraSoftwareBoardIssueListAri","_issueListId","jiraSoftwareCardAriStaticOpts","cardId","_JiraSoftwareCardAri","_cardId","jiraSoftwareCardColorAriStaticOpts","cardColorId","_JiraSoftwareCardColorAri","_cardColorId","jiraSoftwareCardLayoutAriStaticOpts","cardLayoutId","_JiraSoftwareCardLayoutAri","_cardLayoutId","jiraSoftwareCardParentAriStaticOpts","cardParentId","_JiraSoftwareCardParentAri","_cardParentId","jiraSoftwareColumnAriStaticOpts","columnId","_JiraSoftwareColumnAri","_columnId","jiraSoftwareCustomFilterAriStaticOpts","customFilterId","_JiraSoftwareCustomFilterAri","_customFilterId","jiraSoftwareRoleAriStaticOpts","_JiraSoftwareRoleAri","jiraSoftwareSiteAriStaticOpts","_JiraSoftwareSiteAri","jiraSoftwareSwimlaneAriStaticOpts","swimlaneId","_JiraSoftwareSwimlaneAri","_swimlaneId","jiraSoftwareUserBoardConfigAriStaticOpts","_JiraSoftwareUserBoardConfigAri","jiraSoftwareViewConfigAriStaticOpts","viewType","_JiraSoftwareViewConfigAri","_viewType","linkingPlatformDatasourceAriStaticOpts","_LinkingPlatformDatasourceAri","loomSiteAriStaticOpts","_LoomSiteAri","makerSpaceGroupAriStaticOpts","_MakerSpaceGroupAri","mapiRoleAriStaticOpts","_MapiRoleAri","marketingCustomerDomainAriStaticOpts","domainBase64","_MarketingCustomerDomainAri","_domainBase64","marketplaceTeamAriStaticOpts","_MarketplaceTeamAri","measurementEmailUuidAriStaticOpts","emailId","_MeasurementEmailUuidAri","_emailId","measurementSiteUserAriStaticOpts","aaId","_MeasurementSiteUserAri","_aaId","measurementUserAriStaticOpts","_MeasurementUserAri","mediaFileAriStaticOpts","_MediaFileAri","mercuryCommentAriStaticOpts","commentUuid","_MercuryCommentAri","_commentUuid","mercuryFocusAreaAriStaticOpts","focusAreaId","_MercuryFocusAreaAri","_focusAreaId","mercuryFocusAreaStatusUpdateAriStaticOpts","focusAreaStatusUpdateId","_MercuryFocusAreaStatusUpdateAri","_focusAreaStatusUpdateId","mercuryProgramAriStaticOpts","programId","_MercuryProgramAri","_programId","mercuryProgramStatusUpdateAriStaticOpts","programStatusUpdateId","_MercuryProgramStatusUpdateAri","_programStatusUpdateId","mercuryRoleAriStaticOpts","_MercuryRoleAri","mercurySiteAriStaticOpts","_MercurySiteAri","mercuryWorkspaceAriStaticOpts","_MercuryWorkspaceAri","microsoftChannelAriStaticOpts","tenantId","channelId","_MicrosoftChannelAri","_tenantId","_channelId","microsoftSharepointDocumentAriStaticOpts","driveId","_MicrosoftSharepointDocumentAri","_driveId","oauthClientAriStaticOpts","_OauthClientAri","opsgenieAccountLoginAriStaticOpts","accountLoginId","_OpsgenieAccountLoginAri","_accountLoginId","opsgenieAccountSettingsAriStaticOpts","accountSettingsId","_OpsgenieAccountSettingsAri","_accountSettingsId","opsgenieAlertAriStaticOpts","_OpsgenieAlertAri","opsgenieAlertRecipientLinkAriStaticOpts","recipientType","recipientId","_OpsgenieAlertRecipientLinkAri","_recipientType","_recipientId","opsgenieApiRequestMetricAriStaticOpts","apiRequestMetricId","_OpsgenieApiRequestMetricAri","_apiRequestMetricId","opsgenieCallRoutingAriStaticOpts","callRoutingId","_OpsgenieCallRoutingAri","_callRoutingId","opsgenieCustomRoleAriStaticOpts","opsgenieRoleType","customRoleId","_OpsgenieCustomRoleAri","_opsgenieRoleType","_customRoleId","opsgenieDeploymentAriStaticOpts","_OpsgenieDeploymentAri","opsgenieDeploymentServiceLinkAriStaticOpts","_OpsgenieDeploymentServiceLinkAri","opsgenieEscalationAriStaticOpts","escalationId","_OpsgenieEscalationAri","_escalationId","opsgenieEventAriStaticOpts","_OpsgenieEventAri","opsgenieIncidentAriStaticOpts","_OpsgenieIncidentAri","opsgenieIncidentAlertLinkAriStaticOpts","_OpsgenieIncidentAlertLinkAri","opsgenieIncidentStatusUpdateAriStaticOpts","incidentStatusUpdateId","_OpsgenieIncidentStatusUpdateAri","_incidentStatusUpdateId","opsgenieIncomingCallHistoryAriStaticOpts","incomingCallEventId","_OpsgenieIncomingCallHistoryAri","_incomingCallEventId","opsgenieIntegrationAriStaticOpts","integrationId","_OpsgenieIntegrationAri","_integrationId","opsgenieNotificationAriStaticOpts","notificationId","_OpsgenieNotificationAri","_notificationId","opsgenieRoleAriStaticOpts","_OpsgenieRoleAri","opsgenieScheduleAriStaticOpts","scheduleId","_OpsgenieScheduleAri","_scheduleId","opsgenieScheduleRotationAriStaticOpts","scheduleRotationId","_OpsgenieScheduleRotationAri","_scheduleRotationId","opsgenieSiteAriStaticOpts","_OpsgenieSiteAri","opsgenieTeamAriStaticOpts","opsgenieTeamId","_OpsgenieTeamAri","_opsgenieTeamId","opsgenieTimelineAriStaticOpts","timelineEntryId","_OpsgenieTimelineAri","_timelineEntryId","opsgenieWorkspaceAriStaticOpts","_OpsgenieWorkspaceAri","orgPolicyPolicyAriStaticOpts","policyId","_OrgPolicyPolicyAri","_policyId","papiApiAriStaticOpts","uuid","_PapiApiAri","_uuid","papiRoleAriStaticOpts","_PapiRoleAri","passionfruitUserAriStaticOpts","_PassionfruitUserAri","peopleDataCostCenterAriStaticOpts","costCenterId","_PeopleDataCostCenterAri","_costCenterId","peopleDataJobProfileAriStaticOpts","jobProfileId","_PeopleDataJobProfileAri","_jobProfileId","peopleDataPositionAriStaticOpts","positionId","_PeopleDataPositionAri","_positionId","peopleDataSupervisoryOrgAriStaticOpts","supervisoryOrgId","_PeopleDataSupervisoryOrgAri","_supervisoryOrgId","peopleDataWorkerAriStaticOpts","workerId","_PeopleDataWorkerAri","_workerId","peoplePerftoolCalibrationAriStaticOpts","_PeoplePerftoolCalibrationAri","peoplePerftoolFeedbackAriStaticOpts","_PeoplePerftoolFeedbackAri","peoplePerftoolPerformanceAriStaticOpts","_PeoplePerftoolPerformanceAri","platformClassificationTagAriStaticOpts","tagId","_PlatformClassificationTagAri","_tagId","platformIntegrationAriStaticOpts","integrationKey","_PlatformIntegrationAri","_integrationKey","platformLifecycleResourceAriStaticOpts","lifecycleResourceId","_PlatformLifecycleResourceAri","_lifecycleResourceId","platformLifecycleResourcePackageAriStaticOpts","lifecycleResourcePackageId","_PlatformLifecycleResourcePackageAri","_lifecycleResourcePackageId","platformLifecycleResourcePackageTypeAriStaticOpts","resourcePackageTypeId","_PlatformLifecycleResourcePackageTypeAri","_resourcePackageTypeId","platformOrgAriStaticOpts","orgId","_PlatformOrgAri","_orgId","platformOrgUserAriStaticOpts","_PlatformOrgUserAri","platformSecureTunnelAriStaticOpts","secureTunnelId","_PlatformSecureTunnelAri","_secureTunnelId","platformSiteAriStaticOpts","_PlatformSiteAri","platformServicesStreamhubSchemaAriStaticOpts","streamhubSchemaId","_PlatformServicesStreamhubSchemaAri","_streamhubSchemaId","pollinatorCheckAriStaticOpts","checkId","_PollinatorCheckAri","_checkId","postOfficeMessageInstanceAriStaticOpts","messageTemplateId","messageInstanceId","_PostOfficeMessageInstanceAri","_messageTemplateId","_messageInstanceId","postOfficeMessageTemplateAriStaticOpts","_PostOfficeMessageTemplateAri","rovoSiteAriStaticOpts","_RovoSiteAri","runtimeAuthClientRoleAriStaticOpts","_RuntimeAuthClientRoleAri","searchEventAriStaticOpts","_SearchEventAri","searchForwardDocumentAriStaticOpts","documentType","_SearchForwardDocumentAri","_documentType","searchForwardDocumentSubscriptionAriStaticOpts","subscriptionType","_SearchForwardDocumentSubscriptionAri","_subscriptionType","slackChannelAriStaticOpts","_SlackChannelAri","slackMessageAriStaticOpts","messageId","_SlackMessageAri","_messageId","statuspageRoleAriStaticOpts","_StatuspageRoleAri","statuspageSiteAriStaticOpts","_StatuspageSiteAri","supportCustomerAriStaticOpts","_SupportCustomerAri","teamsTeamAriStaticOpts","_TeamsTeamAri","townsquareCommentAriStaticOpts","_TownsquareCommentAri","townsquareGoalAriStaticOpts","goalUuid","_TownsquareGoalAri","_goalUuid","townsquareHelpPointerAriStaticOpts","helpPointerUuid","_TownsquareHelpPointerAri","_helpPointerUuid","townsquareLearningAriStaticOpts","learningUuid","_TownsquareLearningAri","_learningUuid","townsquareProjectAriStaticOpts","projectUuid","_TownsquareProjectAri","_projectUuid","townsquareQuestionAriStaticOpts","questionUuid","_TownsquareQuestionAri","_questionUuid","townsquareRoleAriStaticOpts","_TownsquareRoleAri","townsquareSiteAriStaticOpts","_TownsquareSiteAri","townsquareTagAriStaticOpts","tagUuid","_TownsquareTagAri","_tagUuid","townsquareWorkspaceAriStaticOpts","_TownsquareWorkspaceAri","trelloAttachmentAriStaticOpts","_TrelloAttachmentAri","trelloBoardAriStaticOpts","_TrelloBoardAri","trelloCardAriStaticOpts","_TrelloCardAri","trelloEnterpriseAriStaticOpts","enterpriseId","_TrelloEnterpriseAri","_enterpriseId","trelloListAriStaticOpts","listId","_TrelloListAri","_listId","trelloRoleAriStaticOpts","_TrelloRoleAri","trelloSiteAriStaticOpts","_TrelloSiteAri","trelloUserAriStaticOpts","_TrelloUserAri","trelloWorkspaceAriStaticOpts","_TrelloWorkspaceAri","unifiedHelpRoleAriStaticOpts","_UnifiedHelpRoleAri","unifiedHelpSiteAriStaticOpts","_UnifiedHelpSiteAri","unifiedHelpWorkspaceAriStaticOpts","_UnifiedHelpWorkspaceAri","unifiedPortableProfileLinkedAccountAriStaticOpts","linkedAccountInternalId","_UnifiedPortableProfileLinkedAccountAri","_linkedAccountInternalId","unifiedPortableProfileParentAccountAriStaticOpts","parentAccountInternalId","_UnifiedPortableProfileParentAccountAri","_parentAccountInternalId","unifiedPortableProfileUnifiedAccountAriStaticOpts","_UnifiedPortableProfileUnifiedAccountAri","unifiedPortableProfileUnifiedProfileAriStaticOpts","unifiedProfileInternalId","_UnifiedPortableProfileUnifiedProfileAri","_unifiedProfileInternalId","virtualAgentConfigurationAriStaticOpts","configurationId","_VirtualAgentConfigurationAri","_configurationId","virtualAgentConversationAriStaticOpts","_VirtualAgentConversationAri","virtualAgentFlowEditorAriStaticOpts","flowEditorId","_VirtualAgentFlowEditorAri","_flowEditorId","virtualAgentIntentProjectionAriStaticOpts","intentId","_VirtualAgentIntentProjectionAri","_intentId","virtualAgentIntentQuestionProjectionAriStaticOpts","intentQuestionId","_VirtualAgentIntentQuestionProjectionAri","_intentQuestionId","virtualAgentIntentRuleProjectionAriStaticOpts","_VirtualAgentIntentRuleProjectionAri","virtualAgentIntentTemplateAriStaticOpts","intentTemplateId","_VirtualAgentIntentTemplateAri","_intentTemplateId","workatoJobAriStaticOpts","workatoTenantKey","jobId","_WorkatoJobAri","_workatoTenantKey","_jobId","workatoRecipeAriStaticOpts","recipeId","_WorkatoRecipeAri","_recipeId","workdayCostCenterAriStaticOpts","workdayTenantKey","costCenterWorkdayId","_WorkdayCostCenterAri","_workdayTenantKey","_costCenterWorkdayId","workdayJobProfileAriStaticOpts","jobProfileWorkdayId","_WorkdayJobProfileAri","_jobProfileWorkdayId","workdayPositionAriStaticOpts","positionWorkdayId","_WorkdayPositionAri","_positionWorkdayId","workdayStaffAriStaticOpts","staffId","_WorkdayStaffAri","_staffId","workdaySupervisoryOrgAriStaticOpts","supervisoryOrgWorkdayId","_WorkdaySupervisoryOrgAri","_supervisoryOrgWorkdayId","workdayWorkerAriStaticOpts","workerWorkdayId","_WorkdayWorkerAri","_workerWorkdayId","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","entry","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","getNative","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","Symbol","iteratee","eq","castPath","toKey","object","getRawTag","objectToString","symToStringTag","toStringTag","isFunction","isMasked","toSource","reIsHostCtor","funcProto","Function","objectProto","funcToString","reIsNative","arrayMap","isSymbol","symbolProto","symbolToString","baseToString","isKey","stringToPath","coreJsData","freeGlobal","isKeyable","__data__","baseIsNative","getValue","nativeObjectToString","isOwn","tag","unmasked","nativeCreate","reIsDeepProp","reIsPlainProp","maskSrcKey","uid","IE_PROTO","func","assocIndexOf","splice","pop","getMapData","memoize","freeSelf","self","root","memoizeCapped","rePropName","reEscapeChar","string","number","quote","subString","baseGet","baseGetTag","isObjectLike","resolver","TypeError","memoized","apply","Cache","globalObject","getGlobal","extendStatics","d","setPrototypeOf","__proto__","p","__extends","__","__assign","assign","t","s","n","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","c","r","Reflect","decorate","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","f","kind","descriptor","done","access","addInitializer","unshift","__runInitializers","thisArg","useValue","__propKey","__setFunctionName","prefix","description","configurable","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","P","generator","fulfilled","step","next","rejected","__generator","y","g","label","sent","trys","ops","verb","iterator","v","op","__createBinding","o","m","k","k2","__esModule","writable","__values","__read","ar","__spread","__spreadArrays","il","j","jl","__spreadArray","pack","l","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__classPrivateFieldGet","receiver","state","__classPrivateFieldSet","__classPrivateFieldIn","__addDisposableResource","env","dispose","asyncDispose","_SuppressedError","SuppressedError","suppressed","__disposeResources","fail","hasError","rec"],"sourceRoot":""}